var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_struct","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_ones","count_rows","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[852,"polars::chunked_array::arithmetic"],[880,"polars::chunked_array::builder"],[1141,"polars::chunked_array::builder::list"],[1158,"polars::chunked_array::cast"],[1187,"polars::chunked_array::collect"],[1201,"polars::chunked_array::float"],[1203,"polars::chunked_array::from_iterator_par"],[1207,"polars::chunked_array::iterator"],[1262,"polars::chunked_array::iterator::par"],[1264,"polars::chunked_array::metadata"],[1548,"polars::chunked_array::object"],[1625,"polars::chunked_array::object::builder"],[1648,"polars::chunked_array::object::registry"],[1676,"polars::chunked_array::ops"],[1885,"polars::chunked_array::ops::arity"],[1921,"polars::chunked_array::ops::float_sorted_arg_max"],[1923,"polars::chunked_array::ops::gather"],[1926,"polars::chunked_array::ops::search_sorted"],[1956,"polars::chunked_array::ops::sort"],[1963,"polars::chunked_array::ops::sort::arg_bottom_k"],[1964,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1972,"polars::chunked_array::ops::sort::options"],[1985,"polars::chunked_array::temporal"],[1993,"polars::chunked_array::temporal::conversion"],[1996,"polars::datatypes"],[3523,"polars::datatypes::categorical"],[3540,"polars::datatypes::categorical::revmap"],[3546,"polars::datatypes::categorical::string_cache"],[3565,"polars::datatypes::enum_"],[3583,"polars::docs"],[3585,"polars::error"],[3677,"polars::error::PolarsError"],[3681,"polars::error::constants"],[3684,"polars::frame"],[3961,"polars::frame::column"],[4206,"polars::frame::explode"],[4235,"polars::frame::group_by"],[4473,"polars::frame::group_by::GroupByMethod"],[4474,"polars::frame::group_by::GroupsProxy"],[4476,"polars::frame::group_by::aggregations"],[4489,"polars::frame::group_by::expr"],[4492,"polars::frame::row"],[4602,"polars::functions"],[4604,"polars::prelude"],[9988,"polars::prelude::AggExpr"],[9995,"polars::prelude::BooleanFunction"],[9998,"polars::prelude::DslPlan"],[10049,"polars::prelude::Expr"],[10084,"polars::prelude::FunctionExpr"],[10106,"polars::prelude::GroupByMethod"],[10107,"polars::prelude::GroupsProxy"],[10109,"polars::prelude::LiteralValue"],[10112,"polars::prelude::PolarsError"],[10116,"polars::prelude::StringFunction"],[10130,"polars::prelude::TemporalFunction"],[10132,"polars::prelude::_internal"],[10154,"polars::prelude::aggregations"],[10167,"polars::prelude::arity"],[10203,"polars::prelude::array"],[10222,"polars::prelude::binary"],[10239,"polars::prelude::buffer"],[10313,"polars::prelude::buffer::Buffer"],[10316,"polars::prelude::cat"],[10317,"polars::prelude::chunkedarray"],[10383,"polars::prelude::chunkedarray::string"],[10422,"polars::prelude::chunkedarray::string::infer"],[10453,"polars::prelude::cloud"],[10503,"polars::prelude::cloud::options"],[10512,"polars::prelude::compression"],[10530,"polars::prelude::datatypes"],[10811,"polars::prelude::datatypes::categorical"],[10828,"polars::prelude::datatypes::categorical::revmap"],[10834,"polars::prelude::datatypes::categorical::string_cache"],[10838,"polars::prelude::datatypes::enum_"],[10839,"polars::prelude::datetime"],[10842,"polars::prelude::default_arrays"],[10848,"polars::prelude::dt"],[10900,"polars::prelude::expr"],[10903,"polars::prelude::fixed_size_list"],[10923,"polars::prelude::float_sorted_arg_max"],[10925,"polars::prelude::function_expr"],[11099,"polars::prelude::function_expr::BooleanFunction"],[11102,"polars::prelude::function_expr::FunctionExpr"],[11124,"polars::prelude::function_expr::StringFunction"],[11138,"polars::prelude::function_expr::TemporalFunction"],[11140,"polars::prelude::function_expr::cat"],[11142,"polars::prelude::function_expr::pow"],[11146,"polars::prelude::function_expr::rolling"],[11177,"polars::prelude::function_expr::rolling_by"],[11208,"polars::prelude::gather"],[11211,"polars::prelude::interpolate"],[11215,"polars::prelude::interpolate_by"],[11216,"polars::prelude::mode"],[11217,"polars::prelude::nan_propagating_aggregate"],[11222,"polars::prelude::null"],[11253,"polars::prelude::schema_inference"],[11280,"polars::prelude::search_sorted"],[11286,"polars::prelude::series"],[11308,"polars::prelude::sort"],[11315,"polars::prelude::sort::arg_bottom_k"],[11316,"polars::prelude::sort::arg_sort_multiple"],[11324,"polars::prelude::sort::options"],[11337,"polars::prelude::strings"],[11391,"polars::prelude::udf"],[11397,"polars::prelude::utf8"],[11401,"polars::series"],[11867,"polars::series::amortized_iter"],[11891,"polars::series::arithmetic"],[11912,"polars::series::arithmetic::checked"],[11918,"polars::series::ops"],[11945,"dyn_clone::sealed"],[11946,"polars_core::datatypes"],[11947,"polars_core::chunked_array"],[11948,"polars_error"],[11949,"core::result"],[11950,"polars_core::series"],[11951,"core::ops::function"],[11952,"num_traits"],[11953,"num_traits::cast"],[11954,"polars_core::series::arithmetic::borrowed"],[11955,"polars_core::frame::group_by::proxy"],[11956,"polars_core::chunked_array::object"],[11957,"core::option"],[11958,"polars_arrow::array"],[11959,"alloc::boxed"],[11960,"core::iter::traits::iterator"],[11961,"polars_core::chunked_array::list::iterator"],[11962,"polars_utils::pl_str"],[11963,"core::marker"],[11964,"alloc::borrow"],[11965,"polars_core::series::amortized_iter"],[11966,"alloc::string"],[11967,"polars_core::datatypes::dtype"],[11968,"polars_arrow::array::binview::view"],[11969,"polars_core::chunked_array::ops::sort::options"],[11970,"polars_core::frame::column"],[11971,"polars_core::chunked_array::metadata::md_trait"],[11972,"polars_core::chunked_array::cast"],[11973,"polars_core::series::arithmetic::borrowed::checked"],[11974,"core::slice::iter"],[11975,"core::iter::adapters::map"],[11976,"alloc::vec"],[11977,"compact_str"],[11978,"polars_core::chunked_array::metadata"],[11979,"core::iter::traits::double_ended"],[11980,"polars_arrow::offset"],[11981,"core::fmt"],[11982,"core::iter::traits::collect"],[11983,"core::convert"],[11984,"core::borrow"],[11985,"polars_core::chunked_array::from_iterator"],[11986,"polars_arrow::bitmap::immutable"],[11987,"polars_arrow::pushable"],[11988,"rayon::iter"],[11989,"core::iter::traits::exact_size"],[11990,"core::clone"],[11991,"polars_arrow::trusted_len"],[11992,"polars_core::datatypes::any_value"],[11993,"polars_arrow::array::binary"],[11994,"std::sync::rwlock"],[11995,"polars_core::chunked_array::logical"],[11996,"polars_core::datatypes::time_unit"],[11997,"polars_core::series::series_trait"],[11998,"polars_core::chunked_array::iterator"],[11999,"polars_core::scalar"],[12000,"polars_core::chunked_array::metadata::guard"],[12001,"polars_core::chunked_array::metadata::interior_mutable"],[12002,"alloc::sync"],[12003,"core::ops::range"],[12004,"polars_core::datatypes::field"],[12005,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12006,"polars_core::chunked_array::ops::rolling_window"],[12007,"polars_ops::chunked_array::scatter"],[12008,"polars_utils::index"],[12009,"ahash::random_state"],[12010,"polars_utils::hashing"],[12011,"ndarray"],[12012,"ndarray::dimension::dim"],[12013,"ndarray::data_repr"],[12014,"either"],[12015,"core::any"],[12016,"polars_core::frame"],[12017,"polars_core::chunked_array::arithmetic::numeric"],[12018,"polars_core::chunked_array::builder::list::anonymous"],[12019,"polars_core::chunked_array::builder::list::boolean"],[12020,"polars_core::chunked_array::builder::list::primitive"],[12021,"polars_core::chunked_array::builder::list"],[12022,"polars_core::chunked_array::builder"],[12023,"polars_core::chunked_array::builder::list::binary"],[12024,"polars_core::chunked_array::builder::list::null"],[12025,"polars_core::chunked_array::builder::string"],[12026,"polars_arrow::array::binview"],[12027,"polars_core::chunked_array::builder::boolean"],[12028,"polars_core::chunked_array::builder::null"],[12029,"polars_core::chunked_array::builder::primitive"],[12030,"polars_core::series::implementations::null"],[12031,"core::hash"],[12032,"polars_core::chunked_array::collect"],[12033,"polars_core::chunked_array::float"],[12034,"polars_core::chunked_array::from_iterator_par"],[12035,"polars_arrow::array::boolean"],[12036,"polars_arrow::array::fixed_size_list"],[12037,"polars_core::chunked_array::metadata::env"],[12038,"polars_core::chunked_array::metadata::collect"],[12039,"bitflags::iter"],[12040,"std::fs"],[12041,"std::sync::mutex"],[12042,"polars_arrow::datatypes"],[12043,"polars_arrow::bitmap::utils::iterator"],[12044,"polars_arrow::bitmap::utils::zip_validity"],[12045,"polars_core::chunked_array::object::builder"],[12046,"polars_core::chunked_array::object::registry"],[12047,"polars_core::chunked_array::ops"],[12048,"polars_arrow::legacy::array::slice"],[12049,"polars_core::chunked_array::ops::arity"],[12050,"polars_arrow::array::static_array"],[12051,"core::error"],[12052,"polars_arrow::array::primitive"],[12053,"polars_core::chunked_array::ops::search_sorted"],[12054,"polars_core::utils"],[12055,"polars_row::row"],[12056,"chrono::naive::datetime"],[12057,"chrono_tz::timezones"],[12058,"chrono::naive::time"],[12059,"polars_core::chunked_array::logical::categorical"],[12060,"polars_core::chunked_array::logical::categorical::builder"],[12061,"polars_arrow::array::static_array_collect"],[12062,"std::path"],[12063,"std::ffi::os_str"],[12064,"bytemuck::zeroable"],[12065,"polars_core::chunked_array::logical::categorical::revmap"],[12066,"polars_core::chunked_array::logical::categorical::merge"],[12067,"polars_core::datatypes::reshape"],[12068,"core::cmp"],[12069,"polars_arrow::types"],[12070,"polars_arrow::datatypes::physical_type"],[12071,"chrono::time_delta"],[12072,"chrono::naive::date"],[12073,"polars_core::datatypes::into_scalar"],[12074,"polars_plan::dsl::expr"],[12075,"polars_core::chunked_array::logical::categorical::string_cache"],[12076,"polars_core::chunked_array::logical::enum_"],[12077,"polars_error::warning"],[12078,"regex::error"],[12079,"planus::errors"],[12080,"alloc::collections"],[12081,"simdutf8::basic"],[12082,"std::io::error"],[12083,"polars_parquet::parquet::error"],[12084,"polars_schema::schema"],[12085,"hashbrown::set"],[12086,"polars_core::frame::row"],[12087,"polars_core::frame::group_by"],[12088,"polars_time::group_by::dynamic"],[12089,"polars_lazy::frame"],[12090,"polars_core::series::from"],[12091,"polars_core::chunked_array::ndarray"],[12092,"polars_arrow::record_batch"],[12093,"polars_arrow::array::struct_"],[12094,"polars_time::windows::duration"],[12095,"polars_core::frame::column::scalar"],[12096,"polars_core::frame::explode"],[12097,"polars_utils::idx_vec"],[12098,"rayon::iter::plumbing"],[12099,"polars_plan::plans::aexpr"],[12100,"polars_core::frame::group_by::into_groups"],[12101,"core::iter::adapters::copied"],[12102,"core::iter::adapters::zip"],[12103,"polars_arrow::legacy::kernels::rolling"],[12104,"polars_utils::float"],[12105,"polars_arrow::types::native"],[12106,"polars_core::frame::group_by::aggregations::agg_list"],[12107,"polars_core::frame::group_by::aggregations"],[12108,"polars_core::frame::group_by::expr"],[12109,"polars_core::frame::row::av_buffer"],[12110,"polars_utils::arena"],[12111,"polars_plan::plans::ir"],[12112,"polars_ops::frame::join::hash_join"],[12113,"polars_ops::frame::join::args"],[12114,"polars_plan::dsl::struct_"],[12115,"polars_ops::chunked_array::gather::chunked"],[12116,"polars_ops::frame"],[12117,"polars_io::csv::read::reader"],[12118,"polars_io::predicates"],[12119,"polars_io::mmap"],[12120,"polars_plan::dsl::selector"],[12121,"polars_plan::frame::opt_state"],[12122,"core::alloc"],[12123,"polars_plan::plans::anonymous_scan"],[12124,"polars_lazy::scan::anonymous_scan"],[12125,"polars_plan::dsl::expr_dyn_fn"],[12126,"polars_plan::plans::visitor"],[12127,"polars_plan::dsl::function_expr"],[12128,"polars_ops::series::ops::arg_min_max"],[12129,"polars_plan::dsl::array"],[12130,"polars_plan::dsl::list"],[12131,"polars_plan::dsl::function_expr::schema"],[12132,"polars_io::ipc::ipc_stream"],[12133,"std::io"],[12134,"polars_ops::chunked_array::binary"],[12135,"polars_time::chunkedarray::string"],[12136,"std::os::fd::owned"],[12137,"polars_ops::chunked_array::list"],[12138,"std::os::fd::raw"],[12139,"polars_ops::series::ops"],[12140,"polars_ops::chunked_array::strings"],[12141,"core::mem::maybe_uninit"],[12142,"polars_ops::chunked_array::strings::namespace"],[12143,"polars_io::csv::read::read_impl::batched"],[12144,"polars_io::csv::write::writer"],[12145,"polars_io::ipc::write"],[12146,"polars_io::parquet::read::reader"],[12147,"polars_io::parquet::read::read_impl"],[12148,"polars_io::parquet::write::writer"],[12149,"polars_io::parquet::write::batched_writer"],[12150,"polars_plan::dsl::binary"],[12151,"polars_plan::dsl::udf"],[12152,"polars_lazy::frame::exitable"],[12153,"hashbrown::map"],[12154,"polars_plan::dsl::cat"],[12155,"polars_ops::series::ops::round"],[12156,"polars_time::series"],[12157,"polars_lazy::scan::csv"],[12158,"polars_lazy::scan::ipc"],[12159,"polars_lazy::scan::ndjson"],[12160,"polars_lazy::scan::parquet"],[12161,"polars_time::chunkedarray::rolling_window"],[12162,"polars_time::windows::bounds"],[12163,"polars_time::windows::group_by"],[12164,"polars_time::windows::window"],[12165,"polars_io::csv::read::options"],[12166,"polars_io::csv::write::options"],[12167,"polars_io::ipc::ipc_file"],[12168,"polars_io::json"],[12169,"polars_io::parquet::read::options"],[12170,"polars_ops::frame::join::asof"],[12171,"polars_ops::frame::join::iejoin"],[12172,"polars_io::parquet::write::options"],[12173,"polars_ops::series::ops::interpolation::interpolate"],[12174,"polars_ops::series::ops::is_between"],[12175,"polars_ops::series::ops::rank"],[12176,"polars_plan::plans"],[12177,"polars_plan::dsl::arity"],[12178,"polars_plan::dsl::function_expr::boolean"],[12179,"polars_plan::dsl::function_expr::cat"],[12180,"polars_plan::dsl::function_expr::datetime"],[12181,"polars_plan::dsl::function_expr::pow"],[12182,"polars_plan::dsl::function_expr::strings"],[12183,"polars_plan::dsl::function_expr::struct_"],[12184,"polars_parquet::arrow::write"],[12185,"polars_plan::dsl::functions::temporal"],[12186,"polars_plan::dsl::options"],[12187,"polars_parquet::parquet::metadata::file_metadata"],[12188,"polars_plan::plans::lit"],[12189,"polars_plan::plans::options"],[12190,"polars_arrow::legacy::kernels::time"],[12191,"polars_lazy::scan::file_list_reader"],[12192,"polars_io::cloud::options"],[12193,"polars_parquet::parquet::metadata::column_order"],[12194,"polars_ops::chunked_array::binary::namespace"],[12195,"polars_io::ndjson::core"],[12196,"polars_ops::frame::join::cross_join"],[12197,"polars_lazy::dsl::eval"],[12198,"polars_time::chunkedarray::date"],[12199,"polars_time::chunkedarray::datetime"],[12200,"polars_time::chunkedarray::duration"],[12201,"core::default"],[12202,"core::ffi::c_str"],[12203,"polars_parquet::parquet::metadata::column_chunk_metadata"],[12204,"polars_core::series::ops"],[12205,"polars_plan::dsl::dt"],[12206,"polars_ops::series::ops::various"],[12207,"polars_arrow::scalar"],[12208,"polars_lazy::dsl::list"],[12209,"crossterm::command"],[12210,"polars_io::shared"],[12211,"polars_plan::plans::apply"],[12212,"polars_plan::dsl::function_expr::list"],[12213,"polars_plan::dsl::function_expr::binary"],[12214,"polars_plan::dsl::function_expr::array"],[12215,"polars_plan::dsl::function_expr::range"],[12216,"polars_parquet::arrow::read::statistics"],[12217,"alloc::ffi::c_str"],[12218,"polars_arrow::array::growable::structure"],[12219,"polars_arrow::array::struct_::mutable"],[12220,"polars_core::schema"],[12221,"polars_arrow::legacy::array::default_arrays"],[12222,"polars_arrow::buffer::immutable"],[12223,"polars_arrow::array::list"],[12224,"polars_core::named_from"],[12225,"polars_ops::frame::join"],[12226,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[12227,"polars_time::chunkedarray::time"],[12228,"core::num::nonzero"],[12229,"polars_arrow::array::struct_::iterator"],[12230,"polars_ops::frame::join::asof::groups"],[12231,"polars_ops::chunked_array::list::namespace"],[12232,"polars_plan::dsl::name"],[12233,"parquet_format_safe::parquet_format"],[12234,"polars_core::utils::supertype"],[12235,"polars_io::options"],[12236,"polars_core::chunked_array::ops::aggregate"],[12237,"polars_core::chunked_array::ops::aggregate::quantile"],[12238,"polars_arrow::legacy::index"],[12239,"polars_plan::plans::ir::scan_sources"],[12240,"polars_ops::chunked_array::strings::split"],[12241,"core::pin"],[12242,"core::io::borrowed_buf"],[12243,"parquet_format_safe::thrift::varint::decode"],[12244,"polars_time::chunkedarray::rolling_window::dispatch"],[12245,"polars_time::round"],[12246,"polars_parquet::parquet::metadata::schema_descriptor"],[12247,"polars_core::chunked_array::ops::aggregate::var"],[12248,"polars_plan::dsl::string"],[12249,"polars_ops::series::ops::to_dummies"],[12250,"polars_time::truncate"],[12251,"polars_io::csv::read::schema_inference"],[12252,"polars_time::upsample"],[12253,"polars_core::hashing::vector_hasher"],[12254,"alloc::collections::btree::map"],[12255,"polars_parquet::parquet::metadata::row_metadata"],[12256,"polars_utils::mmap::private"],[12257,"polars_parquet::arrow::read::deserialize::utils::filter"],[12258,"polars_ops::chunked_array::array::namespace"],[12259,"polars_ops::chunked_array::array"],[12260,"polars_io::csv::read::buffer"],[12261,"polars_time::chunkedarray::string::patterns"],[12262,"polars_time::chunkedarray::string::infer"],[12263,"polars_io::utils::compression"],[12264,"polars_arrow::legacy::array::fixed_size_list"],[12265,"polars_plan::dsl::function_expr::rolling"],[12266,"polars_plan::dsl::function_expr::rolling_by"],[12267,"polars_arrow::legacy::array::null"],[12268,"polars_arrow::bitmap::mutable"],[12269,"polars_arrow::array::utf8"],[12270,"polars_core::series::iterator"],[12271,"alloc::rc"],[12272,"polars_core"],[12273,"polars_core::chunked_array::struct_"],[12274,"polars_core::chunked_array::iterator::par"],[12275,"polars_core::chunked_array::object::extension"],[12276,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12277,"polars_core::chunked_array::ops::gather"],[12278,"polars_core::chunked_array::ops::sort"],[12279,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12280,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[12281,"polars_core::chunked_array::temporal"],[12282,"polars_core::chunked_array::temporal::conversion"],[12283,"polars_core::chunked_array::temporal::time"],[12284,"polars_core::chunked_array::logical::date"],[12285,"polars_core::chunked_array::logical::datetime"],[12286,"polars_core::chunked_array::logical::decimal"],[12287,"polars_core::chunked_array::logical::duration"],[12288,"polars_core::datatypes::aliases"],[12289,"polars_utils::aliases"],[12290,"polars_core::chunked_array::logical::time"],[12291,"polars_error::constants"],[12292,"polars_core::functions"],[12293,"polars_core::frame::horizontal"],[12294,"polars_arrow::datatypes::schema"],[12295,"polars_io::utils::other"],[12296,"polars_io::parquet::metadata"],[12297,"polars_arrow::legacy::prelude"],[12298,"polars_arrow::legacy::array"],[12299,"polars_io::path_utils"],[12300,"polars_ops::series::ops::rolling"],[12301,"polars_parquet::parquet::write"],[12302,"polars_io::utils"],[12303,"polars_ops::frame::join::general"],[12304,"polars_io::parquet::read"],[12305,"polars_ops::series::ops::abs"],[12306,"polars_plan::dsl::functions::selectors"],[12307,"polars_plan::dsl::functions::horizontal"],[12308,"polars_plan::dsl::functions::arity"],[12309,"polars_plan::dsl"],[12310,"polars_plan::dsl::functions::range"],[12311,"polars_plan::dsl::functions::index"],[12312,"polars_ops::chunked_array"],[12313,"polars_plan::dsl::functions::coerce"],[12314,"polars_plan::dsl::functions::syntactic_sugar"],[12315,"polars_time::base_utc_offset"],[12316,"polars_io::csv::read"],[12317,"polars_time"],[12318,"polars_ops::series::ops::clip"],[12319,"polars_io"],[12320,"polars_ops::series::ops::horizontal"],[12321,"polars_lazy::dsl::functions"],[12322,"polars_plan::dsl::functions::concat"],[12323,"polars_ops::series::ops::index"],[12324,"polars_ops::series::ops::bitwise"],[12325,"polars_io::csv::read::parser"],[12326,"polars_ops::series::ops::cum_agg"],[12327,"polars_ops::series::ops::diff"],[12328,"polars_time::dst_offset"],[12329,"polars_ops::series::ops::floor_divide"],[12330,"polars_ops::chunked_array::strings::concat"],[12331,"polars_ops::series::ops::duration"],[12332,"polars_ops::chunked_array::datetime::replace_time_zone"],[12333,"polars_time::date_range"],[12334,"polars_ops::series::ops::interpolation"],[12335,"polars_ops::series::ops::interpolation::interpolate_by"],[12336,"polars_ops::series::ops::is_first_distinct"],[12337,"polars_ops::series::ops::is_in"],[12338,"polars_ops::series::ops::is_last_distinct"],[12339,"polars_io::parquet::read::utils"],[12340,"polars_ops::series::ops::negate"],[12341,"polars_ops::series::ops::not"],[12342,"polars_ops::series::ops::int_range"],[12343,"polars_plan::dsl::functions::repeat"],[12344,"polars_ops::chunked_array::repeat_by"],[12345,"polars_ops::series::ops::replace"],[12346,"polars_ops::chunked_array::strings::strip"],[12347,"polars_io::partition"],[12348,"polars_io::parquet::read::predicates"],[12349,"polars_io::parquet::read::mmap"],[12350,"polars_time::chunkedarray"],[12351,"polars_io::cloud"],[12352,"polars_ops::chunked_array::mode"],[12353,"polars_ops::chunked_array::nan_propagating_aggregate"],[12354,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000`000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fn000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhGn0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541Fl777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cd2222222222`AGn000000000000000000000````AH`00AHb0000000```00`0`10000AIb````````````````````````````0AHh``AIdAJb33333DLh4``0``4F`Fh6AHd6AHj077AHl0AHn`54:54:AI`0065;65;65;6565;65;6565;65;99666555AIf0`AIhAIj`98>9988>`AIlAIn`AJ`0>><;AIb=<0=<00AJdAJfAJb0F`FhAHd0AJh1132?32AJjAId054?2AJl0AJnAK`AKb0`0AKdAKfAKh0`AHl0AKj<AKlAKnAL`F`FhAIb210210210AHn7321323232232232`ALb`ALlALhALd`````````````````````````````````````AM`00`0`000000000000000000`00000`````>>````````````87878787>>```````````B@``JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOf`3DLjDLl````B@f``9``875``875``875``875``5`666555AOl986``4``6B@jLd1010Al<;9`<;`<``:3:```````````BAf``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALf0<0:L`6:AMlAOnJjB@`ElB@bOjB@d?<OhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jAMlJj01L`1AhCfLhOhNnFbOfNdNjKlLbEfEhBjBdBbAMnAMl110AN`0ANb0ElJjL`0Dd0003OjANhALf3433:BBh5DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdAMnBBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jElAOf`AOjJj3L`0200000AMl`LhOhNnFbOfNdNjKlLbEfEhDd=AOlAOf>AOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdL`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdB@dOjB@n00032El00`L`5BA`AOlAOfJjB@`6<::AMnBBh77DLnDjAhjCfLhC`=<;AMlAOn<;ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdAMnBBhL`0DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jL`AhCfLhOhNnFbOfNdNjKlLbEfEhAMnDd1BBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jAOjL`0000AMlJjOj0Dd0`0AOl3B@`El0B@b5B@dB@fLd>=9::::::777999555444333888222111000>>>===;AOfAOhAMnBA`;;:3AOn>>:998=76655AGdB@j>>>>>4BBhL`00DLnDjAhjCfLhC`<AOlAOfAMl>Jj00000B@`El000B@bOj00B@dB@fLd0OhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGd00B@jElAMlL`01Dd00000001111110002ALf00030AOfB@dB@f55555AOj766666073DlAhjCfLhC`OhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAOfB@f0AMlElJjBBdALf444444Dd3B@`5Oj8LdAGdB@j8L`09:6AMnBBh2DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jEl2DdAMnBBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jL`AMlBBhBBf333332JjDdEl00200055020AOf31110131931313111131111319ALf702173777777``2B@`8`BA`::9:::AhCfLhOhNnFbOfNdNjKlLbEfEhAMl0Oj0L`0DLjDLlAMn33333333BA`5B@dB@f06B@bBBh:::::::188DdJj5Ld;=;8AhCfLhOhNnFbOfNdNjKlLbEfEhL`0AOf111Oj2222BBhAMl0Jj55505AhCfLhOhNnFbOfNdNjKlLbEfEhL`00?ElOjLd20AMlAGd110Dd6AOlAOf4AOnJjB@`:B@b:B@dB@f;OhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jEl2L`Dd111Jj3B@fLd244AN`0ANb0B@n00056AMnBBh9DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@d0B@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDdAMnBBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jJjElDd21B@fLd2AMnBBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@j1AMl0ALf10El1DdAMnBBhL`DLnDjAhjCfLhC`BA`AOlAOfAMlAOnJjB@`ElB@bOjB@dB@fLdOhNnFbOfNdNjKlLbEfEhKnLnBjBdFdBbLjLfLlB@hAGdB@jDLjDLlALfDd00Jj`````AOf`AOl10``AOh`````2121``BCd0000`00`0000000`0`BCf0000000000000000``BCjn000DM``112101```11111112BCh302302`223002302302`300223002222222`302302`0``````02302302023023022DMbDMd10```BE``0BDn11``0``01AAn00000000000000000BFdBFf3421034222342342342`224210342103421034222222222242224442`2222223422103422222222222222222`222242222222222222103422103421022222222222222222222210222222222222222`2222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Ff`0BGj1111111111111111111101110111111111110101010101110101011111010111111011011111111111111101011101111111111011111110101BDl122212222222211222222222212121222222222222212221222122222222122222222122221221222222222222122222212222222212222222122122222`BGn000000000000000000000000000`BHd0``0``````BHlCb`2`22222222210`222BH`1BEf40`1023BIfBHhBHf453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BI`4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DMfDMh0``````````BInBJ`0`BJb0BJdBJf``1011110101010101010`10011010101010BEd211210210210210210`02102102100000022110`2102102121021```210210210210210``BMjBLdBBj`BOf1CHjCDh01`CDn`CAh5```CEj4AM`B@`BE`7```;;`CJfJjElDl``?``````````7```?```CFbCGh`CFdAIbBMjCIbCHn``CJl:9AGd``BBj5`;``<``152<;1`````CChCGf``CFl`DMjCHfBGbBLj000CGl8;`=JjEl``````1`CI`BMj?````````````````````````````````````0``0CEf`=`nCFb?`CHn``24CIb0031BOfBHd2CEj```````888884`````<CCjCCl`DCl7CJl?>AGd0``1`9JjEl``;`1`;31022``CGhDMjCHf`5BMj`CGlCAh22`CHhBBjn`CHn=;:<`````BLjDAlCIb>=>77DM`6`BLd7CJd```;<AGd44466````9CId0`````>``>=:5BOfBHdBE`44`CJlB@`61JjEl8``3108``BMjCAhBGbCFdAIb4CCl```CEjAHhBBj``08CI``CHl`AOf``CGl`BHd``````CJdCFf>0>CFl`44DlDLjDLlCIb0A@`CHn`CEj``n<DClBHlCb`````BOf?`BBj```B@f``7`CJlB@```1JjElAGd``4210``4210``4210``BLdBMj0`2```````=````````CHj0`000`0CHn1Dl222001AIdAJbCGlCJd`````CEf``DHnCId``1```2BBjCEd`>`>``>BOfBHdBE`DAl``````DMlCChCCjCEjCGfAM``;CIb0AOl`CGdA@`JjElAGd````BMj````````BBj`AOf`CAh0`CDd84;CFf202CFl0CEl08CGlCGhBOfAIbBHd1<210<20CHnB@jLdA@`332176545BMj>40>CCl5CDfCIdCAhBLj`<:CHhCDh``<<;:9AlCFdCGd;CDn;`0`n``1CChDLhCFbCGfBE`CHj>>BBj`CJlDAlJjElAGdCKfBMj``````43`4`DM`AIbCEl0```CAhCGhCHn<ABjnBLbCJb``Dl`BLj0```````AOl2```````9```````````BAf`>`CFbCId`BOfBHdBIh``=`7DAlCKfCGhBMj0CJl1```BBj`922CIb33CHn4``14DMlCChCCjCEjCGfAM`CJb`;;```````BLd8<<``CFbBLj0n01CCl`FfABjCGl`````44```?B@j1`BBj=````CJl5``````BMj8000CDf553CIbBHlCb``CFlDLh:88```B@f555`CI``6``BOfBHdB@`<<JjEl`n``>```2`<<<<<<`21AGd``?1``3`BLdBBjCId98BMjCClBLjCIb`3``5`2CHnCJl<;99``1```922`2511111111ABjBAfCAh`473?><``3?><``3?><``3?><````CFlCGl>`:`El?```;8`CDdAGd0=ALf0BOfBHdBIh``CCl>>`BBj`01``CIdCHn=0CEdAIbDl:?`CB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKf`BFhBK`00``BKd1:AHdBKfBKh000BKj6BKl`BBjBLb1BLdBGh0BLf1BLh5`5`5BLj`N`CCbBLnCJ`BM`00CIh<BKfBFh0>`>ACdACf1010AHh<BBj`0AHj011`22`BGfBMlBMnBN`52105AHl6;`0AHn7<`BNbCJ``9AN`880ANb099`BNdBM`BKfBNh=1=MjBNjBNl000N`BOb11BOf2ANhBOh9ALfBOj`766`BBjBOn0`CDjBKlC@bC@hC@lCA`4`7`BLdBLjBKf1101112101CBdBMnAMbBLnCAdC@`=CB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`0CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfCBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfBFh8BKf`ACb2CBnCCbCInCAjCAl`BNhCAn2CB``9:AI`BBjAOj=2201`1N`2CBf3A@bCBhBGfCBjBKf10CD``11`9`9`9;BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKfBKfCB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKfCB`BFhBLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKfCCdBEhBFl`CKhCBlCC`CBnCCbBGhN``BLnCEfBKb``BFh`B@n000ADnAE`100033`CJj0CD`BKjCDb<;BLj`CEbCFhCGl`BOn`CKhCBl````BMnCL`4BN`9155``BFhCLbBBj88`````BK`CJj4CLd0`3``3`3`3``3CLf>`CDl```0`````CLhCLjCBhCIhCLlBGhCIj1CIlCKbCDbN`0BFhBMbCBnCCbCLnBEhBFlCClCD`:CDdCDjCDlCDnCEbBKbCEdCEfCEhCElCF`CFbCFdCFfCFhCFjCFlCGfCGjCGlBBjBMf00CIfCIhCIjCInCJ`CJbCJdCJhBLjN`000CJnCK`A@bBGbBAjA@```CBdBMnAMb0BLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMf0CHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`0CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfCBdBMnAMb0BLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfCGjF`FhCGlBFh0001N``BEf`CK``BN`BBjBLj7CMfCIfBLb4BLf5999CBdBMnAMbBLnCAdC@`BKlCB`0BFh0BLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`0CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfBBjBFh01BKf``2AOj1;:9Oj:``CD``CIfBLjN`0CDbCL`0```CN`2CCdBEhBFlBGhCChCCjCClAB`>:CDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBOfBBj0CHfCHhCAhBMf0CHjCHlCHnCI`CIbCMfCIdBMjCIfCIlCInCJ`CJbCJdCJfCJhBLdCJlN`00CJnCK`A@bBGbBGf0MjBAjA@`BIhCKbCKdCKfBBjAId0BEh00BFl00BGh00CCh00CCj00CCl00AB`00CD`00CDb00CDd00CDf00CDh00CDj00CDl00CDn00CEb00BKb00CEd00CEf00CEh00CEj00CEl00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CFn00CG`00CGb00CGd00CGf00BBj00CHh00CAh00CHj00CHl00CHn00CI`00CIb00CId00CIf00CIl00CIn00CJ`00CJb00CJd00CJf00CJh00BLd00N`00CJn00CK`00BGb00BAj00A@`00CKf00CNfBEh?BBj09```BFh0AIf20`BLj3BOnA@h111ACdCB`601BKfBKd00BGfCD`:;`:;;AIhAIj5<=999CNlCNnACfAOhBLnBKlCKhCBlCC`C@bCO`BNdCObC@hCOdCOfCLbC@lCA`ACd=<;9C@n`BFhBN`BBjBKf`1CDl0`BMfCBf44`N`BNhCAnCAjCCdBEhBFlCCfBGh0CChCCjCClAB`A@hBM`CD`CDbCDdCDfCDhCOhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEj0CEl0CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBBj0CHfCHhCAh0BMfCHj0CHl0CHn0CI`0CIb0CMfCId0BMj0CIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLj0000CJjCJlN`00CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKf`;CCd:`BLnCJ`CIn`BBjCBdBMnAMb6CAdC@`BKlCB`BFh00BLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`0A@hCA`DF`CD`CDbCDdCDf0CDhCDjCDlCDnCE`CEbBKb0CEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBj0000000000000CHfCHhCAh0BMf0000000000CHjCHlCHnCI`CIbCMf0CIdBMj0000CIfCIhCIjCIlCInCJ`CJb0CJdCJfCJhBLd0000CAlBLjCJjCJlN`00000000000000000CJnCK`A@bDAlBGbBGf00Mj0000000000BAjA@`BIhCKbCKdCKfDA`BLj000DAbDAfDAhAMb04N`DMn00ADj13310732CK`CLb4422DAl66BMfDAnALf0`AIl1CIfBFhDB`AIn5BGfCAl`BBj`00N`BKfBMnBN`<4AJ`AOj10CBd<CJlDlCCn00CM`BMdDA`?BNb`C@l=>>==5CD``COhBBdALfBKfCKhCBlCCbBFhDBl11``BI`AJbBBjN`21=9BEhBFlBGhCChCCjCClCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBOfBBjCHhCAhCHjCHlCHnCI`CIbCIdBMjCIfCIlCInCJ`CJbCJdCJfCJhBLdCJlN`CJnCK`BGbBAjA@`CKfDC`00BLhBN`BBjBOn0CBnCCb`DCbCLjCBhCIhCLlCIjBLnBKbAB`CD````=`C@bCDjBEh>=21N`0CJhBGn`3BFl``COfCLbBMb:CBdBMnAMbBLnCAdC@`BKlCB`BFhBLh:CBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfAB`ACdBFhDB`A@hCAlBLj``8``BBj``011CBdBMnAMbBLnCAdC@`BKlCB`=BLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfBDl>78AMb?DEnDBhBBjBLj=DCfBN`N`0CD`BBfBFj3MjBG`;8CAhCEj`;`1BGhCIf<BKfC@n?`AJdBBj456`00`AJf1CLhCLjCBh4=4`74`7A@h5>AB`BAj`N`CJlBFjCN`35CEl4BGh;:9ALfBLjBGfDA`2DClBMnBFhBN`DB`DCn3DD`0BLnBKb1BKdDDbCJj0BEh`:9ALfBBjBKfDDf>N```CF`BFh?<ABj00`5BN`7BGf37CDl9`DDhBGhDDjCJlMj>>9BLhCC`CLbCCbCD`CEnBBjDD`00000000000000000000AJb2N`13CDjCEbCEhCFhF`Fh``6BFhDDb;`;BNb0BMf0=020=`==`1?1111CHfCJl```BMn6BN`AHdBBjDEbBKfCJjCMfCIf`>7653`8>7AJh64DEd5CO``BAjCGjCIhCLlCIjCBh21`BMnBFhBN`AHdBBj1CCdCIlA@bDEbBKfCMfCIfDCbCLj>CIhCLlCIjCDb`=CLh5CBh5BGh0BLb1BBjBLfF`FhBKfCKhCBlCC`BMbCBnCCbDF`CD`C@b1BMnBN`AHnBBj==09CAlOjBAj33`DCbCLjCBhCLlBGhCIjN`CEl3;``3DEf<<BNbDLjCNlCNnDLlDEhAMbBLnBKlCBlCC`C@b;CO`BNdCObCLnC@hBGhCOdCOfCCnCLbC@nC@lCA`BKbBMfCIhCIjBLdCAlN`BGfMjBAj332AJjBKfCDf6`05CBlCC`28888108888DEnDBhBM`CAdC@`C@nBBj0`0BLjAId0``AB`A@hCDl?BFh6CMfCIfCDbF`FhC@lCJjBEhBFlCCnAIfBLnCJhBGnCFj0?CAlBBjBKfCLhCLjCBh0CH`CHdDF`77`CCbCEnCK`BGh9DCb9CD`22N`1BEhBFlBBj33````0:DDb0`CKdDEb3BFh8BGf88`1AJh6DEdBKfCLhCLjCBh>CDbCDl0CD`DFf?N`0C@l1111CKh:CBlCC`CBnCCb8CK``AJl0BLbBBjBLfBLj`BKfBFhBKd``5`BOn60BNb11``7`7`CAlAJn6BMn6BN`;CF`BLnDBl:>AK`?<?DFnBBj1010100010101010101010101010DG`CBf2CCn0130CFhCJjCKhCBlCC`BMbCBnCCbCD`CJ`0DD`BMf??BM`BFh00000DGbAKb0CO`BNdC@nC@l7CJj?=DF`=CEn2`BLj?:`DCbCLjCBhCIhCLlCIjN`BFh00CDbCDlCDj`AKb<4C@l0CA`CO`BNdCOf4CNlBBjBGfAKdBKfBMn?BN`5AKfBFh7BKb8ACf692222CL`BMbCD`CJn1:68=<<5AKh=0=====`AHl;8:??80<N`CKhCBlCC`BOnBKfBGf022`2`2BBjBEh>>CFhBMnBFhBN`AKj68DGh9A@h8;`;;;;;CF`CBhCIn;``>`>`>`>`>N`<BLb=BLdBLj0BLfBLnDDbBKb01`BMnBFhBN`AHdBBjDEbBKfBMfCAh=N`8BLh86AKl5DGl066AKn7BGf`CGnCHbCDl`CIhCIj1CBhBFhCGl1CJlBN`DA`;AL`5DH`BKjBBjBOnBMn1DDbAB`CB`=BLhBMbCBlCBnCC`CCbCCdBEhBFlCCfBGhCChCCjCClCCnAB`A@hCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bBGbBGfMjBAjA@`BIhCKbCKdCKfBBjBNbCBhBGhCEjCEl5CAhCHjCHlCHnCI`CIbCIdBMjN`DA`CK`BOn0DDbCEbCFhBLjCF`0BFhBGf000``ABj00DHbBGh0CCn10CDb21AN`660ANb077B@n000ADnAE`1000CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJl0N`0CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKf?DA`CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfCD`BNb0BBj1DEfCFnCG`CGbN`?00000CDb11BNhCAjBMdBGhCEjCEl<CAhCHjCHlCHnCI`CIbCIdBMj??CBdBMnAMbBLnCAdC@`BKlCB`BFhBLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKfCd`BLjAHnBMnBFhBN`BBjBKf3432133N`0?CD`3DHj0C@lCCbCEn`BLnBKbBGf0ALfMjCN`=CJhBGn4545BMnBFhBN`AKjBBjBKfDGh187DHl0CJjN`CBd:AMbBLnCAdC@`BKlCB`?BLhBMbCBlCBnCC`CCbDEnC@bBNbDBhCO`BNdCObCLnCCdBEhC@hBFlCCfBGhCChDHnCOdCCjCOfCClCCnBN`DDbCLbBKdC@nC@lAB`A@hCA`DF`CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbBKbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjDDjCGlCGnCH`CHbCHdBOfBBjCHfCHhCAhBMfCHjCHlCHnCI`CIbCMfCIdBMjCIfCIhCIjCIlCInCJ`CJbCJdCJfCJhBLdCAlBLjCJjCJlN`CJnCK`A@bDAlBGbBGfMjBAjA@`BIhCKbCKdCKf=CLhCLjCBh10CClBGhCIj1A@b`CH`CHdCCdCIl4BLnCIhC@lCC`C@bCOfCBlDLjDLlCLbCD`47BFhBKb111CO`BNd<4DF`49CDbCObC@h1CLn1CA`90C@b0CIhCIjCBl8BNb1?19196BKd55322CD`>C@l65654CC`COfCLb4CO`483835COd3<96BAj<;;<;:CDb=CKh<<774BNd6:6:>C@b>3BFh<8<38;07298;<0?141?<3?:8<0CA`41CBl0<<94:=>BNb1=<;?1=<;?CIhCIj36953CD`40C@l7:5CC`7BKb:557=7=9BGf0ALf167;ABj00000000000000000N`CEbCFh`22BBjBKfCLhCLjCBhCIh`ALbDN`DNbDNd2102DNfDNhDNjDNl0DNnDO`DObDOdDOfDOhDOjDOl55DOnE@`E@b14;3E@d:E@f49E@hE@j0>E@lDNl240;4:029513622><??>;E@nEA`EAb0EAdEAf4EAhEAjEAlEAn3EB`528EBb1EBd11098432323570;5EBfEBhEBj0EBlEBnEC`ECbECd01ECf1EChECjEClECnED`EDb697DMfDMh0EDd00DMbDMd10EDfEDhEDj21EDlEDnEE`EEb03421EEd0DIf00`00`000`0000`0`0000``````````BInBJ`0`ALlALhALd``````````````````````````````````DIn000000000000000DJ``CAf000000000000000DJb`0`00`0000000000000`00EEfEEhEEj32103210321032103321032103`210332103210321032103EEl00````````BNl0000CCdCLhCLjCLl3DCb213232114021320213230232DFn0000000000000132`433543`DJf0000``07777DJd8111111111111111`11111111`DJn``DJh000000000`0000DJj11111211111DK`0``0000CKj010100000101010100000110001010`001010101011``11110DKb`00000000000`0000B@``JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOf`2DLjDLl````B@f``8``764``764``764``764``4`555444AOl875``4``5B@jLd1010Al;:8`;:`;``939```````````BAf``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALf0;0AN`0ANb0ANh3`AOj0`B@n000`1Oj`AOh7777733DlBBd9BBf::```4DLjDLl;;::7777<<<10<`````AOf`AOl10``7`````1010````````````DAbDAfDAh`CMn00000000000000000000000000000000000000000000000000`BJb0`DKd000000000000000000``BMjCHj00011111CIbCHn33`03`CI`414414222124444411111444124222CId055355`51CHl443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`334446333333333664633133````DNfDNhDNjEBfEBhEBj0EBlEBnEC`ECbECd01ECf1EChECjEClECnED`EDb697EDfEDhEDj21EDlEDnEE`EEb03421EEd0`CHlCI`0`0DKf000`00000000000000000000000000DKh000`00000000000000000000000000````CGd0`````````DKj00000000000000000000000000000`DHh000000000`0000``000000000AM`00`````DKnCBh000000000000000000`````AKh0````````````F`Fh10101022```BOjBOn0000000000000000`0000000`0`00`00000`0`0`0`0`00000`CAl0000``EEnEF`Mb``0``AIdBGl2````02AbBKf111111`011100`110010011101110001DLd35203521122221221211225215252222220352203522222035211252422242222255522222212115222035222222222222222222222222222222222222222222222222222222222222221222111122222215222222`203520352220BFj323333220333322323333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`233223332333262333322331233223223333333332332332223333363333333333333331463333333333146333333333333333146333332322214633323``Ed000000000000000000000```BLb`0BLfBn`210210210210``CBjG`10CMj0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{c}}e}{}Al{AnB`}}{{{l{c}}{l{c}}}{}Al}{{{l{Bb}}{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{f{{l{Bj}}}}{f{Bl}}}}{{{l{Bj}}{l{Bj}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{{C`{c}}}}}}{f{Cb}}}AbCd}{{{f{{l{Cf}}}}{f{Cb}}}Ab}{{{f{{l{Ah}}}}{f{Cb}}}Ab}{{{f{{l{Bd}}}}{f{Cb}}}Ab}{{{f{{l{Bj}}}}{f{Cb}}}Ab}{{{f{{l{Bb}}}}{f{Cb}}}Ab}{{{f{{l{j}}}}{f{Cb}}}Ab}{{{f{{l{c}}}}{f{Cb}}}AbAl}{{{f{{l{Bb}}}}}d}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{{C`{c}}}}}}e}{{l{{C`{c}}}}}Cd{{Dn{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{Ch}{{Ad{Ch}}}}E`}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{{Ch{{f{Bl}}}}}{{Ad{{Ch{{Eb{Bl}}}}}}}}E`}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dn{{Ch{{f{{Bh{Bf}}}}}}}{{Ad{{Ch{{Eb{{Bh{Bf}}}}}}}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{c}}}}e}{{l{Bj}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{Bb}}}}{f{Dn}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{Dn}}}{{l{Bd}}}}{{{f{{l{Bj}}}}{f{Dn}}}{{l{Bj}}}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}Al}{{{f{{l{Bd}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bj}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{Dn}}}{{l{e}}}AlDl}{{{f{{l{Bb}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{Df{l{c}}}}e}bAl{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{{Bh{Bf}}}}}{{Ad{{f{{Bh{Bf}}}}}}}}}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{{f{Bl}}}{{Ad{{f{Bl}}}}}}}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Ah}}}}{f{Dn}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cf}}}}{f{Dn}}}{{A`{{l{Cf}}n}}}}{{{f{{l{{C`{c}}}}}}g{f{Df{Bh{e}}}}}bCd{}{{Dn{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bd}}}}e{f{Df{Bh{c}}}}}b{}{{Dn{{Ch{{f{{Bh{Bf}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bh{c}}}}}b{}{{Dn{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bj}}}}e{f{Df{Bh{c}}}}}b{}{{Dn{{Ch{{f{Bl}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bh{e}}}}}bAl{}{{Dn{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bb}}}}e{f{Df{Bh{c}}}}}b{}{{Dn{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dn{{f{{Bh{Bf}}}}}{{Ad{{Eb{{Bh{Bf}}}}}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{Ab}{{Ad{Ab}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{d}{{Ad{d}}}}E`}}{{{f{{l{{C`{c}}}}}}e}{{l{{C`{c}}}}}Cd{{Dn{{f{c}}}{{Ad{c}}}}E`}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{{f{Bl}}}{{Ad{{Eb{Bl}}}}}}E`}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{En{f{Bl}}}{{Ad{En}}}}E`}}{{{f{{l{Bd}}}}F`}{{l{Fb}}}}{{{f{{l{Bj}}}}F`}{{l{Fb}}}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{Bb}}}}F`}{{l{Fb}}}}{{{f{{l{Bj}}}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Fd}}}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bb}}}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bd}}}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bb}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{{C`{c}}}}}}}{{A`{{l{Fb}}n}}}Cd}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}{{{f{{l{Bj}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fj}{{{l{Bb}}{l{Bb}}}}012012{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fl}}}Dl}``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dn{}{{Ad{}}}}E`}Al}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{j}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fn}{{A`{Abn}}}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}G`}{{{f{{l{c}}}}e}{{A`{Abn}}}G`B`}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gj{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gj{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGl}{{{f{{l{c}}}}}{{A`{{f{Bh}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gn}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gn}bDlDl}{{{f{{l{c}}}}}{{`{H`}}}Al}{{}{{l{c}}}Dl}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Gbb}{{{f{Df{l{c}}}}}bDl}1{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Bb}}}}9041726853{{{f{{l{Ah}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bl}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gj{Ab}}}}{{{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{{C`{c}}}}}}{f{{l{Bb}}}}}{{A`{{l{{C`{c}}}}n}}}Cd}{{{f{{l{Bj}}}}{f{{l{Bb}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hh{Dj}}{Hj{Dj}}}}}}{{{f{{l{Bd}}}}{f{{l{Bb}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}`{{{f{{l{Cf}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{{C`{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cd}{{{f{{l{Bd}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bj}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bb}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{cc{}}{c{{l{e}}}Cl{{Dl{}{{I`{c}}}}}}1{{Ddc}{{l{e}}}Ib{{Dl{}{{I`{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{I`{}}}}Dl}Ib}{{Dd{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gj{{Cn{Cl}}}}El}{{l{c}}}Dl}{{Dd{f{{Bh{Ff}}}}}{{A`{{l{j}}n}}}}{e{{l{Bj}}}{{Id{Bl}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{If{Ab}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bd}}}{{Ih{{Bh{Bf}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bd}}}{{Id{{Bh{Bf}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bj}}}{{Ih{Bl}}}{{Ib{}{{Cj{c}}}}}}{e{{l{{C`{c}}}}}Cd{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Bb}}}{{Ib{}{{Cj{d}}}}}}{c{{l{Bb}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hf{Gj{Ch{Ij}}}}}}}}}Al}{{Dde}{{l{Bd}}}{{Id{{Bh{Bf}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{{Dde}{{l{{C`{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bj}}}{{Id{Bl}}}{{D`{}{{Cj{{Ch{c}}}}}}}}=97{e{{l{Fd}}}{{Ih{{Bh{Bf}}}}}{{Ib{}{{Cj{c}}}}}};97{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}>{e{{l{Fd}}}{{Id{{Bh{Bf}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}>{e{{l{Bj}}}{{Id{Bl}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bd}}}{{Id{{Bh{Bf}}}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{{C`{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bj}}}{{Id{Bl}}}{{D`{}{{Cj{c}}}}}}`{e{{l{Bj}}}{{Ih{Bl}}IlInJ`}{{Jb{}{{Cj{c}}}}}}{e{{l{Bd}}}{{Id{{Bh{Bf}}}}IlIn}{{Jb{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bj}}}{{Id{Bl}}IlIn}{{Jb{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Jb{}{{Cj{Ch}}}}}Al}{e{{l{Bd}}}{{Ih{{Bh{Bf}}}}IlInJ`}{{Jb{}{{Cj{c}}}}}}{c{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{Bb}}}{{Jb{}{{Cj{d}}}}}}{c{{l{Bb}}}{{Jb{}{{Cj{{Ch{d}}}}}}}}{{cDdEl}{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{{Ddc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{Bh}}}{{l{c}}}Al}{{Dd{f{{Bh{d}}}}}{{l{Bb}}}}{{Dd{f{{Bh{c}}}}}{{l{Bj}}}{{Id{Bl}}}}{{Dd{f{{Bh{c}}}}}{{l{Bd}}}{{Id{{Bh{Bf}}}}}}{{Dd{f{{Bh{c}}}}}{{l{{C`{c}}}}}Cd}{{Dd{f{{Bh{{Ch{d}}}}}}}{{l{Bb}}}}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{Bd}}}{{Id{{Bh{Bf}}}}}}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{{C`{c}}}}}Cd}{{Dd{f{{Bh{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{Bj}}}{{Id{Bl}}}}{c{{l{Bb}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{{DdGj}{{l{c}}}Al}{{DdGj{Ch{Ij}}}{{l{c}}}Al}{{Dd{f{{Bh{Bf}}}}Gb}{{l{Fd}}}}{{Dd{f{Ab}}Gb}{{l{Ah}}}}{{Dd{f{Ab}}Gb}{{l{Cf}}}}{{DdcGb}{{l{{C`{c}}}}}Cd}{{Dd{f{Bl}}Gb}{{l{Bj}}}}{{DddGb}{{l{Bb}}}}{{DdGb}{{l{c}}}Al}{{Dd{f{{Bh{Bf}}}}Gb}{{l{Bd}}}}{{DdGb}{{l{{C`{c}}}}}Cd}{{DdGb}{{l{Ah}}}}{{DdGb}{{l{Fd}}}}{{DdGb}{{l{Bd}}}}{{DdGb}{{l{Bj}}}}{{DdGb}{{l{Cf}}}}{{DdGb}{{l{j}}}}{{DdGb}{{l{Bb}}}}9{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{DdGb{f{El}}}{{l{Ah}}}}{{DdGb{f{El}}Gb}{{l{Cf}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Bj}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Cf}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Bd}}}}Gb}{{A`{Jjn}}}}{{{f{{l{c}}}}Gb}{{A`{Jjn}}}Al}{{{f{{l{Fd}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Bb}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Ah}}}}Gb}{{A`{Jjn}}}}{{{f{{l{j}}}}Gb}{{A`{Jjn}}}}{{{f{{l{{C`{c}}}}}}Gb}{{A`{Jjn}}}Cd}{{{f{{l{Bd}}}}Gb}Jj}{{{f{{l{{C`{c}}}}}}Gb}JjCd}{{{f{{l{Fd}}}}Gb}Jj}{{{f{{l{Cf}}}}Gb}Jj}{{{f{{l{j}}}}Gb}Jj}{{{f{{l{Bj}}}}Gb}Jj}{{{f{{l{Bb}}}}Gb}Jj}{{{f{{l{Ah}}}}Gb}Jj}{{{f{{l{c}}}}Gb}JjAl}{{{f{{l{Cf}}}}Gb}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gb}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JnDl}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cf}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{C`{c}}}}}}Gb}{{Ch{{f{K`}}}}}Cd}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{Kb{Hb}}n}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Ah}}}}}Gb}{{{f{{l{Fd}}}}}Gb}{{{f{{l{Cf}}}}}Gb}{{{f{{l{Bj}}}}}Gb}{{{f{{l{{C`{c}}}}}}dd}{{A`{Cbn}}}Cd}{{{f{{l{Fd}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bd}}}}dd}{{A`{Cbn}}}}{{{f{{l{Cf}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ah}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bj}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bb}}}}dd}{{A`{Cbn}}}}{{{f{{l{c}}}}dd}{{A`{Cbn}}}Al}{{{f{{l{c}}}}GbdGb}CbFj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{Bb}}}}0164253{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{}Gb}0{{GbKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{Cf}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dl}{{}c{}}0{{}Ff}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gb}}Gb}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gb}}Gb}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Cf}}}}}}{{{f{{l{Fd}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{{C`{c}}}}}}}{}Cd}{{{f{{l{Bb}}}}}}{{{f{{l{c}}}}}{{`{IlInJdH`Jh}}}Al}{{{l{Lh}}}Ab}{{{l{c}}}AbDl}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{Bb}}}M`}000{{{f{{l{c}}}}}{{l{Bb}}}Dl}02{{{f{{l{c}}}}}MbDl}{{{f{{l{c}}}}}{{`{Md}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{Hb}}}}}}}}{{{f{{l{c}}}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ij}}}}}}}}}}}Dl}`{{fc}Gl{{Id{Bl}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}{{{f{{l{c}}}}}{{Mf{c}}}Dl}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{c}}}}}GbDl}0{{{f{{l{c}}}}e}{{l{c}}}Al{AnMh}}00{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Bb}}}}0342615{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Bb}}}}}Mj}{{{f{{l{Bj}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bb}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{c}}}}}{{Ch{Aj}}}Fj}{{{f{{l{Ef}}}}}{{Ch{Kd}}}}{{{f{{l{Eh}}}}}{{Ch{Aj}}}}{{{f{{l{Ef}}}}}Mj}{{{f{{l{c}}}}}MjFj}{{{f{{l{Eh}}}}}Mj}{{{f{Df{l{c}}}}{Kh{c}}}bDl}`{{{f{{l{c}}}}}{{Ml{c}}}Dl}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Nb{Fl}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{c}}}}}{{Ch{Hf}}}Al}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{Bj}}}}}Mj}{{{f{{l{Bb}}}}}Mj}{{Dd{f{{Bh{Bf}}}}GbGb}{{l{Bb}}}}{{Dd{f{Bh}}}{{l{c}}}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GbDl}{{{f{{l{Bd}}}}}{{A`{Gbn}}}}{{{f{{l{c}}}}}{{A`{Gbn}}}Al}{{{f{{l{Bj}}}}}{{A`{Gbn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Ddc}{{l{Bb}}}{{Id{{Bh{d}}}}}}{{Ddc}{{l{Nd}}}{{Id{{Bh{Nf}}}}}}{{Ddc}{{l{Lh}}}{{Id{{Bh{{Ch{Nh}}}}}}}}{{Ddc}{{l{Ef}}}{{Id{{Bh{{Ch{Kd}}}}}}}}{{Ddc}{{l{Nj}}}{{Id{{Bh{{Ch{Nl}}}}}}}}{{Ddc}{{l{Nn}}}{{Id{{Bh{O`}}}}}}{{Ddc}{{l{Lb}}}{{Id{{Bh{Hb}}}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{Ej}}}}}}{{Dd{Ob{Hb}}}{{l{Lb}}}}{{Dd{Ob{Od}}}{{l{Kl}}}}{{Dd{Ob{Kf}}}{{l{Of}}}}{{Dd{Ob{Jl}}}{{l{Fb}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{{f{Bl}}}}}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{{Ch{{f{Bl}}}}}}}}}}{{Ddc}{{l{Fb}}}{{Id{{Bh{Jl}}}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{{Eb{Bl}}}}}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{{Ch{{Eb{Bl}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{f{{Bh{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{Ch{{f{{Bh{Bf}}}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{Eb{{Bh{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{Ch{{Eb{{Bh{Bf}}}}}}}}}}}}{{Ddc}{{l{Kl}}}{{Id{{Bh{Od}}}}}}{{Dd{f{{Bh{c}}}}}{{l{{C`{c}}}}}Cd}{{Dde}{{l{{C`{c}}}}}Cd{{Id{{Bh{{Ch{c}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{Gj{Bf}}}}}}}}{{Ddc}{{l{Nj}}}{{Id{{Bh{Nl}}}}}}{{Ddc}{{l{Lh}}}{{Id{{Bh{Nh}}}}}}{{Ddc}{{l{Ef}}}{{Id{{Bh{Kd}}}}}}{{Ddc}{{l{Eh}}}{{Id{{Bh{Aj}}}}}}{{Ddc}{{l{Bj}}}{{Id{{Bh{{Ch{Ej}}}}}}}}{{Ddc}{{l{Bd}}}{{Id{{Bh{{Ch{{Gj{Bf}}}}}}}}}}{{Ddc}{{l{Bb}}}{{Id{{Bh{{Ch{d}}}}}}}}{{Ddc}{{l{Oh}}}{{Id{{Bh{{Ch{Bf}}}}}}}}{{Ddc}{{l{Nn}}}{{Id{{Bh{{Ch{O`}}}}}}}}{{Ddc}{{l{Fb}}}{{Id{{Bh{{Ch{Jl}}}}}}}}{{Ddc}{{l{Kl}}}{{Id{{Bh{{Ch{Od}}}}}}}}{{Ddc}{{l{Of}}}{{Id{{Bh{Kf}}}}}}{{Ddc}{{l{Oh}}}{{Id{{Bh{Bf}}}}}}{{Ddc}{{l{Lb}}}{{Id{{Bh{{Ch{Hb}}}}}}}}{{Ddc}{{l{Of}}}{{Id{{Bh{{Ch{Kf}}}}}}}}{{Ddc}{{l{Nd}}}{{Id{{Bh{{Ch{Nf}}}}}}}}{{Ddc}{{l{Eh}}}{{Id{{Bh{{Ch{Aj}}}}}}}}{Dd{{l{{C`{c}}}}}Cd}{{{f{{l{Bb}}}}GbGb}{{l{Bb}}}}{{{f{{l{{C`{c}}}}}}GbGb}{{l{{C`{c}}}}}Cd}{{{f{{l{Cf}}}}GbGb}{{l{Cf}}}}{{{f{{l{j}}}}GbGb}{{l{j}}}}{{{f{{l{Ah}}}}GbGb}{{l{Ah}}}}{{{f{{l{c}}}}GbGb}{{l{c}}}Al}{{{f{{l{Fd}}}}GbGb}{{l{Fd}}}}{{{f{{l{Bd}}}}GbGb}{{l{Bd}}}}{{{f{{l{Bj}}}}GbGb}{{l{Bj}}}}{{Dd{Gj{c}}}{{l{{C`{c}}}}}Cd}{{Dd{Gj{c}}Ij}{{l{{C`{c}}}}}Cd}{{DdGj}{{l{c}}}Al}{{{N`{Oj}}{Gj{{Cn{Cl}}}}JlJl}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bb}}}}}}{{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlB`}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bb}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}071{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}5467:9{{{f{{l{c}}}}}GbDl}`{{{f{{l{Cf}}}}}{{A`{{Hd{Hb}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hd{Hb}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{Bj}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bl}}}}}}}}}}}}{{{f{{l{Bj}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{Ef}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fj}{{{f{{l{Ef}}}}AjA@`}{{A`{Mjn}}}}{{DdGbAj}{{A`{{l{Bb}}n}}}}{{DdGbAjAj}{{A`{{l{c}}n}}}Al}{{DdGb}{{l{c}}}Al}{{DdGbAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{Ch{Ij}}}Dl}{{{f{{l{c}}}}}{{f{Oj}}}Dl}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Oh}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Of}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Lb}}}}}Ab}3502941867:{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{{C`{c}}}}}}}{{l{{C`{c}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{c}}}}{f{Dn}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gbe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}Gbdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{Df{l{c}}}}{f{{Bh{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{Bj}}}}{f{{Bh{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{{{f{{l{Bb}}}}{f{{Bh{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{Bb}}}}c{Ch{d}}}{{A`{{l{Bb}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bd}}}}c{Ch{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bj}}}}c{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bj}}}}ce}{{A`{{l{Bj}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{Bl}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{{Bh{Bf}}}}}}}{{Ad{{Ch{{Gj{Bf}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{Dn{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bj}}}}{f{{l{Bb}}}}{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bd}}}}{f{{l{Bb}}}}{Ch{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}{Ch{d}}}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jl}bDl}{{{f{Df{l{c}}}}Mb}bDl}{{{f{{l{Bd}}}}Hb}{{l{Bd}}}}{{{f{{l{Fd}}}}Hb}{{l{Fd}}}}{{{f{{l{Ah}}}}Hb}{{l{Ah}}}}{{{f{{l{c}}}}Hb}{{l{c}}}Al}{{{f{{l{Cf}}}}Hb}{{l{Cf}}}}{{{f{{l{{C`{c}}}}}}Hb}{{l{{C`{c}}}}}Cd}{{{f{{l{j}}}}Hb}{{l{j}}}}{{{f{{l{Bj}}}}Hb}{{l{Bj}}}}{{{f{{l{Bb}}}}Hb}{{l{Bb}}}}{{{f{{l{Bd}}}}Hb{Ch{{f{{Bh{Bf}}}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}Hb{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{{l{Ah}}}}Hb{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Fd}}}}Hb{Ch{{f{{Bh{Bf}}}}}}}{{l{Fd}}}}{{{f{{l{c}}}}HbCh}{{l{c}}}Al}{{{f{{l{Bb}}}}Hb{Ch{d}}}{{l{Bb}}}}{{{f{{l{Bj}}}}Hb{Ch{{f{Bl}}}}}{{l{Bj}}}}{{{f{{l{{C`{c}}}}}}Hb{Ch{{C`{c}}}}}{{l{{C`{c}}}}}Cd}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}HbGb}{{l{c}}}Dl}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bj}}}}d}{{l{Bj}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{Bd}}}}F`}{{l{Bd}}}}{{{f{{l{Bj}}}}F`}{{l{Bj}}}}{{{f{{l{Bb}}}}F`}{{l{Bb}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{c}}}}Hb}{{Hf{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bf}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}Bf}Mj}{{{f{{l{c}}}}Bf}MjFj}{{{f{{l{Ef}}}}Bf}Mj}{{{f{{l{j}}}}}{{f{{Bh{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bb}}}}}{{Ch{Jl}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{Id{{Bh{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{{Bh{A@h}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bh{A@h}}}}}{{l{c}}}Dl}{{{f{{l{Bj}}}}{f{{l{Fb}}}}}{{l{Bj}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}{{Id{{Bh{Jl}}}}A@f}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Id{{Bh{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}}{{{f{{l{Bj}}}}{f{c}}}{{l{Bj}}}{{Id{{Bh{Jl}}}}A@f}}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}{{{f{{l{Bd}}}}{f{{l{Fb}}}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{Id{{Bh{Jl}}}}A@f}}`{{{f{{l{c}}}}dA@l}{{Gj{{Gj{A@n}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bj}}}}Gb}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{Cf}}}}El}b}{{{f{{l{c}}}}}{{A`{{AAf{{AA`{f}}{AAd{{AAb{Gb}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}{{{f{{l{Bd}}}}}{{l{Bj}}}}{{{f{{l{c}}}}}{{Gj{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gj{Gj{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bj}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{I`{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{{C`{c}}}}}}}{{A`{{l{{C`{c}}}}n}}}Cd}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}Gb}{}Dl}{{{f{{l{c}}}}Bf}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bf}MjFj}{{{f{{l{Ef}}}}Bf}Mj}{{{f{{l{Eh}}}}Bf}Mj}{{{f{{l{Nn}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{{C`{c}}}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Kl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Oh}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{{C`{c}}}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Fb}}}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}Gb}{{Ddc}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{c}}}}{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bh{AB`}}}}e}c{}{{ABb{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ij}}}{{l{j}}}}{{{l{j}}{l{Bb}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}32012332012323103232012323013232{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@j{Dj}}}}}}{{{f{{l{j}}}}{f{{l{Bb}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bh}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{Id{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bh}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{Bl}}}}}}}}Jh}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bh{Bf}}}}}}}}}}Jh}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{Id{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{Bl}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bh{Bf}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gb{{f{c}}}{}}0000000000{Gb{{f{Dfc}}}{}}0000000000{Gbb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dl}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{{Bh{Bf}}}}}{{l{Bd}}}}{{{ACn{Bl}}}{{l{Bj}}}}{ADb{{l{Bb}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bh{c}}}}}ADj{}}{{Dd{f{{Bh{{Ch{c}}}}}}}ADj{}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{}Gb}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGb{Ch{El}}}ABl}{{DdGb{Ch{El}}}ABn}{{DdGbGb}ACh}{{DdGbGb}ACj}{{DdGbGb}AC`}{{DdGb}ACl}{{DdGbGbEl}{{ACb{c}}}Al}{{DdGb}{{ACn{c}}}{AD`A@f}}{{DdGb}ADb}{{DdGb}ADd}{{DdGb}{{ADf{c}}}Al}{{DdGbGbElEl}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fn}}}Fn}{{f{f{Dfc}}}b{}}{fb}{{}Fn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{Fn}}{f{Fn}}}d}{{f{f{c}}}d{}}00{{{f{Fn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fn}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{Fn}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0`{AEbAEb}``{{AEdDdEl}e{}{{AEf{c}}}}{{eDdEl}AEf{}{{Jb{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{cc{}}00{{}Gb}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}El}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChH`}`{{{f{AEj}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AEn}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{{AF`{c}}}}}{{Hf{Gb{Ch{Gb}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Gn}{{}Jn}{{GnGn}Gn}{{JnJn}Jn}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}3210{{{f{Gn}}}Jl}0{{{f{Jn}}}Bf}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fl}}}Dl}{{{f{{Mn{c}}}}}{{Mn{c}}}Dl}{{{f{{Kh{c}}}}}{{Kh{c}}}Dl}{{{f{AFb}}}AFb}{{{f{Gn}}}Gn}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{GnGn}{JnJn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dl}{{}{{Kh{c}}}Dl}{{}Gn}{{}Jn}{Gb{{f{c}}}{}}{{{f{{Ml{c}}}}}fDl}111111{Gb{{f{Dfc}}}{}}000000{{GnGn}Gn}{{JnJn}Jn}{{}d}{{{f{Fl}}}{{Ch{Jl}}}}{{{Kh{c}}Jl}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dl}{Gbb}000000<;5{{{f{Gn}}{f{Gn}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfGn}}c}b{{Ib{}{{Cj{Gn}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{e}}}DlDl}{{{Kh{c}}Jn}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dl}{{{f{AFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Gn}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{Gn}}}}{Bf{{Ch{Jn}}}}{JlGn}0{BfJn}010{cGn{{Ib{}{{Cj{Gn}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{Bl}}}{{Ch{Gn}}}}{{{f{Bl}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{f{{Kh{c}}}}}dDl}{{{f{Jn}}}d}{{{f{Fl}}}Jn}{{{f{{Kh{c}}}}}JnDl}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dl}{{{f{Jn}}}Mb}{{}Gb}000000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{GnGn}Gn}{{JnJn}Jn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Gn}{Jn}{{{f{Gn}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDl}21{{{f{{Kh{c}}}}}MbDl}111{{{f{Gn}}}{{AFf{Gn}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{Gn}}}{{AFh{Gn}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{Fl}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dl}{{{Kh{c}}Ch}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dl}4321{{{Kh{c}}}{{Mn{c}}}Dl}{GnGn}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dl}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{{f{DfGn}}Gnd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDl}{{{f{Df{Kh{c}}}}d}bDl}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDl}{{{f{Df{Kh{c}}}}Ch}bDl}033{{{f{Df{Kh{c}}}}Mb}bDl}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dl}{{GnGn}Gn}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dl}{fc{}}0000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dl}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dl}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{Fl}}}}}Dl}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dl}````{{fh}b}{{{f{{AGb{c}}}}Gb}{{Hf{{AGb{c}}{AGb{c}}}}}Cd}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{f{c}}}}}}}}{{AGde}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cd}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gb}dCd}{{{f{{AGb{c}}}}}{{AGb{c}}}{JfCd}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cd}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGhCd}}{cc{}}{{{Gj{c}}}{{AGb{c}}}Cd}{{GbAGd}{{AGb{c}}}Cd}{{{f{{AGb{c}}}}Gb}{{Ch{{f{c}}}}}Cd}{{}AGd}{{{f{Ij}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}{{AGd{f{Ij}}}{{AGb{c}}}Cd}{{{f{Ij}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}0{{}Gb}{{}c{}}{{{f{{AGb{c}}}}}{}Cd}{{{f{{AGb{c}}}}Gb}dCd}0{{fGb}d}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gd{c}}AGj}}}Cd}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cd}{{{f{{AGb{c}}}}}GbCd}0`{db}{{{f{Df{AGb{c}}}}{Ch{Ij}}}bCd}{{{f{Df{AGb{c}}}}GbGb}bCd}{{fGbGb}c{}}01{{{f{{AGb{c}}}}Gb}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{Bl}}}}{{}{{f{Bl}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Ij}}}}}Cd}{{{f{{AGb{c}}}}Gb}{{f{c}}}Cd}{{{f{{AGb{c}}}}Gb}{}Cd}1{{{f{{AGb{c}}}}}{{Gd{c}}}Cd}{{{f{{AGb{c}}}}}{}Cd}{{}c{}}{{{AGb{c}}{Ch{Ij}}}{{AGb{c}}}Cd}{{{f{{AGb{c}}}}{Ch{Ij}}}{{Cn{Cl}}}Cd}1`{{{f{Df{AGn{c}}}}}bCd}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCd}{{{f{Df{AGn{c}}}}c}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{AGn{c}}}{{l{{C`{c}}}}}Cd}{cc{}}{{}Gb}{{}c{}}{{DdGb}{{AGn{c}}}Cd}{{{f{Df{AGn{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{AHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{DdGb}{{Cn{AH`}}}}{{}{{N`{Dn}}}}{{}AGd}{{}Gb}{{}c{}}{{}d}`{{{Cn{Dn}}{N`{Dn}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6````````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bh{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{{f{AHl}}F`}{{l{Fb}}}}{{{f{AHl}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{El}}}{{A`{Abn}}}}0{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Fh}}}Fh}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Fh}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00``{Gbb}00{{{f{F`}}{f{F`}}}d}{{{f{Fh}}{f{Fh}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fh}}}F`}1{{{f{F`}}}Fh}2`{{DdcGb}AIl{}}{{DdGb}AIn}`{{{f{AJ`}}Gb}{{A`{Jjn}}}}{{{f{AJ`}}Gb}Jj}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}0{{{f{F`}}{f{Dfc}}}bADl}{{{f{Fh}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gb}00{{}c{}}00{{{f{AIb}}}d}{{{f{AJd}}}{{A`{{l{Bb}}n}}}}{{{f{AJf}}}{{A`{{l{Bb}}n}}}}88``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJh}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gbn}}}}{{}F`}{{}Fh}{{{f{AJj}}GbGb}{{l{c}}}Dl}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJl}}}Ab}0{{{f{AJn}}}AJn}{{{f{AK`}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AKb}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{AKd}}Hb}{{l{c}}}Dl}{{{f{AKf}}Hbc}{{l{e}}}{}Dl}{{{f{AKh}}GbGb}AKh}0`{{{f{AHl}}d}{{l{c}}}Dl}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{AKj}}Bf}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{AL`}}}{{Gj{{f{{Bh{Bf}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{F`d}F`}{{Fhd}Fh}1010{{Fhc}Fh{{Ib{}{{Cj{d}}}}}}210{F`F`}{FhFh}`{{{f{ALb}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALd{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALh{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALl{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALlDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALf}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GbAl}0{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eAM`d}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AM`}}}AM`}{{f{f{Dfc}}}b{}}{fb}{{}AM`}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{AM`}}{f{AM`}}}d}{{f{f{c}}}d{}}00{{{f{AM`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AM`}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{{Bh{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gb{f{Df{Gj{d}}}}}b}```{{{f{AKh}}GbGb}AKh}0{{Gb{f{{Bh{Ff}}}}{f{DfFh}}}{{A`{{AMb{{l{Fb}}}}n}}}}{{{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bh{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMfHb}00{{{f{Bl}}}{{A`{Ddn}}}}{{{f{Bl}}}{{A`{AMhn}}}}{{{f{AMj}}}Hb}{{{f{Bl}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{AMl}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gj{Jj}}}}}b}{{AMld}AMl}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMn}}{Ch{{f{Bl}}}}}b}{{{f{DfAMl}}{f{AMl}}}{{A`{bn}}}}{{{f{DfAMn}}}b}{{{f{DfAMn}}{f{Bl}}}b}{{{f{AMl}}F`}{{l{Fb}}}}{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{{Bh{Bf}}}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{Dd}}}{{f{ANf}}}}{{{f{Dd}}}{{f{Bl}}}}{{{f{El}}}{{f{El}}}}{{{f{Oj}}}{{f{El}}}}{{{f{ANh}}}{{f{El}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}4{{{f{{L`{LnLb}}}}}{{`{Jh}}}}5{f{{f{c}}}{}}000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AOd{Bl}}}AOf}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{{f{Jj}}{f{El}}}Jj}{{{f{El}}El}El}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AMl}}{f{El}}Fn}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DlDl}{{{f{AOl}}}AOl}{{{f{AOf}}}AOf}{{{f{AMl}}}AMl}{{{f{AOn}}}AOn}{{{f{Jj}}}Jj}{{{f{B@`}}}B@`}{{{f{El}}}El}{{{f{B@b}}}B@b}{{{f{Oj}}}Oj}{{{f{B@d}}}B@d}{{{f{B@f}}}B@f}{{{f{Ld}}}Ld}{{{f{Oh}}}Oh}{{{f{Nn}}}Nn}{{{f{Fb}}}Fb}{{{f{Of}}}Of}{{{f{Nd}}}Nd}{{{f{Nj}}}Nj}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Ef}}}Ef}{{{f{Eh}}}Eh}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bj}}}Bj}{{{f{Bd}}}Bd}{{{f{Fd}}}Fd}{{{f{Bb}}}Bb}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@h}}}B@h}{{{f{AGd}}}AGd}{{{f{B@j}}}B@j}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@l}{{{f{B@d}}{f{B@d}}}B@l}{{{f{DfOj}}El}b}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{f{f{c}}}B@l{}}0{{{f{El}}}d}00{{{AOd{Bl}}}El}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BA`}{{}AOl}{{}AOf}{{}Jj}{{}B@`}{{}El}{{}AGd}{Gb{{f{c}}}{}}{{{f{Dd}}}f}111{{{f{{L`{ce}}}}}fDlDl}222222222222222222222222222222222222222222{Gb{{f{Dfc}}}{}}00{{{f{Df{L`{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMnc}AMl{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{Gbb}000000000000000000000000000000000000000000000{{{f{AOj}}}{{f{El}}}}{{{f{{L`{KnKl}}}}}{{f{El}}}}{{{f{{L`{LfLb}}}}}{{f{El}}}}{{{f{{L`{LjLh}}}}}{{f{El}}}}{{{f{{L`{LlLb}}}}}{{f{El}}}}{{{f{{L`{LnLb}}}}}{{f{El}}}}{{{f{AMl}}}{{f{El}}}}{{{f{Jj}}}El}{{{f{Oj}}}{{f{El}}}}`{fc{{BAd{BAb}}}}0`{{{f{Dd}}{f{c}}}d{{Id{Bl}}A@f}}{{{f{AOl}}{f{AOl}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{El}}{f{AGd}}}d}{{{f{El}}{f{El}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AMl}}{f{Bl}}}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{Bj}}}}}}120{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDlDl}{{{f{AOf}}{f{Bl}}}{{Ch{Jl}}}}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMnAMl}{BA`{{N`{AOf}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{El}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@f}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@j}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Ej}}}Dd}{{{f{Bl}}}Dd}{EjDd}{GlDd}444{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}666666666666{cJjBAf}{{{f{{Bh{Bf}}}}}Jj}8{dJj}{{{f{Bl}}}Jj}{{{Ch{c}}}Jj{{BAh{Jj}}}};;{{{f{Jj}}}El}{{{f{AGd}}}El}{JjEl}>{{{f{Jj}}}Oj}?{{{f{BAj}}}Oj}{cc{}}00{{{f{B@j}}}Ld}11111111111111111111{BAlAGd}2{BAnAGd}3{{{f{AGd}}d}El}{{{l{Fb}}{N`{AOf}}dAOl}AMl}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BB`}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BB`}}}}}}}}{{{l{Fb}}AOl}AMl}{cDd{{Ib{}{{Cj{{f{BAb}}}}}}}}{cDd{{Ib{}{{Cj{{Eb{Bl}}}}}}}}{cDd{{Ib{}{{Cj{{Cn{Bl}}}}}}}}{cDd{{Ib{}{{Cj{BAb}}}}}}{cDd{{Ib{}{{Cj{Ej}}}}}}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{{f{Bl}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BBb}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BBb}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMf}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMf}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMj}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMj}}}}}}}}{{{f{Bl}}}Dd}0{EjDd}{{{f{{l{Bj}}}}{f{{AOd{Bl}}}}AOl}{{A`{AMln}}}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}{{GbcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{DddGbAOl}AMl}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AOf}}Jl}{{f{Bl}}}}{B@dKf}{B@f{{Ch{Kf}}}}{{{f{{L`{LjLh}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{KnKl}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gb}{{A`{Jjn}}}}{{{f{AOj}}Gb}{{A`{Jjn}}}}{{{f{AMl}}Gb}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gb}Jj}{{{f{{L`{LnLb}}}}Gb}Jj}{{{f{{L`{KnKl}}}}Gb}Jj}{{{f{{L`{LjLh}}}}Gb}Jj}{{{f{{L`{LfLb}}}}Gb}Jj}{{{f{AOj}}Gb}Jj}{{{f{AMl}}Gb}Jj}{{{f{AOf}}}{{f{{AOd{Bl}}}}}}{{}El}0000000000000000000000000{{{f{AOf}}Jl}{{Ch{{f{Bl}}}}}}{{B@fKf}Kf}{{B@fc}Kf{{Dn{}{{Ad{Kf}}}}}}{{{f{AMl}}}{{f{{N`{AOf}}}}}}{{{f{El}}}{{Ch{{Gj{Gb}}}}}}{{{f{Jj}}}{{Ch{{f{Bl}}}}}}{{{f{BBd}}Gb}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{Bl}}}}{{{f{AMl}}{f{{l{Bj}}}}}}201{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}}bADl}{{{f{B@`}}{f{Dfc}}}bADl}{{{f{El}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{B@f}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@j}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{ElEl}{{}Gb}000000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Ff}01{{BBfEl}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LfLb}}}Ab}{AMlAb}{JjJj}{DdEj}{{{f{El}}}d}00{{{f{Jj}}}d}111{{{f{AMl}}}d}0212{{{f{AOf}}}d}23330323{{{f{AGd}}}d}34343444434444340{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}}BBh}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{El}}}{{f{El}}}}{{{f{AOf}}}Gb}{{{f{AMl}}}Gb}{DdBBj}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{Bl}}}}{{{f{AMl}}{f{{l{Bj}}}}}}102{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{B@`}}}{{Ch{El}}}}{{{f{AMl}}}Mj}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfBA`}}{f{{N`{AOf}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Nd}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMl}}}{{A`{Gbn}}}}{{{f{AMl}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGbAOl}AMn}{{Ddc}{{L`{LfLb}}}{{Id{{Bh{AMf}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{{Bh{{Ch{AMj}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{{Bh{AMj}}}}}}{{Ddc}{{L`{LlLb}}}{{Id{{Bh{{Ch{BB`}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{{Bh{BBb}}}}}}{{Ddc}{{L`{LlLb}}}{{Id{{Bh{BB`}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{{Bh{{Ch{BBb}}}}}}}}{{Ddc}{{L`{LfLb}}}{{Id{{Bh{{Ch{AMf}}}}}}}}{{{N`{AOf}}}BA`}{{DdEl}Oj}{KfB@d}{HbB@f}{KfB@f}{{{l{c}}}{{L`{ec}}}DlDl}{{}B@b}{{{f{DfBBh}}}Ch}{{{f{AMl}}{f{AMl}}}}{{{f{AMl}}{f{{l{Bj}}}}}}{{{f{AMl}}{f{Bl}}}}210{{{f{AMl}}}Gb}5{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@l}}}}{{{f{Jj}}{f{Jj}}}{{Ch{B@l}}}}{{{f{B@d}}{f{B@d}}}{{Ch{B@l}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@l}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMl}}}{{f{{l{Fb}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gb}}}}{{{f{DfAMn}}{f{Bl}}}{{Hf{Jld}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}{Ch{{f{AMh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{f{{l{Bj}}}}{Ch{{f{AMh}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{AOf}}{f{AOf}}}d}{{{f{{L`{LjLh}}}}}Gb}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBh}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AMl}}d}AMl}{{{f{AMl}}F`}AMl}{{{f{Jj}}}{{Eb{Bl}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{Jj}}{f{El}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMl}}B@bd}{{Cn{Cl}}}}{{{f{El}}B@b}AGd}{{{f{Oj}}B@b}BAj}{LdB@j}{{{f{El}}DdB@b}BAj}{Ld{{f{Bl}}}}{{{f{AMl}}{f{{AOd{Bl}}}}BBl}AMl}{{AGdGbd}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}AMl}{{{f{AGd}}}{{f{AGd}}}}{fc{}}00000000000000000000000000000000000{{{f{El}}}El}{{{f{AGd}}}BBn}{{{f{{L`{LjLh}}}}Gb}{{A`{{Eb{{L`{LjLh}}}}n}}}}{fEj}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}3333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{KnKl}}}}{Ch{{f{AMh}}}}{f{{l{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{AMh}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}00000000000000000000{Hb{{A`{B@d}}}}1111111111111111111111111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jj}}{f{El}}}{{A`{Jjn}}}}{{{f{El}}B@b}{{A`{AGdn}}}}{f{{A`{GlBC`}}}}0000{fAAl}000000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMl}}}{{A`{AMln}}}}{{{f{AMl}}}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}}{{A`{AAnn}}}}1{{{f{El}}Jj}d}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{}c{}}000000000000000000000000000000000000000000000{Gbc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ij}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{DfDd}}BAb}{{A`{bHn}}}}{{{f{DfDd}}BCb}{{A`{bHn}}}}{{{f{DfDd}}{f{Bl}}}{{A`{bHn}}}}{{{f{El}}}Jj}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{{}b}{{{f{DfBCd}}}b}{Gbb}2{cc{}}6{{}Gb}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4`{{{f{DfBCf}}Jl{f{AOf}}}{{A`{{f{DfBCf}}n}}}}{{{f{DfBCf}}}{{f{DfBCf}}}}{{{f{DfBCf}}{f{Bl}}}{{A`{{f{DfBCf}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}>{BCfAMl}>=<{{DdGb{N`{AOf}}AOld}BCf}<;:=``````````````````````````{{{f{BCh}}}{{f{Bl}}}}666555`{{nBCh}n}{nn}6{{{f{BCh}}}f}77666{Gbb}00`{{{f{BCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BCh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{cBCh{{BAh{{Eb{Bl}}}}}}1{BCln}{BCnn}{BD`n}{BDbn}{BDdn}6{BDfn}{{}{{Gf{{f{Bl}}BCj}{{Ad{b}}}}}}{{}Gb}00{{}c{}}00{cnALj}{{{f{Bl}}}BCh}````{{{Gf{{f{Bl}}BCj}{{Ad{b}}}}}b}{cnBDh}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GlBC`}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{Bl}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gj{Ff}}{f{{BDj{El}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gj{Ab}}{f{{BDj{El}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Dn}}}{{Gj{Ff}}}}0{{{f{AAn}}{f{{l{Bb}}}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}{{{f{AAn}}{f{{Bh{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bh{Dd}}}}{f{{BDj{El}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HbGb}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}0{{{f{DfAAn}}{f{Bl}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gb}}}}}}}}6{{{f{BDn}}}BDn}{{{f{BE`}}}BE`}8{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{Bl}}}{{A`{{f{Ff}}n}}}}{{{f{AAn}}e}{{A`{{Gj{{f{Ff}}}}n}}}{{Id{Bl}}}{{Ib{}{{Cj{c}}}}}}{{}BE`}{{}AAn}{Gb{{f{c}}}{}}0000{Gb{{f{Dfc}}}{}}0000{Gbb}000{{{f{AAn}}{f{Bl}}}{{A`{AAnn}}}}1{{{f{DfAAn}}{f{Bl}}}{{A`{Ffn}}}}{{{f{AAn}}e}AAn{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BEb{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bh{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gj{El}}}}9{{{f{{BDj{BAj}}}}}AAn}{{{f{{BDj{El}}}}}AAn}{{{f{BE`}}{f{BE`}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gb}`{{{f{AAn}}e}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gj{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{Bb}}}}}{{A`{AAnn}}}}{{{f{BDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AAn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAAn{{Ib{}{{Cj{Ff}}}}}}{cAAn{{Ib{}{{Cj{Ab}}}}}}{{{f{{Bh{BEd}}}}}{{A`{AAnn}}}}{{{f{{Bh{BEd}}}}{f{{BDj{El}}}}}{{A`{AAnn}}}}{{c{f{{BDj{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BEd}}}}}}}}{{{f{AAn}}Gb}{{Ch{{Gj{Jj}}}}}}{{{f{AAn}}{f{Bl}}}{{Ch{Gb}}}}{{{f{AAn}}}{{Gj{{f{Dd}}}}}}{{{f{AAn}}}{{Gj{Dd}}}}{{{f{AAn}}}{{Gj{{f{Bl}}}}}}{{{f{AAn}}}{{f{{Bh{Ff}}}}}}{{{f{DfAAn}}}{{f{Df{Gj{Ff}}}}}}{{{f{AAn}}Gb}{{A`{BEdn}}}}{{{f{AAn}}Gb{f{DfBEd}}}{{A`{bn}}}}{{{f{AAn}}Gb{f{DfBEd}}}b}{{{f{AAn}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAn}}e}{{A`{BEfn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}{f{BEh}}}{{A`{{Hf{Ff{Gj{Ff}}Cb}}n}}}}1{{{f{AAn}}{Gj{Ff}}dd}{{A`{BEfn}}}}{{{f{BE`}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}}Gb}{{{f{AAn}}{f{{Bh{Ff}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bh{Ff}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bh{Ff}}}}}{{f{DfAAn}}}}{{{f{AAn}}{BEj{Gb}}}f}{{{f{AAn}}{Ob{Gb}}}f}{{{f{AAn}}{BEl{Gb}}}f}{{{f{AAn}}{BEn{Gb}}}f}{{{f{AAn}}BF`}f}{{{f{AAn}}{f{Bl}}}f}{{{f{AAn}}{BFb{Gb}}}f}{{{f{AAn}}Gb}f}{{}Gb}0000{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDl}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{Bb}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jd}}}}{{{f{AAn}}B@bd}BFd}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}}BFf}{AAnBFh}{{{f{AAn}}}Gb}5{{{f{AAn}}}{{A`{{Ch{Ff}}n}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}122{{{Gj{Ff}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}111{{{f{DfBFd}}}Ch}{{{f{DfBFf}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gj{AAn}}n}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Dn{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Dn{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Dn{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Ff}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{Bl}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{Bl}}c}{{A`{{f{DfAAn}}n}}}BFj}{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFj};{{{f{AAn}}{Gj{Ff}}{f{BFl}}}{{A`{{Hf{Ff{Gj{Ff}}Cb}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Gbdd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDj{El}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}Gb}{{Ch{{f{Ff}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFn{Gb}}}}{{{f{AAn}}c}{{A`{{Gj{Ff}}n}}}{{BG`{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDj{El}}}}}}}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDj{El}}}}}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}}{{Hf{GbGb}}}}{{{f{AAn}}Hb}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gb}{{{f{BFd}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{BFf}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AAn}}HbGb}AAn}00{{{f{AAn}}cFh}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{DfAAn}}cFh}{{A`{{f{DfAAn}}n}}}{{BG`{Dd}}}}{{{f{AAn}}Hb}{{Hf{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGbd}{{Gj{AAn}}}}{{{f{AAn}}BDn}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}}{{A`{AAnn}}}}{AAn{{Gj{Ff}}}}{{{f{AAn}}{f{{l{Fb}}}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BGb}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAn}}{Ch{{f{Bl}}}}{Ch{{AAj{Ej{Gj{Ej}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{Bl}}}}{Ch{{AAj{Dd{Gj{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bl}}e}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDl{{ABb{{f{Ff}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hf{{BGd{{Cn{Cl}}}}{f{{BDj{BAj}}}}}}}{{A`{AAnn}}}}{BGf{{A`{AAnn}}}}2{{c{f{{BDj{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BEd}}n}}}}}}}}{{{f{AAn}}{f{Bl}}}{{A`{Gbn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GlBC`}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bh{Ej}}}}}}BE`{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gj{Dd}}}}BE`{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BG`{Dd}}}}{{{f{AAn}}c{f{Bl}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gb}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}c{f{{BDj{El}}}}}{{A`{{f{DfAAn}}n}}}BDl}{{{f{DfAAn}}Ff}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jl}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jl}}}{{f{DfAAn}}}}`````{{fh}b}0{{{f{Ff}}c}{}{AnMh}}{{Ffc}{}{AnMh}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{{f{Ff}}{f{Cb}}}Ff}0000000{{{f{Ff}}{f{Cb}}AjA@`}Ff}1{{{f{Ff}}{f{Cb}}Bf}Ff}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}c}Ff{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Ff}}F`}{{l{Fb}}}}{{{f{Ff}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{BGj}}}{{f{Ab}}}}{{{f{Ff}}}{{f{Ab}}}}{{{f{Ff}}}{{Ch{{f{BGj}}}}}}{{{f{Ff}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Ab}{{{f{Ff}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ff}}}{{Ch{BGl}}}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}1010{{{f{Ff}}}{{A`{{f{{l{Bb}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BGj}}{f{El}}}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}10{{{f{BGj}}{f{El}}Fn}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}Fn}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{AMl}}n}}}}{{{f{Ff}}}Ff}{{{f{BGj}}}BGj}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Ff}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ff}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{{f{Ff}}c}{}{AnMh}}{{Ffc}{}{AnMh}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{Gbb}0?{{{f{BGj}}}{{f{El}}}}{{{f{Ff}}}{{f{El}}}}{{{f{Ff}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Ff}}{f{Ff}}}d}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bb}}n}}}}011{{{f{Ff}}}{{A`{Ffn}}}}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}JjGb}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ff}}}{{Eb{Oj}}}}{{{f{Ff}}AIb}{{A`{Ffn}}}}{{{f{Ff}}{f{{l{Bb}}}}}{{A`{Ffn}}}}{{{f{BGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ff}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{AbFf}{BGjFf}{{AbGb}BGj}{{DdGb{f{El}}}Ff}{{{f{Ff}}GbGb}Ff}{{{f{Ff}}Gb}{{A`{Jjn}}}}{{{f{Ff}}}Gb}{{{f{Ff}}}Jn}{{{f{Ff}}}{{Ch{{Cn{Fl}}}}}}{{{f{Ff}}Gb}{{Ch{{f{K`}}}}}}{{{f{Ff}}Gb}Jj}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bb}}n}}}}0{{{f{BGj}}}d}{{{f{Ff}}}d}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{}Gb}0{{}c{}}0{BDlFf}{BGjFf}{FfFf}{FfAAn}{{{f{DfFf}}}{{f{DfAb}}}}>={{{f{Ff}}}{{A`{{l{Bb}}n}}}}000{{{f{Ff}}}{{l{Bb}}}}0{{{f{Ff}}}Mb}{{{f{BGj}}}{{Ch{{f{Ab}}}}}}{{{f{BGj}}}Gb}{{{f{Ff}}}Gb}{{{f{Ff}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bb}}n}}}}0{{{f{Ff}}}{{A`{Mjn}}}}0{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{AnMh}}{{{f{Ff}}c}{}{AnMh}}{{{f{BGj}}}{{f{Dd}}}}{{{f{Ff}}}{{f{Dd}}}}{{DdMjGb}BGj}{{Ddc}Ff{}}{{DdEl}BGj}{{Dd{f{El}}}Ff}{{{f{Ff}}GbGb}Ff}{{DdMjGb}Ff}==?{{{f{Ff}}}{{Cn{Jd}}}}={{{f{Ff}}}Ff}<=;:{{{f{DfBGj}}Dd}{{f{DfBGj}}}}{{{f{DfFf}}Dd}b}{{{f{Ff}}{f{{Bh{B@f}}}}}{{A`{Ffn}}}}0{{{f{BGj}}Gb}BGj}4{{{f{Ff}}Ajdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{Ff}}Gbdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{BGj}}}{{f{Mj}}}}{{{f{DfFf}}Mb}b}{{{f{Ff}}Hb}Ff}{{{f{DfFf}}}b}{{{f{Ff}}{Ch{Kf}}}Ff}{{{f{Ff}}HbGb}Ff}{{{f{Ff}}F`}{{A`{Ffn}}}}{{{f{Ff}}Hb}{{Hf{FfFf}}}}{{{f{Ff}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{BGj}}{f{El}}}{{A`{BGjn}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{j}}}}n}}}}{{FfFf}}{{{f{Ff}}c}{}{AnMh}}{{Ffc}{}{AnMh}}{{{f{Ff}}{f{Ff}}}}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}{{A`{Ffn}}}}{BGjAb}{FfAb}{{{f{Ff}}{f{{Bh{Jl}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{{Bh{Jl}}}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}Ff}{fc{}}0{{{f{Ff}}}Ff}{{{f{BGj}}}Ab}{{{f{Ff}}c}{{A`{Ffn}}}{{Dn{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Fd}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ff}}}{{Ch{{f{AMl}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ff}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Ef}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Ff}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Fb}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Ff}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{j}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Nn}}}}}}}}5{{{f{Ff}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Ff}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}0{{{f{Ff}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{Ff}}}{{A`{Ffn}}}}0{AbBGj}{{{f{Ff}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{Ff}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FfDd}Ff}{{{f{Ff}}c}Ff{AnMh}}{{{f{Ff}}{f{{l{Bb}}}}{f{Ff}}}{{A`{Ffn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BGn}}}BGn}{{f{f{Dfc}}}b{}}{fb}{{}BGn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}00{{{f{BGn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BGn}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BEf}}}{{A`{AAnn}}}}`{{{f{BH`}}}{{f{{Bh{{BHb{Jl}}}}}}}}{{{f{BEf}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{{f{Cb}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{Cb}}}Cb}{{{f{BEf}}}BEf}{{{f{BHd}}}BHd}{{f{f{Dfc}}}b{}}000{fb}000;{{}BH`}{{}Cb}{Gb{{f{c}}}{}}000{{{f{BHf}}}f}1111{Gb{{f{Dfc}}}{}}0000000`{{BHhc}{}BHj}{Gbb}000{{{f{DfBH`}}}b}1111{{{f{BH`}}{f{BH`}}}d}{{{f{Cb}}{f{Cb}}}d}{{f{f{c}}}d{}}00000`{{{f{BHl}}}Jl}{{{f{BH`}}}{{f{{Bh{Jl}}}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfBH`}}}{{f{Df{Gj{Jl}}}}}}{{{f{BH`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Cb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BHd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Bl}}BHd}Dd}{cc{}}0000{{{Gj{{Hf{Jl{BHb{Jl}}}}}}}BH`}{{{Gj{{Gj{{Hf{Jl{BHb{Jl}}}}}}}}}BH`}{BH`Cb}333{BHnBHd}{cBH`{{Ib{}{{Cj{{Hf{Jl{BHb{Jl}}}}}}}}}}{cBH`{{Jb{}{{Cj{{Hf{Jl{BHb{Jl}}}}}}}}}}{{{f{Cb}}Gb}BHl}{{{f{BEf}}}{{f{Cb}}}}{{{f{DfBEf}}}{{f{DfCb}}}}{{{f{Cb}}}{{l{Fb}}}}{{{f{BI`}}dd}{{A`{Cbn}}}}{{{f{BEf}}}{{A`{AAnn}}}}{{{f{DfCb}}}{{f{DfBH`}}}}{{}Gb}0000000{{}c{}}0000000{CbBH`}1{BH`}{{{f{BH`}}}}310{{{f{BHl}}}d}{{{f{Cb}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Gd{Jl}}}}{Gd{{BHb{Jl}}}}}}}}{{{f{Cb}}}BIf}{{{f{BEf}}}{{Gj{Ff}}}}{{{f{BEf}}{Ch{{Hf{HbGb}}}}}{{Gj{Ff}}}}={{{f{BHl}}}Gb}{{{f{Cb}}}Gb}?????{{{Gj{Jl}}{Gj{{BHb{Jl}}}}d}BH`}{{{f{AAn}}{Gj{Ff}}Cb{Ch{{Gj{Dd}}}}}BEf}{{{f{DfBIf}}}Ch}{{{f{DfBIf}}Gb}Ch}{{{f{BEf}}c}{{A`{AAnn}}}{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{f}{{{f{Cb}}}BHh}{{{f{BEf}}AjA@`}{{A`{AAnn}}}}{{BEfe}BEf{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{Cb}}HbGb}BHf}{{{f{DfBH`}}}b}{{{f{DfCb}}}b}{{{f{BEf}}Bf}{{A`{AAnn}}}}{{{f{BEf}}}{{A`{AAnn}}}}{Cb{{Gj{Jl}}}}0{BEfCb}{{{f{DfBEf}}}Cb}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GlBC`}}}}{fAAl}0000000{CbCb}{{{f{Cb}}}{{f{BH`}}}}{{{f{Cb}}}{{f{{Gj{{AAb{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bh{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bh{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bh{c}}}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bh{c}}}}{f{Ij}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bh{{Cn{Cl}}}}}}}d}{{{f{BIn}}{f{Cb}}}Ab}{{BJ`BJ`}BJ`}0`{{{f{BJb}}{f{AAn}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJb}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBJd}}Jj}{{Ch{b}}}}{{{f{DfBJf}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BJd}}}BJd}{{{f{BJf}}}BJf}{{{f{BEd}}}BEd}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bh{c}}}}}El{{If{El}}}}{{}BEd}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{{{f{BEd}}{f{BEd}}}d}{{f{f{c}}}d{}}00{{{f{BEd}}{f{DfHl}}}{{A`{bHn}}}}{{{Hf{{f{El}}Gb}}}BJd}{cc{}}0{{{Hf{{f{El}}Gb}}}BJf}1{{gGb}{{BDj{El}}}{{BAh{Dd}}}{{BAh{El}}}{{D`{}{{Cj{{Gj{{Hf{ce}}}}}}}}}}{{}Gb}00{{}c{}}00{BJdAb}{BJfAb}{{{f{El}}Gb}BJd}{{{f{El}}Gb}BJf}{{{Gj{Jj}}}BEd}{{{f{DfBJd}}Gb}Ab}{{{f{DfBJf}}Gb}Ab}{{{f{{Bh{BEd}}}}{Ch{Gb}}}{{A`{{BDj{El}}n}}}}0{{{f{{Bh{BEd}}}}{Ch{Gb}}}{{A`{{Gj{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bh{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bh{AAn}}}}d}{{A`{AAnn}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bh{Dd}}}}{f{{Bh{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BFhc}{{A`{AAnn}}}{{Dn{BJh{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BK`}}{f{{Bh{Jl}}}}dd}AAn}{{{f{BK`}}{f{{Bh{Jl}}}}{Ch{{Hf{HbGb}}}}}AAn}{{{f{BK`}}{f{AAn}}{f{Ab}}{f{Ab}}BKb}{{A`{AAnn}}}}`{{{f{Bl}}{f{Bl}}}Dd}{{BKd{N`{{Bh{Dd}}}}}BBj}{{{f{BK`}}{f{Ab}}{f{Ab}}{Ch{{Hf{HbGb}}}}dd}{{A`{AAnn}}}}{{{f{BGf}}Gb}{{Hf{BGfBGf}}}}{{{f{AHd}}}Aj}{{{f{BKf}}}Aj}{{{f{BKh}}{f{{Bh{A@h}}}}Mb}AAn}0{{{f{BKh}}{f{{Bh{A@h}}}}}AAn}0{{{f{BKj}}{Ch{{Gj{{f{Bl}}}}}}{Ch{{f{Bl}}}}d}{{A`{AAnn}}}}{{BFhd}BFh}{{{BKl{c}}{Ch{{N`{BKn}}}}}{{BKl{c}}}BL`}{{{f{Ab}}}{{A`{Abn}}}}{BBjBBj}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLdBLd}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}0{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}1{{BLhc}BFh{{Id{{Bh{BBj}}}}}}6`{{BBjc}BBj{{BAh{Dd}}}}{{}BBj}{{BBjd}BBj}{{}BLj}{c{{A`{BBjn}}}{{Id{{Bh{BBj}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBLl}`{{BLnd}BLn}`{{{f{BM`}}}d}00`{{BBjc}BBj{{BAh{BBj}}}}{{{f{BKf}}}{{A`{Mjn}}}}{{{N`{BM`}}BMb}{{A`{BFhn}}}}{{BFhBFhcc}BFh{{BAh{BBj}}}}97{{BBjcd}BBj{{BAh{BBj}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{BLhc{N`{{BDj{El}}}}}BFh{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{BBjc{BMf{{N`{BMd}}}}}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBjBBjc{BMf{{N`{BMd}}}}}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{{f{BBj}}{f{Dfc}}f}{{A`{BMhn}}}{{Af{{f{BBj}}f}{{Ad{{A`{BMhn}}}}}}}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{BBjc{f{{Bh{BBj}}}}{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bh{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBjBMj{f{{Bh{BBj}}}}dd}BBj}{{ce{BMf{{N`{BMd}}}}d}BBj{{Dn{{f{Df{Bh{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{Id{{Bh{BBj}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bh{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{BBjBBjHbEl}BBj}{BGf{{N`{Cl}}}}{{{f{BMl}}}{{Ch{Gb}}}}{BMnBBj}{BN`BBj}{BBjBBj}3210{{{f{AHl}}F`}{{l{Fb}}}}{{BBjF`}BBj}{{{f{BKf}}F`}{{l{Fb}}}}{{cFh}BBj{{Id{{Bh{BBj}}}}}}{{{f{AHl}}{f{{Bh{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}6{{{f{BKf}}}{{A`{{l{Fb}}n}}}}{cBBj{{BAh{BBj}}}}{{{f{BNb}}}{{f{{Bh{Oj}}}}}}``{BBjBMn}{eAN`{}{{Ib{}{{Cj{c}}}}}}{cBGf{{Ib{}{{Cj{b}}}}}}{cBGf{{Ib{}{{Cj{{Ch{b}}}}}}}}2{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{AGdc}BGf{{Ib{}{{Cj{{Ch{b}}}}}}}}{{AGdc}BGf{{Ib{}{{Cj{b}}}}}}`{{{f{Df{BNd{c}}}}}{{A`{{BDj{BAj}}n}}}BNf}{{{f{BM`}}}{{f{AGf}}}}{{{f{BKf}}}{{f{AGf}}}}{{{f{BNh}}}{{f{AGf}}}}{{{f{BGf}}}{{f{AGf}}}}{{{f{DfBKf}}}{{f{DfAGf}}}}{{{f{DfBGf}}}{{f{DfAGf}}}}{{{f{Mj}}}Jj}{{{f{BNj}}}{{f{{l{Bd}}}}}}{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BNn{BO`A@f}}{{{f{BOb}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBLl}{{{f{{N`{c}}}}}OdBOd}{{{f{BOf}}}{{f{BBj}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}{{{f{ANh}}}{{f{El}}}}{{{f{BOh}}}{{f{Ab}}}}{{{f{DfBKf}}}{{A`{Gbn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BOj}}}{{f{{l{Bj}}}}}}{{{Gj{BBj}}}BBj}{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{Bh{{BOl{c}}}}e}}}{{N`{{Bh{c}}e}}}{}BLl}{{{N`{{BOl{c}}e}}}{{N`{ce}}}{}BLl}{{{f{Bl}}}BBj}{{BBj{Ch{Jl}}}BBj}{{{f{BOn}}}{{A`{{l{Bj}}n}}}}{{{f{BOn}}}{{l{Bj}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{{{BKl{{Cn{BL`}}}}{Ch{{N`{{BDj{El}}}}}}}{{A`{C@`n}}}}{{{C@b{c}}{f{{BDj{El}}}}}{{A`{{C@d{c}}n}}}C@f}{{{C@h{c}}{f{{BDj{El}}}}}{{A`{{C@j{c}}n}}}C@f}{{{C@l{c}}Gb}{{A`{C@nn}}}BL`}{{{CA`{c}}{f{{BDj{El}}}}}{{A`{{CAb{c}}n}}}C@f}{{{f{Df{BKl{c}}}}}{{A`{CAdn}}}BL`}`{BBjCAf}{{BBjCAhBBj}BBj}{{BLdBLd}}{{BLjBLj}BLj}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLj}}BLj}b}210{{{f{BLj}}}Jl}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}1111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BFhJlcFh}BFh{{Id{{Bh{BBj}}}}}}{BGf{{Cn{Cl}}}}{{{f{BKf}}}{{Ch{{Cn{Fl}}}}}}``{BFhBFh}```{{{f{CAj}}{f{Dd}}}{{A`{Ddn}}}}{{CAl{Gj{BBj}}}{{A`{BBjn}}}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{BNh}}{f{Df{Bh{Ff}}}}}{{A`{{Ch{Ff}}n}}}}{{{f{CAn}}FfFf}{{A`{Ffn}}}}{{CAl{Gj{BBj}}}BBj}{{{f{CB`}}}b}{{BBjEl}BBj}{{{f{BKf}}{f{El}}Fn}{{A`{Abn}}}}{{BFh{CBb{{f{Bl}}ElA@l}}d}BFh}{{{f{AI`}}{f{El}}}{{A`{Abn}}}}3{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{BFhEld}BFh}2{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}{{BBjElFn}BBj}`{BBjCBd}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{BBjBBj}{{{f{CBf}}}{{A`{Abn}}}}1`{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{BGf}}Gb}d}{{{f{CBj}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBj}}c}{{A`{Abn}}}B`}{{{f{BKf}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}``{{{f{BKf}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBKf}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBjBBj}BBj}10{{{f{CB`}}}CB`}{{{f{BFh}}}BFh}{{{f{BLh}}}BLh}{{{f{BMb}}}BMb}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{BEh}}}BEh}{{{f{BFl}}}BFl}{{{f{CCf}}}CCf}{{{f{BGh}}}BGh}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{BKb}}}BKb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{BOf}}}BOf}{{{f{BBj}}}BBj}{{{f{{CHf{c}}}}}{{CHf{c}}}{JfJf}}{{{f{CHh}}}CHh}{{{f{CAh}}}CAh}{{{f{{BMf{c}}}}}{{BMf{c}}}Jf}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{BMj}}}BMj}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{BLd}}}BLd}{{{f{CAl}}}CAl}{{{f{BLj}}}BLj}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BLlJf}}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{A@b}}}A@b}{{{f{BGb}}}BGb}{{{f{BGf}}}BGf}{{{f{Mj}}}Mj}{{{f{BAj}}}BAj}{{{f{A@`}}}A@`}{{{f{BIh}}}BIh}{{{f{CKb}}}CKb}{{{f{CKd}}}CKd}{{{f{CKf}}}CKf}{{{f{BKf}}}{{N`{BKf}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CKh}}}{{Ch{{f{CKj}}}}}}{{{f{CBl}}}{{Ch{{f{CKj}}}}}}{{{f{CC`}}}{{Ch{{f{CKj}}}}}}``{{{f{BGh}}{f{BGh}}}B@l}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@l{CKlA@f}BLl}{{{f{{Bh{BBj}}}}}BBj}{{BLnCEf}BLn}{{{f{CEf}}{f{CEj}}}d}`{{{f{{Bh{Ff}}}}}{{A`{Ffn}}}}{cBBj{{BAh{Dd}}}}{BFh{{A`{AAnn}}}}{c{{A`{{Gj{AAn}}n}}}{{Jb{}{{Cj{BFh}}}}}}{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{BFh{{A`{CB`n}}}}{{{f{DfBFh}}}{{A`{{N`{{BDj{El}}}}n}}}}{eBBj{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CJj}}Gb}CKn}``{{{f{BKj}}{Gj{{f{Bl}}}}{Ch{{f{Bl}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@l{}}0{BLjBLj}```{{{f{CGl}}}{{A`{{N`{{BDj{El}}}}n}}}}{{cCK`}{{A`{BFhn}}}{{Id{{Bh{BFh}}}}}}{{{f{BOn}}{f{{l{Bj}}}}}{{l{Bj}}}}{{ed}{{A`{BBjn}}}{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{{f{CKh}}{Gj{BFh}}}{{A`{BFhn}}}}{{{f{CBl}}{Gj{BFh}}}{{A`{BFhn}}}}44{e{{A`{BBjn}}}{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{c{f{Bl}}d}BBj{{Id{{Bh{BBj}}}}}}{{BMnc}BBj{{BAh{BBj}}}}{{{f{CL`}}{f{{Bh{Bf}}}}}{{l{Bb}}}}{{{f{BOn}}{f{Bl}}d}{{A`{{l{Bb}}n}}}}{{BN`c}BBj{{BAh{BBj}}}}{{{f{BLj}}BLj}d}{{{f{CL`}}{f{{l{Bd}}}}}{{l{Bb}}}}{{{f{BOn}}{f{{l{Bj}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gb}{{A`{{l{Fb}}n}}}}{BFhBFh}{{{CLb{c}}}{{A`{Gbn}}}BL`}{BBjBBj}{{{f{BOn}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}d}{{A`{{l{Fb}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANd}}Bf{Ch{Bf}}{Ch{{f{CDf}}}}Bfd}{{A`{Gbn}}}}{{{f{{Bh{Bf}}}}Bf{Ch{Bf}}{Ch{{f{CDf}}}}Bfd}{{A`{Gbn}}}}2{{{AOd{Bl}}}El}{{{f{BK`}}{f{{Bh{A@h}}}}d}AAn}`{{BFhBFh{Ch{Dd}}}BFh}{{{f{CLd}}{f{AAn}}{Ch{Dd}}{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}{{{f{CLd}}{f{AAn}}{Ch{{Hf{HbGb}}}}d}{{A`{{Hf{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBjd}BBj}{{BBjced}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{Id{{Bh{BBj}}}}}}212121{{ce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{Id{{Bh{BBj}}}}}}32{{CLfBBjGbd}BBj}```{{BBjBBjBGhCCh}BBj}`{CIhBBj}`{{BBjBBjBGhCCh{Ch{Ld}}{Ch{Dd}}}BBj}0{AMfHb}00{{{f{CLh}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLl}}}{{l{Lb}}}}{{{f{BGh}}}Hb}`{{{f{BGh}}}d}```{{}b}{cbBLl}{{}BFh}{{}BMb}{{}CBn}{{}CCb}{{}CLn}{{}BEh}{{}BFl}{{}CCl}{{}CD`}{{}CDb}{{}CDd}{{}CDj}{{}CDl}{{}CDn}{{}CEb}{{}BKb}{{}CEd}{{}CEf}{{}CEh}{{}CEl}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFj}{{}CFl}{{}CGf}{{}CGj}{{}CGl}{{}BBj}{{}{{BMf{{N`{BMd}}}}}}{{}{{BMf{{N`{CAn}}}}}}{{}{{BMf{{N`{CM`}}}}}}{{}CIf}{{}CIh}{{}CIj}{{}CIn}{{}CJ`}{{}CJb}{{}CJd}{{}CJh}{{}BLj}{{}{{N`{Bl}}}}{{}{{N`{c}}}CMb}{{}{{N`{{Bh{c}}}}}{}}{{}{{N`{CMd}}}}{{}CJn}{{}CK`}{{}A@b}{{}BGb}{{}BAj}{{}A@`}`{{}{{AAj{{Gj{AB`}}{Gj{A@h}}}}}}{Gb{{f{c}}}{}}0{{{f{{AMb{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BMf{c}}}}}f{}}222222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBLl}33333333333333{Gb{{f{Dfc}}}{}}00{{{f{Df{AMb{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CGl}}}{{A`{Ejn}}}}{{{f{BFh}}}{{A`{Ejn}}}}0001{{{f{{N`{c}}}}}{{f{Bl}}}{ALjA@f}}{{{f{BAj}}c}{{A`{CMfn}}}{{Jd{}{{Cj{{f{CMh}}}}}}}}```{{{f{Ab}}HbCMj}{{A`{Abn}}}}{{BN`HbCMj}BBj}{{BBjHbCMj}BBj}{{BLjBLj}BLj}{{{f{CGl}}}{{A`{{`{BDh}}n}}}}``{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{BBjc}BBj{{BAh{BBj}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BLl{AGfIlIn}}{{{N`{AGfc}}}{{N`{ec}}}BLl{AGfIlIn}}{{{f{{N`{ce}}}}}{{CMl{ce}}}A@f{JfBLl}}{Gbb}000000{{{f{DfCB`}}}b}1{{BFhe}BFh{{BAh{BLd}}}{{Ib{}{{Cj{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBLl}33333333333333{BBjBBj}2{{BFh{Ch{{Gj{BBj}}}}}BFh}1{{{f{BKf}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMh}}}{{L`{LlLb}}}}`{BBjCMn}{{{f{AOj}}}{{f{El}}}}{{{f{BKf}}}{{f{El}}}}{{{f{BGf}}}{{f{AGd}}}}{{{f{Mj}}}{{f{El}}}}{{{f{BAj}}}{{f{AGd}}}}``{{{f{El}}}BBj}{cBBj{{Id{{Bh{El}}}}}}`{CIjBBj}{{}CIf}{{}BLj}{fc{{BAd{BAb}}}}0`{{{f{CL`}}{f{{Bh{Bf}}}}}{{l{Bb}}}}{{{f{CL`}}{f{{l{Bd}}}}}{{l{Bb}}}}{{BGh{f{El}}{f{Bl}}}{{A`{bn}}}}{{BGh{Ch{{f{Bl}}}}{f{Bl}}}{{A`{bn}}}}{{{f{{BDj{c}}}}{f{{BDj{c}}}}}{{A`{bn}}}{}}{{{f{CN`}}{f{Bl}}}{{A`{bn}}}}`{{{f{CCd}}{f{CCd}}}d}{{{f{BEh}}{f{BEh}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{BOf}}{f{BOf}}}d}{{BBjc}BBj{{BAh{BBj}}}}{{{f{BBj}}{f{BBj}}}d}{{{f{{CHf{c}}}}{f{{CHf{c}}}}}d{CNbJf}}{{{f{CHh}}{f{CHh}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{{BMf{Ab}}}}{f{{BMf{Ab}}}}}d}{{{f{{BMf{{N`{c}}}}}}{f{{BMf{{N`{c}}}}}}}dA@f}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CMf}}{f{CMf}}}d}{{{f{CId}}{f{CId}}}d}{{{f{BMj}}{f{BMj}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNbA@f}BLl}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{CNd}}}}{f{CNd}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{BGf}}{f{{f{Cl}}}}}d}{{{f{BGf}}{f{BGf}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAj}}{f{BAj}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BIh}}{f{BIh}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{CKf}}{f{CKf}}}d}{{BBjc}BBj{{BAh{BBj}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CNfBBjd}BBj}``{{BBjc}BBj{{BG`{Dd}}}}{{BBjc}BBj{{Id{{Bh{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDd}}}CNh{}}{{{f{{Bh{CNj}}}}d{Ch{{f{CKj}}}}}{{A`{{N`{{Bh{CNj}}}}n}}}}{{{f{{Bh{CNj}}}}d{Ch{{f{CKj}}}}d}{{A`{{Hf{{N`{{Bh{CNj}}}}Gb}}n}}}}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}d{{Id{ANd}}}}{{{f{BFh}}d}{{A`{Ejn}}}}{{BFhe}BFh{{BAh{BLd}}Jf}{{Id{{Bh{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBjBBj}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{DfBLj}}c}b{{Ib{}{{Cj{BLj}}}}}}{{BBjBBjBBj}BBj}{{{f{BOn}}{f{{l{Bj}}}}Gb}{{A`{{l{Bj}}n}}}}{A@h{{Hf{JlJl}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{Bl}}{f{El}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CB`}}}{{Ch{{A`{AAnn}}}}}}{{BFhGb}{{A`{AAnn}}}}{{{f{CB`}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BKf}}}{{Eb{Oj}}}}{{BKdHb}BBj}{{BKd{f{Bl}}}BBj}{{BKde}BBj{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BGf}}}{{f{{Bh{BAj}}}}}}`{{BFhc}BFh{{BAh{BBj}}}}{{BBjc}BBj{{BAh{BBj}}}}`10{{BBjAIb}BBj}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BKf}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{BFhBBj}BFh}5{{{f{BOn}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Fb}}n}}}}{CNl{{A`{AAnn}}}}{{{f{DfCNn}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dl}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BLnBFh}{{{BKl{c}}}{{A`{AAnn}}}BL`}{CKh{{A`{BFhn}}}}{CBl{{A`{BFhn}}}}{CC`{{A`{BFhn}}}}{{{f{Df{C@b{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{CO`{c}}}{{A`{AAnn}}}BL`}{{{BNd{c}}}{{A`{AAnn}}}BNf}{{{f{Df{COb{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{f{Df{C@h{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{f{Df{COd{c}}}}{f{DfAAn}}}{{A`{bn}}}C@f}{{{COf{c}}}{{A`{AAnn}}}BL`}{{{CLb{c}}}{{A`{AAnn}}}BL`}{{{C@l{c}}}{{A`{AAnn}}}BL`}{{{CA`{c}}{f{DfAAn}}}{{A`{Kfn}}}C@f}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{CO`{c}}{Ch{{N`{BKn}}}}d}{{A`{AAnn}}}BL`}{{{f{C@n}}Gb}d}{{}BBj}{BFhBFh}{BN`BBj}{BBjBBj}{{{f{BKf}}}Mj}`1```{{}{{BMf{{N`{BMd}}}}}}{{{f{CBf}}}{{A`{Abn}}}}3{{BBjBBj}BBj}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBDd}}}}{{{f{BNh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CCh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@h}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BM`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CD`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{COh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CG`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BBj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{CHf{c}}}}{f{DfHl}}}{{A`{bHn}}}Jf}{{{f{CHh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{BMf{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CHj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CMf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{BMj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLj}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{CJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@fBLl}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BDhA@f}BLl}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGhA@f}BLl}{{{f{CJn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CK`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bl}}BHd}Dd}```{{BBjce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{Id{{Bh{BBj}}}}}}{{BLnd}BLn}``{{{f{Bl}}c}{{A`{BBjn}}}{{Id{{Bh{BBj}}}}}}{{BBj{Ch{Jl}}}BBj}{cc{}}00000000{CGlBFh}{BLhBFh}222222222222222222222222222222222{JlAB`}33333333{{{f{Bl}}}CDf}4444444{CEjBKb}555555555555555555555555555{dBBj}{KdBBj}{O`BBj}{NfBBj}{BfBBj}{{{f{Bl}}}BBj}{OdBBj}{JlBBj}{KfBBj}{NlBBj}{HbBBj}{AjBBj}{cc{}}{BOfBBj}11{CFfCAh}2{BMj{{BMf{{N`{BNh}}}}}}3{CHj{{BMf{{N`{BNh}}}}}}{CHl{{BMf{{N`{BNh}}}}}}{COj{{BMf{{N`{BNh}}}}}}{CHn{{BMf{{N`{BNh}}}}}}{COl{{BMf{{N`{BNh}}}}}}{COn{{BMf{{N`{BNh}}}}}}{CId{{BMf{{N`{BNh}}}}}}{CIb{{BMf{{N`{BNh}}}}}}{D@`{{BMf{{N`{BNh}}}}}}<<<<<<{D@bCMf}={COlBMj}{CIbBMj}?{CHlBMj}{CHjBMj}{cc{}}000000{CJdCJb}111{BBjBLd}2{DdBLd}{EjBLd}{{{f{Bl}}}BLd}5555{{{f{{Bh{c}}}}}{{N`{{Bh{c}}}}}Jf}{{{f{Bl}}}{{N`{Bl}}}}{Gl{{N`{Bl}}}}{{{f{ANd}}}{{N`{ANd}}}}{D@dc{}}:{D@f{{N`{ANf}}}}{D@h{{N`{CMd}}}}{{{f{CMd}}}{{N`{CMd}}}}{Ej{{N`{Bl}}}}{{{N`{Bl}}}{{N`{{Bh{Bf}}}}}}{CNj{{N`{ANd}}}}{c{{N`{c}}}{}}{{{AAb{c}}}{{N`{{Bh{c}}}}}{}}{{{Eb{c}}}{{N`{c}}}{D@jA@f}}{{{Gj{ce}}}{{N`{{Bh{c}}e}}}{}{BLlJf}}{{{Cn{ce}}}{{N`{ce}}}A@fBLl}{{{f{ANf}}}{{N`{ANf}}}}{cc{}}00000{D@lBGf}{D@nBGf}{NfMj}3{BfMj}{KfMj}{O`Mj}{AjMj}{OdMj}{JlMj}{NlMj}{HbMj}{KdMj}<<<<<<{{{f{{BDj{BAj}}}}}DA`}{Jl{{Ch{BLj}}}}{JlBLj}00{{c{Ch{Ij}}}DAb{}}{{{DAd{Hb}}{DAd{Bf}}{Ch{Ij}}}DAf}{{{DAd{Hb}}{DAd{Bf}}{Ch{Ij}}}DAh}{c{{AMb{{l{Bb}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AMb{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{cBLj{{Ib{}{{Cj{BLj}}}}}}{e{{N`{{Bh{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{{gGb}{{DAj{Hb}}}Id{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{DAj{Hb}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{DAj{Hb}}}BIl{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{Bl}}}{{Ch{BLj}}}}{c{{AMb{{l{e}}}}}{{Jb{}{{Cj{}}}}}Al}{e{{N`{{Bh{c}}}}}Il{{Jb{}{{Cj{c}}}}}}`{c{{A`{{CLb{AFj}}n}}}{{BAh{CNj}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BLlA@f}{{Dd{f{{Bh{c}}}}}ADj{}}{{Dd{f{{Bh{{Ch{c}}}}}}}ADj{}}{{{f{Bl}}}{{A`{DAl}}}}{c{{AMb{{l{Bb}}}}}{{Jh{}{{Cj{d}}}}}}{c{{AMb{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{El{{BMf{{N`{BMd}}}}}}{{Ddc}DAn{}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}`{{DdcGb}AIl{}}{{GbcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{}CIf}{{BFhBFhcc}BFh{{BAh{BBj}}}}{{{f{DB`}}{f{AAn}}ei}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAh{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGb}AIn}{{GbAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}BGf}``{{BBjc{BMf{{N`{BMd}}}}DBb}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}`{{BBjc}BBj{{BAh{BBj}}}}{{BBjGbGb}BBj}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBdA@f}BLl}{{{f{BKf}}Gb}{{A`{Jjn}}}}{{BMnBBjd}BBj}{{BN`BBjd}BBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}6{{{f{AJ`}}Gb}{{A`{Jjn}}}}{{{f{AOj}}Gb}{{A`{Jjn}}}}{{{f{AJ`}}Gb}Jj}{{{f{AOj}}Gb}Jj}{CBdBBj}{{{f{BFh}}}BLj}{{{f{CJl}}}El}{{}El}{{{f{CCn}}HbCCh{Ch{{f{AMh}}}}}{{A`{CCfn}}}}00{{{f{CM`}}{f{{BDj{El}}}}DBf{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BMd}}{f{{BDj{El}}}}DBf{f{{Bh{Oj}}}}}{{A`{Ojn}}}}{{{f{DA`}}{f{Bl}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bh{BAj}}}}}}{{{f{BNb}}}Gb}{{{f{{Bh{Bf}}}}}{{Ch{Gb}}}}{{{f{Df{C@l{c}}}}}{{A`{{f{{N`{CJj}}}}n}}}BL`}{{{f{BKf}}}{{Ch{{Nb{Fl}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLl}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBLl}{{{f{BKf}}Gb}{{Ch{{f{K`}}}}}}{{{f{BKf}}GbGb}{{Ch{{f{K`}}}}}}{{{f{CCn}}CCfCChLd{Ch{{f{AMh}}}}CCl}{{A`{DBhn}}}}{{{f{CD`}}}{{N`{CDb}}}}{{{f{Dfc}}}{{A`{DBjn}}}{BNfBL`A@f}}{{{f{COh}}{f{{BDj{El}}}}}{{A`{{N`{{BDj{El}}}}n}}}}{{{f{BBd}}Gb}Jj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BKf}}Gb}Jj}{{{f{CKh}}}d}{{{f{CBl}}}d}`{{BFhe}BLh{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{{f{DBl}}{Gj{Ff}}{f{BEh}}}{{A`{{Hf{Ff{Gj{Ff}}Cb}}n}}}}{{BFhBBjcBEh}BLh{{Id{{Bh{BBj}}}}}}2{{BGhBGh{f{{Bh{Hb}}}}CChLd{Ch{AMh}}}{{A`{{Gj{{AAb{Jl}}}}n}}}}{{CCn{f{{Bh{Hb}}}}CChLd{f{{Ch{Dd}}}}ddCCl}{{Hf{{Gj{{AAb{Jl}}}}{Gj{Hb}}{Gj{Hb}}}}}}{{{f{BI`}}dd}{{A`{Cbn}}}}{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAh{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBdA@f}BLl}21`{{{f{BKf}}}d}{{{f{BEh}}{f{Dfc}}}bADl}{{{f{BFl}}{f{Dfc}}}bADl}{{{f{BGh}}{f{Dfc}}}bADl}{{{f{CCh}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{BKb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{CG`}}{f{Dfc}}}bADl}{{{f{CGb}}{f{Dfc}}}bADl}{{{f{CGd}}{f{Dfc}}}bADl}{{{f{CGf}}{f{Dfc}}}bADl}{{{f{CGh}}{f{Dfc}}}bADl}{{{f{CGj}}{f{Dfc}}}bADl}{{{f{BOf}}{f{Dfc}}}bADl}{{{f{BBj}}{f{Dfc}}}bADl}{{{f{CHh}}{f{Dfc}}}bADl}{{{f{CAh}}{f{Dfc}}}bADl}{{{f{CHj}}{f{Dfc}}}bADl}{{{f{CHl}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{BMj}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIl}}{f{Dfc}}}bADl}{{{f{CIn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{CJd}}{f{Dfc}}}bADl}{{{f{CJf}}{f{Dfc}}}bADl}{{{f{CJh}}{f{Dfc}}}bADl}{{{f{BLd}}{f{Dfc}}}bADl}{{{f{CJl}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DBnA@f}BLlADl}{{{f{CJn}}{f{Dfc}}}bADl}{{{f{CK`}}{f{Dfc}}}bADl}{{{f{BGb}}{f{Dfc}}}bADl}{{{f{BAj}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CKf}}{f{Dfc}}}bADl}{{{f{DC`}}{f{Ab}}CEld}{{A`{{Hf{{Hf{{Gj{Jl}}{Gj{Jl}}}}d}}n}}}}{{{f{DC`}}{f{Ab}}CEld}{{A`{{Hf{{ALn{Jl}}{ALn{Jl}}}}n}}}}{{{f{DC`}}{f{Ab}}dd}{{A`{{Gj{Jl}}n}}}}{{BLh{Ch{Gb}}}BFh}{{BN`BBj}BBj}{{BBj{Ch{Gb}}}BBj}{{{f{BOn}}}{{A`{{l{Bj}}n}}}}{{{f{BOn}}}{{l{Bj}}}}``{{{f{{Bh{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DCb}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLl}}}{{l{Lb}}}}`{{BLnCEj}BLn}`{{{f{AB`}}}Jl}`{{{f{{Bh{Ff}}}}Ld}{{A`{Ffn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CKf{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{BBjBBj}{{{f{AMf}}}d}{{{C@b{c}}d}{{C@b{c}}}C@f}````0`{{}b}{cb{JfBLl}}``{cBBj{{Id{{Bh{Hb}}}}}}``{{{f{{Bh{Jl}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{DBj}}Bf{Ch{Gb}}d{Ch{{f{{BDj{El}}}}}}GbGb{Ch{{f{CDf}}}}{Ch{Bf}}Bf{Ch{{f{CDh}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hf{{BDj{El}}GbGb}}n}}}}{{{COf{c}}{Ch{{DCd{Gb}}}}}{{COf{c}}}BL`}{{{CLb{c}}{Ch{{DCd{Gb}}}}}{{CLb{c}}}BL`}``{{}Gb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BFhBFhcc}BFh{{BAh{BBj}}}}{{{f{DB`}}{f{AAn}}ei}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAh{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLj}}BLj}b}{{BBjBBjHbEl}BBj}{{BBjBBjBBj}BBj}``{{{f{Ab}}CGd}Ab}{{BBjCGd}BBj}`{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{BBjBBj}BBj}{{BLjBLj}BLj}{{{f{BLj}}BLj}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDlFf}{{}Ff}{{MjDd}Ff}{BGf{{Hf{{Gj{BAj}}{Gj{{Cn{Cl}}}}{Ch{Ij}}}}}}{{{AMb{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BLl}66{{{f{BBj}}}}{BLj}{{{f{BGf}}}}{DCfBN`}{BN`BN`}{{{N`{ce}}}{}A@fBLl}{{{N`{ce}}}{{Hf{e}}}A@fBLl}{{CD`c}{{BKl{c}}}BL`}{{BBfEl}{{A`{Mjn}}}}{BFjAb}{{{N`{BKf}}}Ab}{{MjDd}Ab}{BG`{{Gj{c}}}{}}{{}{{Gj{Dd}}}}{{{f{BLj}}}d}{{{f{CAh}}}d}{{{f{CEj}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CGf}{{A`{{l{Bb}}n}}}}{{BBjccCGf}BBj{{BAh{BBj}}}}{cd{{Id{ANd}}}}4{{{f{BGh}}{Ch{{f{Bl}}}}}d}{{{f{CIf}}}d}7{{{f{BKf}}}d}{{{f{C@n}}}d}{BBjBBj}{{{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{AJd}}}{{A`{{l{Bb}}n}}}}25{{{f{BGh}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{BBjc}BBj{{BAh{BBj}}}}54{{{f{AJf}}}{{A`{{l{Bb}}n}}}}6{{{f{CLh}}}{{l{Bb}}}}{{{f{CLj}}}{{l{Bb}}}}{{{f{CBh}}}{{A`{{l{Bb}}n}}}}9{{{f{Mj}}}d}::{{{f{BKf}}}{{l{Bb}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CJl}}}d}{{}d}{{{f{CN`}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CEl}}{f{CEj}}}{{A`{bn}}}}6{{{f{BGh}}}d}{{{f{CLh}}}{{l{Kl}}}}{{{f{CLj}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BLj}}}{{AFf{BLj}}}}{{{f{BGf}}}{{AGl{{Gj{{Cn{CNd}}}}DChAGj}}}}{{{f{DA`}}}{{`{Jd}}}}{{{f{BLj}}}{{AFh{BLj}}}}{{{f{{DCl{}{{DCj{c}}}}}}}{{`{Jd}}}{AGhJfCMbCNb}}{{BMnBBjd}BBj}{{BFhBFhccBKb}BFh{{Id{{Bh{BBj}}}}}}{{BN`BBjd}BBj}{{{f{DB`}}{f{AAn}}eiBKb}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAh{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DCn}}{f{AAn}}{f{Bl}}{f{Bl}}eeCFd{Ch{Jj}}}{{A`{AAnn}}}{{Id{Bl}}}{{Ib{}{{Cj{c}}}}}}{BFhBLn}{{{f{DD`}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DD`}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}{{BLnd}BLn}`{{BLn{Gj{BBj}}}BFh}{BKdBBj}{DDbBBj}{{{f{CJj}}}{{f{{Ch{{Gj{DDd}}}}}}}}``{{}BBj}{BFhBFh}{BN`BBj}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{BBjBBj}{{{f{BKf}}}Mj}{DDfBFh}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBdA@f}BLl}{{{f{Ab}}}{{A`{Abn}}}}0`{{BFhBFhcc}BFh{{BAh{BBj}}}}{{{f{DB`}}{f{AAn}}ei}{{A`{AAnn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAh{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BLnc}BLn{{Id{{Bh{BBj}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}>{{{f{BKf}}}Gb}=;{{{f{BGf}}}Gb}{{BFhJl}BFh}{{{f{BKf}}Gb}Ab}`{BBjBN`}{cBBjDDh}{DDhBBj}{BGhBBj}{DDjBBj}{CJlBBj}{MjBBj}{{BBjc}BBj{{BAh{BBj}}}}0``{{CC`d}CC`}{{{CLb{c}}d}{{CLb{c}}}BL`}```{BBjBBj}{{{f{DD`}}}{{l{Fb}}}}0{{{f{DD`}}{f{{Bh{Ff}}}}}{{A`{{l{Ah}}n}}}}{{{f{DD`}}HbCMj}{{A`{{l{Ah}}n}}}}{{{f{DD`}}Hbd}{{A`{Abn}}}}{{{f{DD`}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}4{{{f{DD`}}}{{A`{Abn}}}}{{{f{DD`}}}Ab}01{{{f{DD`}}}{{A`{{l{Fb}}n}}}}{{{f{DD`}}}{{l{Ah}}}}{{{f{DD`}}{f{Ff}}}{{A`{{l{Ah}}n}}}}{{{f{DD`}}HbGb}{{l{Ah}}}}{{{f{DD`}}F`}{{A`{{l{Ah}}n}}}}{{{f{DD`}}Bf}Ab}7{{{f{DD`}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJb{}{{Cj{c}}}}}}e}c{}{}}{{BBjc}BBj{{BAh{BBj}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBdA@f}BLl}21``````{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DDlA@f}{BLlJf}}{{BFhcBLj{Ch{{N`{COh}}}}{Ch{{f{Bl}}}}}BFh{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{DDbc}BBj{{Dn{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}IlIn}}{{BBjc{BMf{{N`{BMd}}}}}BBj{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBjBBjc{BMf{{N`{BMd}}}}}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBj{f{Dfc}}{f{Df}}}{{A`{BBjn}}}{{Af{BBj{f{Df}}}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNb}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{El}}}}}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{El}}}{{Ad{{A`{Eln}}}}}}IlIn}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{{Bh{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}IlIn}}{{BBjc}BBj{{Af{BBj}{{Ad{BBj}}}}}}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}IlIn}}{{DDb{N`{Dn}}}BBj}{c{{BMf{{N`{BMd}}}}}{{Dn{{f{{Bh{Oj}}}}}{{Ad{{A`{Ojn}}}}}}IlIn}}:{{ce{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bh{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{Id{{Bh{BBj}}}}}}{{BBjc{f{{Bh{BBj}}}}{BMf{{N`{BMd}}}}}BBj{{Dn{{f{Df{Bh{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBjBMj{f{{Bh{BBj}}}}d{Ch{DDn}}}BBj}2{{{f{BNb}}}{{A`{Ojn}}}}{{CD`c}CD`{{Dn{CDb}{{Ad{CDb}}}}}}1111{{{CHf{{BMf{{N`{BNh}}}}}}}{{A`{{BMf{{N`{BNh}}}}n}}}}{CJlCJl}{{{Ch{{f{{Bh{Gb}}}}}}{f{{BDj{BAj}}}}{Ch{{f{{Bh{Ab}}}}}}{Ch{{f{DE`}}}}}AAn}{{{Ch{{f{{Bh{Dd}}}}}}{f{{BDj{El}}}}{Ch{{f{{Bh{Ab}}}}}}d}{{Ch{{Gj{Gb}}}}}}{{{f{Bl}}}BBj}{BMnBBj}{BFhBFh}{BN`BBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DEb}}}Mj}{{{f{BKf}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BKf}}}{{Ch{Aj}}}}9876{{{f{AJh}}}{{Ch{c}}}{}}51{{{f{DEd}}}Mj}4{{{CO`{c}}{Ch{CNj}}}{{CO`{c}}}BL`}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CLl}}}{{l{Lb}}}}`{{{f{CBh}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}```:9``{{{f{DCb}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`5```>{{{f{CLh}}}{{l{Nd}}}}21`{{{f{BGh}}}Hb}{{{f{BGh}}}d}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BGhHb}BGh}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKf}}}Gb}{{{f{CKh}}}{{Ch{Gb}}}}{{{f{CBl}}}{{Ch{Gb}}}}{{{f{CC`}}}{{Ch{Gb}}}}`````{{{C@b{c}}Gb}{{C@b{c}}}C@f}`{BMnBBj}{BN`BBj}{{{f{AHn}}}{{A`{Gbn}}}}{BBjBBj}{{{f{BKf}}}{{A`{Gbn}}}}{{{f{BKf}}}{{f{Dd}}}}{BBjDDb}````33`{{{f{DCb}}}{{l{Kl}}}}{{{f{CLj}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{CLl}}}{{l{Lb}}}}{{{f{BGh}}}Hb}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNbA@f}BLl}{{{f{CEl}}}d}{BGh}{BBj}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BGh}}}d}{{DEfGb}{{Ch{Gb}}}}{{BBjc}BBj{{BAh{BBj}}}}0{{{f{BNb}}}{{A`{Ojn}}}}{{}c{}}{cCNlBNf}{cCNnC@f}2{{Ddc}DEh{}}{c{{AMb{c}}}{}}{BFhBLn}{c{{BKl{c}}}BL`}{cCBl{{Id{ANd}}}}{cCC`{{Id{ANd}}}}{c{{C@b{c}}}C@f}{{{f{{Bh{Oj}}}}}BNb}{c{{CO`{c}}}BL`}{c{{BNd{c}}}BNf}{c{{COb{c}}}C@f}{{}CLn}{c{{C@h{c}}}C@f}{HbBGh}{c{{COd{c}}}C@f}{c{{COf{c}}}BL`}{{BGhBGhBGh}CCn}{c{{CLb{c}}}BL`}{{DEj{N`{CJj}}{N`{{BDj{BAj}}}}{Hf{GbGb}}{Ch{{Gj{Gb}}}}{Ch{{N`{BKn}}}}{Ch{DE`}}Gbd{Ch{{Gj{Ab}}}}{Ch{{Hf{Dd{N`{Bl}}}}}}CFb}{{A`{C@nn}}}}{c{{C@l{c}}}BL`}{c{{CA`{c}}}{C@fC@f}}{CEjBKb}{c{{BMf{c}}}{}}{{BBjBBjBBj}CIh}{{}CIj}{BBjBLd}{{Dd{Gj{Oj}}{BMf{{N`{BMd}}}}c}CAlBNh}{c{{N`{c}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Ij}}}BGf}{{ElJj}Mj}{{DdAGdd}BAj}{e{{N`{c}}}{}{{ABb{{f{{CMl{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BLl{{ABb{{f{{CMl{ce}}}}}{{Ad{c}}}}}}{AGdBGf}{{{f{AJj}}GbGb}{{l{c}}}Dl}{{{f{BKf}}GbGb}Ab}{{{f{Bl}}}CDf}{{ce}{{N`{ce}}}{}BLl}{{HbDd}{{A`{Abn}}}}{DdCDf}{{AGdGb}BGf}{{{N`{{Bh{CNj}}}}}CBl}{{{N`{{Bh{CNj}}}}}CC`}{BfCDf}{{}{{N`{{BOl{c}}}}}{}}{c{{N`{{BOl{e}}c}}}BLl{}}{Gb{{N`{{Bh{{BOl{c}}}}}}}{}}{{Gbc}{{N`{{Bh{{BOl{e}}}}c}}}BLl{}}{DElCBl}{DElCC`}5432{{{f{DfDEn}}}Ch}{{{f{DfDBh}}}Ch}{{{f{BM`}}DF`}{{A`{{Ch{AAn}}n}}}}{{{f{DfCAd}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@`}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@n}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{BBj}}{f{Df{BHb{{f{BBj}}}}}}}b}{{BBj{f{Df{BHb{BBj}}}}}b}{BBjBBj}0{BLjBLj}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{HbBBj}`{{}AB`}{{}A@h}`{{{f{BKf}}}Gb}{BFhBFh}7`````{{{f{Df{C@l{c}}}}}{{A`{Gbn}}}BL`}````{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{BLnc}BLn{{Id{{Bh{BBj}}}}}}````{{BFh{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{A`{BJhn}}}}`{{BBjc}BBj{{BAh{BBj}}}}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{CLh}}}{{l{Nj}}}}{{{f{CLj}}}{{l{Nj}}}}{{{f{CBh}}}{{A`{{l{Nj}}n}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{CH`c}BBj{{BAh{BBj}}}}{{CHdc}BBj{{BAh{BBj}}}}`{{BBje}BBj{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{BBje{Ch{{Hf{eF`}}}}CJd}BBj{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{{f{Df{BDj{El}}}}{f{{BDj{El}}}}}{{A`{bn}}}}```{{{f{Bl}}}BGh}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}``{{{f{BGh}}{f{BGh}}}{{Ch{B@l}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@l}}}{DBdA@f}BLl}```{{}BBj}{c{{DFb{{N`{c}}}}}{}}{{ce}{{DFb{{N`{ce}}}}}{}BLl}````{{BBjc}BBj{{BAh{BBj}}}}`{{DDb{f{Bl}}}BBj}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hf{{AAj{{Gj{Jl}}{Gj{A@h}}}}{AAj{{Gj{AB`}}{Gj{A@h}}}}}}n}}}}`{{{f{DEb}}}Mj}{BBjBBj}{BFh{{A`{{Hf{AAnAAn}}n}}}}`{{{f{BGf}}}BGf}{{{f{{N`{c}}}}{f{DfDFd}}}b{ALjA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBLl}{{{f{Bl}}BBjA@`}BBj}{{BFhBBjA@`}BFh}{{{f{AJh}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBjBBjA@`}BBj}{{{f{DEd}}AjA@`}{{A`{Mjn}}}}{{{f{BKf}}AjA@`}{{A`{Mjn}}}}{{{f{CLh}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDd}}}CNh{}}````{{{f{DFf}}CGj{Ch{Kf}}}Ab}{{BBjCGj{Ch{Kf}}}BBj}{{{f{Df{N`{AFj}}}}{f{Df{Bh{Bf}}}}}{{A`{GbBDd}}}}{{{f{Df{N`{AFj}}}}DFh}{{A`{bBDd}}}}{{{C@l{c}}CFb}{{C@l{c}}}BL`}{{{f{Df{N`{AFj}}}}{f{Df{Gj{Bf}}}}}{{A`{GbBDd}}}}{{{f{Df{N`{AFj}}}}{f{DfEj}}}{{A`{GbBDd}}}}{{{f{Df}}}{{A`{cBDd}}}DFj}{{{f{Df{N`{AFj}}}}{f{Df{Bh{DFl}}}}}{{A`{GbBDd}}}}{{{f{CKh}}}d}{{{f{BKf}}}Ab}{{{f{CBl}}}d}{{{f{CC`}}}d}````{{ce}BBj{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{Id{{Bh{BBj}}}}}}{{{f{AJl}}}Ab}0{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLj}}BLj}b}{{{f{{Bh{Bf}}}}}{{A`{{f{{Bh{Bf}}}}n}}}}{{{f{DfBKf}}Dd}b}{{BFheid}BFh{{Id{Bl}}}{{Ib{}{{Cj{c}}}}}{{Id{Bl}}}{{Ib{}{{Cj{g}}}}}}{{BKde}BBj{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}}{{cBBj}BBj{{BAh{BBj}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBjc}BBj{{BAh{BBj}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BOn}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{BBjcc}BBj{{BAh{BBj}}}}1{{{f{BNb}}{Ch{El}}}{{A`{Ojn}}}}{{{f{BOn}}{f{Bl}}{f{Bl}}Gb}{{A`{{l{Bj}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBjcc{Ch{c}}{Ch{El}}}BBj{{BAh{BBj}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CKf}{{A`{{L`{LfLb}}n}}}}{{BBj{f{{Bh{Hb}}}}}BBj}{{{f{ANd}}}CNj}`{{{f{AJn}}}AJn}{{{f{BKf}}}Ab}{BMnBBj}{BFhBFh}{BN`BBj}{BBjBBj}`{{BLnc}BLn{{Id{{Bh{BBj}}}}}}{{{f{DBl}}{Gj{Ff}}{f{BFl}}}{{A`{{Hf{Ff{Gj{Ff}}Cb}}n}}}}{{BFhBBjcBFl}BLh{{Id{{Bh{BBj}}}}}}{{BBjBFl}BBj}{{{f{AK`}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBj{N`{Dn}}{BMf{{N`{BMd}}}}A@b}BBj}{{{f{BKf}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBjGbc}BBj{{Af{{f{Df{l{Eh}}}}}{{Ad{{Ch{Aj}}}}}}IlInE`}}{{{f{DFn}}A@b}{{A`{Abn}}}}{{BBjA@b}BBj}{{{f{DFn}}{f{Ab}}CCd}{{A`{Abn}}}}{{BBjBBjCCd}BBj}32102032103{{BBjA@`AjA@b}BBj}2{{BBjBBjA@`AjCCd}BBj}543254325432{{{f{DG`}}{f{{l{Bj}}}}{Ch{{f{AMh}}}}}{{A`{DG`n}}}}{{{f{CBf}}Jl}{{A`{Abn}}}}{{BBjJl}BBj}{{{f{CCn}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}0{{{f{CBf}}Od}{{A`{Abn}}}}{{BBjOd}BBj}2``{{{f{CKh}}}{{Ch{{f{DE`}}}}}}{{{f{CBl}}}{{Ch{{f{DE`}}}}}}{{{f{CC`}}}{{Ch{{f{DE`}}}}}}``````{{{f{DD`}}{l{Ah}}}{{l{Ah}}}}{{}{{BMf{{N`{BMd}}}}}}{{BBjBBjdd{Ch{Kf}}}BBj}0{{{f{BM`}}DF`}{{A`{AAnn}}}}{{cCBn}{{A`{BFhn}}}{{Id{ANd}}}}{{{N`{{Bh{CNj}}}}CBn}{{A`{BFhn}}}}{{DElCBn}{{A`{BFhn}}}}{{cCCb}{{A`{BFhn}}}{{Id{ANd}}}}{{{N`{{Bh{CNj}}}}CCb}{{A`{BFhn}}}}{{DElCCb}{{A`{BFhn}}}}{{DGb{f{{Bh{Jl}}}}e}{{A`{Abn}}}E`{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AKb}}c{Ch{e}}}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKb}}ci}{{A`{AKbn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CO`{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BL`}{{{f{Df{BNd{c}}}}}{{A`{{BDj{El}}n}}}BNf}{{{f{C@n}}}{{f{{N`{{BDj{BAj}}}}}}}}{{{f{Df{C@l{c}}}}}{{A`{{N`{{BDj{BAj}}}}n}}}BL`}{{{f{BM`}}{Ch{Gb}}}{{A`{{N`{{BDj{El}}}}n}}}}{{{f{CJj}}}{{f{DGd}}}}```````{{}BLj}`{{{f{DfBFh}}{f{Df{BJl{BJj}}}}{f{Df{BJl{BJn}}}}}{{A`{{N`{{BDj{El}}}}n}}}}`{{{f{DCb}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}`{{{f{CLl}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DGf}{{A`{KfBDd}}}}{{BFhc}BFh{{Id{{Bh{BBj}}}}}}0{{BFhBFhcc}BFh{{BAh{BBj}}}}````{{{f{AKb}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AKbn}}}{}}{{{f{DfBLj}}BLjd}b}{{{f{BFh}}{BJl{BJj}}{BJl{BJn}}}b}{{{C@l{c}}d}{{C@l{c}}}BL`}{{{f{Df{C@l{c}}}}{N`{CJj}}}bBL`}{{{CA`{c}}d}{{CA`{c}}}C@f}{{{CO`{c}}d}{{CO`{c}}}BL`}{{{BNd{c}}d}{{BNd{c}}}BNf}{{{COf{c}}d}{{COf{c}}}BL`}5{{CNld}CNl}{{BBjMb}BBj}{{{f{DfBGf}}{Ch{Ij}}}b}{{{f{AKd}}Hb}{{l{c}}}Dl}{{{f{BKf}}Hb}Ab}{{BMnBBj}BBj}{{BFhc}BFh{{BAh{BBj}}}}{{BN`BBj}BBj}{{BBjBBj}BBj}{{{f{AKf}}Hbc}{{l{e}}}{}Dl}{{BFhce}BFh{{BAh{BBj}}}{{BAh{BBj}}}}{{BBjce}BBj{{BAh{BBj}}}{{BAh{BBj}}}}{{{f{BKb}}}d}{BBjBBj}{{{f{DfACf}}}b}{{{f{DfBKf}}}b}{{BBj{Ch{Kf}}}BBj}{{BFhcCDj}{{A`{bn}}}{{Id{ANd}}}}{{BFhcCEb}{{A`{bn}}}{{Id{ANd}}}}{{BFhcCEh}{{A`{bn}}}{{Id{ANd}}}}{{BFhcCFh}{{A`{bn}}}{{Id{ANd}}}}{{{f{CL`}}}{{l{Fb}}}}````{{{f{BKf}}HbGb}Ab}{{BFhHbJl}BFh}{{BN`BBjBBj}BBj}={{{f{DfBGf}}GbGb}b}0`{{{f{AKh}}GbGb}AKh}{{fGbGb}c{}}1022{{BGfGbGb}BGf}0`{{{f{AHl}}d}{{l{c}}}Dl}{{BMnF`}BBj}{{BFhcFh}BFh{{BG`{Dd}}}}{{BN`F`}BBj}{{BBjF`}BBj}{{BBjeFh}BBj{{BAh{BBj}}Jf}{{Id{{Bh{c}}}}}}{{BFhcFh}BFh{{Id{{Bh{BBj}}}}}}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{BKf}}F`}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALj}}}}}{ALjA@f}}{{{f{CKh}}}{{f{DEl}}}}{{{f{CBl}}}{{f{DEl}}}}{{{f{CC`}}}{{f{DEl}}}}{{{f{BOn}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{BKf}}Hb}{{Hf{AbAb}}}}{{{f{BGf}}Gb}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BOn}}{f{{l{Bj}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}4{{{f{{l{Bj}}}}{f{{l{Bj}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{BBjBBj}`{{{f{CL`}}{f{{Bh{Bf}}}}}{{l{Bb}}}}{{{f{CL`}}{f{{l{Bd}}}}}{{l{Bb}}}}`{{BMnBf}BBj}{{BFhBf}BFh}{{BN`Bf}BBj}{{{f{AKj}}Bf}{{Ch{Aj}}}}{{BBjBf}BBj}{{{f{BKf}}Bf}{{Ch{Aj}}}}{{{f{DGh}}Bf}Mj}{{{f{BKf}}Bf}{{A`{Mjn}}}}{{JlJl}A@h}{BBjDGj}{{{f{BOn}}{f{Ff}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{BOn}}}{{l{Fb}}}}0{{{f{BOn}}}{{l{Bj}}}}{{{f{BOn}}{f{Ff}}{f{Ff}}}{{A`{{l{Bj}}n}}}}4`{{{f{CBh}}{f{Bl}}}{{A`{Abn}}}}`{{BBjEl}BBj}`{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}707070{{{f{BOn}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{{N`{ce}}}}}GbA@fBLl}{BBjBKd}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBjBBj}}{{BLdBLd}}{{BLjBLj}BLj}{{{f{DfBLj}}BLj}b}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{BLnc}BLn{{BAh{Dd}}}}{{DDb{f{Bl}}}BBj}{{{f{BKb}}}{{f{Dd}}}}`1{{{f{Bl}}}BBj}{BMnBBj}{BFhBFh}{BN`BBj}{{{f{AHd}}}{{Ch{c}}}{}}{BBjBBj}{{{f{DEb}}}Mj}{{{f{BKf}}}{{A`{Mjn}}}}{{}{{BMf{{N`{BMd}}}}}}{CAhCAh}?{{{f{Df}}g}{{A`{eBDd}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BFhJl}BFh}{{BLh{Ch{Gb}}}BFh}{{BN`BBj}BBj}{{BBj{Ch{Gb}}}BBj}{{{f{AKl}}{f{c}}}{{A`{AKln}}}A@f}{{{f{BKf}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DGl}}{f{{Bh{A@h}}}}Mb}DGl}{{{f{DGl}}{f{{Bh{A@h}}}}}DGl}{{{f{BKf}}{f{{Bh{Jl}}}}}{{A`{Abn}}}}{{{f{BKf}}{f{{Bh{Jl}}}}}Ab}{{{f{AKn}}{f{c}}}AKnA@f}{{{f{BKf}}{f{{l{Fb}}}}}Ab}{{{f{DfBGf}}}{{Ch{Ij}}}}{{BBjBBjBBj}BBj}{{CGnc}CH`{{BAh{BBj}}}}{{CHbc}CHd{{BAh{BBj}}}}`{{BBjBBjBGhCCh}BBj}```{{{f{CBh}}Ld}{{A`{{l{Lb}}n}}}}{BFh{{A`{DGnn}}}}{CGl{{A`{DGnn}}}}1{{{f{CJl}}}{{Ch{Jj}}}}{{BN`Gb}BBj}{{{f{DA`}}B@b}{{BDj{BAj}}}}{{{f{BGf}}}{{Cn{Cl}}}}{{{f{AL`}}}{{Gj{{f{{Bh{Bf}}}}}}}}{{{f{BFh}}d}{{A`{Ejn}}}}{{{f{DH`}}{Ch{{f{Bl}}}}d}{{A`{AAnn}}}}{{{f{BKj}}{Ch{{f{Bl}}}}d}{{A`{AAnn}}}}{{{f{BBj}}{f{{BDj{El}}}}DBf}{{A`{Ojn}}}}{{{f{BOn}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}{BMnBBj}{{{f{BOn}}}{{l{Bj}}}}{DDbBBj}{{{f{AB`}}}{{Ch{Jl}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBjBBj}{{{f{BNb}}}{{A`{Ojn}}}}{{{f{CBh}}{f{Bl}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfDA`}}{f{{BDj{El}}}}}{{A`{dn}}}}`887{{{f{CEb}}c}{{C@h{c}}}C@f}{{{f{CFh}}c}{{CA`{c}}}C@f}{{{f{DfBLj}}BLj}b}``{{BFhJlcFh}BFh{{Id{{Bh{BBj}}}}}}{{{f{BGf}}{f{BGf}}}Ij}{{{f{BGf}}f}Ij}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DHb}}{Ch{{f{AMh}}}}{f{{l{Bj}}}}}{{A`{DHbn}}}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}ceg}{{A`{Hbn}}}{{Dn{Hb}{{Ad{Hb}}}}}{{Dn{Hb}{{Ad{AMf}}}}}{{Dn{AMf}{{Ad{Hb}}}}}}{{{f{BGh}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}{{{f{CCn}}Hb{Ch{{f{AMh}}}}}{{A`{Hbn}}}}10`10{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BGfc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jj{{A`{CJln}}}}11{{{N`{{Bh{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BLl}2222222222222{DHd{{A`{CJjBDf}}}}{{{f{DA`}}{f{Bl}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CD`{Ch{CNj}}}{{A`{{BKl{AFj}}n}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{{Bh{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBjc}{{A`{BBjn}}}{{Af{BBj}{{Ad{{A`{BBjn}}}}}}}}{{{f{BNb}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DEfGb}{{A`{Gbn}}}}{Bf{{A`{CFnn}}}}{Jl{{A`{CG`n}}}}{Od{{A`{CGbn}}}}{c{{A`{{N`{c}}DHf}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Ij}}}{{A`{BGfn}}}}{{ce}{{A`{{N`{ce}}DHf}}}{}BLl}{{}{{A`{{N`{{BOl{c}}}}DHf}}}{}}{c{{A`{{N`{{BOl{e}}c}}DHf}}}BLl{}}10`{c{{A`{{DFb{{N`{c}}}}DHf}}}{}}{{ce}{{A`{{DFb{{N`{ce}}}}DHf}}}{}BLl}{{{f{BNh}}{f{Df{Gj{Bf}}}}}{{A`{bn}}}}{{{f{CAj}}{f{Df{Gj{Bf}}}}}{{A`{bn}}}}{{{f{BMd}}{f{Df{Gj{Bf}}}}}{{A`{bn}}}}{f{{A`{GlBC`}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BLl}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bl}}}}`{{BLjBLj}BLj}{{{f{AHn}}}{{A`{AHnn}}}}{BMnBBj}{{BFh{Ch{{Gj{Ej}}}}BE`}BFh}{BN`BBj}{BBjBBj}{{{f{BKf}}}{{A`{Abn}}}}{{BFh{Ch{e}}BE`}BFh{{BAh{BLd}}Jf}{{Id{{Bh{c}}}}}}5{{BFh{Ch{{Gj{Dd}}}}BE`}BFh}431{{BFhe}BFh{{BAh{BLd}}Jf}{{Id{{Bh{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}Il}{{{N`{ce}}}cJfBLl}{{{f{DfMj}}Jj}b}{{{f{DfCD`}}{f{DHh}}}b}8{{{f{DHj}}c{f{Bl}}BGh}{{A`{AAnn}}}{{BG`{Dd}}}}0{{{C@l{c}}d}{{C@l{c}}}BL`}```{{BLnCEl}BLn}`{{{f{BGf}}}{{Ch{{f{Ij}}}}}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{Mj}}}{{f{Jj}}}}{{{f{CN`}}ddDdd}{{A`{AAnn}}}}{{BBjdd{f{Bl}}d}BBj}``3{{{f{BGf}}}{{f{{Bh{{Cn{Cl}}}}}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BGf}}}DCh}{{BMnBf}BBj}{{BFhBf}BFh}{{BN`Bf}BBj}{{{f{AKj}}Bf}{{Ch{Aj}}}}{{BBjBf}BBj}{{{f{BKf}}Bf}{{Ch{Aj}}}}{{{f{DGh}}Bf}Mj}{{{f{BKf}}Bf}{{A`{Mjn}}}}``{{{f{DHl}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{DHl}}A@l{f{Df{Bh{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}Il{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GbA@fBLl}{{{f{CLh}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}10{{{f{CCl}}}{{Ch{Jl}}}}{{{f{BGh}}}Hb}`{{{f{BGh}}}d}`{cCGn{{BAh{BBj}}}}{{CH`c}CHb{{BAh{BBj}}}}{{CHdc}CHb{{BAh{BBj}}}}```{{BLnBFh}BLn}{{CIhBBj}CIh}{{{C@l{c}}{f{{N`{{BDj{BAj}}}}}}{Ch{{f{{BDj{BAj}}}}}}d}{{A`{{C@l{c}}n}}}BL`}{{CC`{Ch{{DCd{Gb}}}}}CC`}{{{C@b{c}}{DCd{Gb}}}{{C@b{c}}}C@f}{{{COf{c}}{DCd{Gb}}}{{COf{c}}}BL`}{{CBld}CBl}{Gbc{}}0{{{CLb{c}}{Ch{{DCd{Gb}}}}}{{CLb{c}}}BL`}{{CD`Gb}CD`}{{CBl{Ch{CKj}}}CBl}{{CC`{Ch{CKj}}}CC`}{{BFhd}BFh}{{BKbCEf}BKb}1{{BFhBBj}BFh}{{BFhc}BFh{{Id{{Bh{BBj}}}}}}{{{CO`{c}}{Ch{{Gj{Ej}}}}}{{CO`{c}}}BL`}{{{BNd{c}}{Ch{{Gj{Ej}}}}}{{BNd{c}}}BNf}{{{C@l{c}}{Ch{{Gj{Ej}}}}}{{C@l{c}}}BL`}{{CD`{Ch{{N`{{Bh{Dd}}}}}}}CD`}`4{{CBl{Ch{Dd}}}CBl}{{CDb{Ch{c}}}CDb{{BAh{CDf}}}}{{{COb{c}}B@b}{{COb{c}}}{}}{{{C@h{c}}B@b}{{C@h{c}}}C@f}{{{COb{c}}{Ch{CEd}}}{{COb{c}}}{}}{{CLn{Ch{CEd}}}CLn}{{{C@h{c}}{Ch{CEd}}}{{C@h{c}}}C@f}{{{CA`{c}}CFl}{{CA`{c}}}C@f}{{BFhc}BFh{{Id{{Bh{BFh}}}}}}{{{CA`{c}}{Ch{Gb}}}{{CA`{c}}}C@f}{{{C@b{c}}{Ch{Ej}}}{{C@b{c}}}C@f}0{{CIhBBj}CIh}{{CIjBBj}CIj}{{CBld}CBl}{{CDbd}CDb}{{{f{BNb}}El}{{A`{Ojn}}}}{{CBl{Ch{{N`{{BDj{El}}}}}}}CBl}{{CD`{Ch{{N`{{Gj{El}}}}}}}CD`}{{CBlCDd}CBl}{{CDbCDd}CDb}{{CBlBf}CBl}{{CDbBf}CDb}{{CLnCNj}CLn}{{BKd{Gj{BBj}}}{{A`{BBjn}}}}{{{C@b{c}}{Ch{Gb}}}{{C@b{c}}}C@f}{{{C@b{c}}{Ch{d}}}{{C@b{c}}}C@f}{{CIjBBjBBjBBj}CIj}=={{CD`d}CD`}{{{CO`{c}}{Ch{{Gj{Ab}}}}}{{CO`{c}}}BL`}{{{C@l{c}}{Ch{{Gj{Ab}}}}}{{C@l{c}}}BL`}{{CIhBBjBBjBBj}CIh}4{{CIhBBj}CIh}{{CIjBBj}CIj}{{CBld}CBl}{{CC`d}CC`}{{{COf{c}}d}{{COf{c}}}BL`}{{{CLb{c}}d}{{CLb{c}}}BL`}9{{{CO`{c}}{Ch{{Hf{Dd{N`{Bl}}}}}}}{{CO`{c}}}BL`}{{{C@l{c}}{Ch{{Hf{Dd{N`{Bl}}}}}}}{{C@l{c}}}BL`}{{CBl{Ch{Dd}}}CBl}{{CC`{Ch{Dd}}}CC`}{{CBl{Ch{Gb}}}CBl}{{CC`{Ch{{DCd{Gb}}}}}CC`}{{CD`{Ch{Gb}}}CD`}{{{COd{c}}DHn}{{COd{c}}}C@f}{{{COf{c}}DHn}{{COf{c}}}BL`}{{{C@b{c}}Ej}{{C@b{c}}}C@f}={{CD`d}CD`}{{BAj{DI`{DdDd}}}BAj}{{CIhBBj}CIh}{{CIjBBj}CIj}010{{CBld}CBl}{{CDbd}CDb}3{{CKhc}CKh{{BAh{{Ch{Gb}}}}}}{{CBlc}CBl{{BAh{{Ch{Gb}}}}}}={{CC`{Ch{Gb}}}CC`}{{CC`c}CC`{{BAh{{Ch{Gb}}}}}}{{{CO`{c}}{Ch{Gb}}}{{CO`{c}}}BL`}{{{BNd{c}}{Ch{Gb}}}{{BNd{c}}}BNf}{{{CLb{c}}{Ch{Gb}}}{{CLb{c}}}BL`}{{CD`{Ch{Gb}}}CD`}10:>{{CBl{Ch{CDh}}}CBl}{{CDb{Ch{CDh}}}CDb}{{BFhBLj}BFh}{{CD`CDb}CD`}{{{CLb{c}}{Ch{e}}}{{CLb{c}}}BL`{{BAh{CNj}}}}{{CD`{Ch{c}}}CD`{{BAh{CNj}}}}{{CKh{N`{{Bh{CNj}}}}}CKh}{{{CLb{c}}{Ch{{N`{BKn}}}}}{{CLb{c}}}BL`}{{{C@l{c}}{Ch{{N`{BKn}}}}}{{C@l{c}}}BL`}{{BFhd}BFh}{{{CO`{c}}{Ch{{Gj{Gb}}}}}{{CO`{c}}}BL`}{{{BNd{c}}{Ch{{Gj{Gb}}}}}{{BNd{c}}}BNf}{{{COf{c}}{Ch{{Gj{Dd}}}}}{{COf{c}}}BL`}{{{CLb{c}}{Ch{{N`{{Bh{Dd}}}}}}}{{CLb{c}}}BL`}{{{C@l{c}}{Ch{{Gj{Gb}}}}}{{C@l{c}}}BL`}{{CD`{Ch{{N`{{Gj{Gb}}}}}}}CD`}6{{CBl{Ch{Bf}}}CBl}{{{C@b{c}}Bf}{{C@b{c}}}C@f}{{CDb{Ch{Bf}}}CDb}{{{C@b{c}}CDn}{{C@b{c}}}C@f}{{CBld}CBl}{{CD`d}CD`}{{CKhd}CKh}2{{CC`d}CC`}{{{CLb{c}}d}{{CLb{c}}}BL`}3?{{{CA`{c}}{Ch{Gb}}}{{CA`{c}}}C@f}{{CKhc}CKh{{BAh{{Ch{DE`}}}}}}{{BFhc{Ch{Jl}}}BFh{{BAh{Dd}}}}{{CBlc}CBl{{BAh{{Ch{DE`}}}}}}{{CBl{Ch{DE`}}}CBl}{{CC`c}CC`{{BAh{{Ch{DE`}}}}}}{{CC`{Ch{DE`}}}CC`}{{{CO`{c}}{Ch{DE`}}}{{CO`{c}}}BL`}{{{BNd{c}}{Ch{DE`}}}{{BNd{c}}}BNf}{{{CLb{c}}{Ch{{f{DfDE`}}}}}{{CLb{c}}}BL`}{{{C@l{c}}{Ch{DE`}}}{{C@l{c}}}BL`}{{CD`{Ch{DE`}}}CD`}{{{f{BNb}}}{{A`{Ojn}}}}{{CBl{Ch{{N`{{BDj{El}}}}}}}CBl}{{CC`{Ch{{N`{{BDj{El}}}}}}}CC`}{{{COf{c}}{N`{{BDj{El}}}}}{{COf{c}}}BL`}{{{CLb{c}}{N`{{BDj{El}}}}}{{CLb{c}}}BL`}{{CD`{Ch{{N`{{BDj{El}}}}}}}CD`}{{CBlc}{{A`{CBln}}}{{Dn{{BDj{El}}}{{Ad{{A`{{BDj{El}}n}}}}}}}}4{{{COf{c}}{f{{BDj{El}}}}}{{COf{c}}}BL`}{{{CLb{c}}{f{{BDj{El}}}}}{{CLb{c}}}BL`}3{{CIhBBj}CIh}{{CIjBBj}CIj}{{CBlBf}CBl}{{{C@b{c}}Bf}{{C@b{c}}}C@f}{{CDbBf}CDb}{{BFhd}BFh}{{CBlGb}CBl}{{CD`Gb}CD`}10{{{C@l{c}}{Ch{{Hf{GbGb}}}}}{{C@l{c}}}BL`}3{{CKhDEl}CKh}{{CBlDEl}CBl}{{CC`DEl}CC`}{{{CA`{c}}CIf}{{CA`{c}}}C@f}{{BKb{Ch{Dd}}}BKb}{{{C@b{c}}{Ch{Ej}}}{{C@b{c}}}C@f}{{CIhLd}CIh}{{CIh{Ch{Dd}}}CIh}{{CBld}CBl}{{CDbd}CDb}10={{{f{BGf}}{Ch{Ij}}}{{Cn{Cl}}}}{{BGf{Ch{Ij}}}BGf}{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ij}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}1{{CIjBBj}CIj}{{CIhBBj}CIh}{BFhBFh}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bh{Bf}}}}}{{A`{GbBDd}}}}{{{f{CEb}}AAnc}{{A`{bn}}}C@f}{{{f{CFh}}AAnc}{{A`{bn}}}C@f}{{{f{DfAAn}}{f{ANd}}e{f{g}}Gb}{{A`{bn}}}{{BAh{Dd}}}{{Ib{}{{Cj{c}}}}}{DIbIlIn}}{{{f{Df}}c}{{A`{GbBDd}}}DFj}{{{f{Df{N`{AFj}}}}{f{{Bh{DId}}}}}{{A`{GbBDd}}}}{{BBjc}BBj{{BAh{BBj}}}}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{CLh}}}{{l{Kl}}}}{{{f{CLj}}}{{l{Kl}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}``{{{f{ALb}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ij}}}Aj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{BDj{BAj}}}}{f{{BDj{BAj}}}}}{{A`{bn}}}}{cc{}}{{}Gb}{{}DIf}{{}c{}}{{{Ch{{f{BKn}}}}{f{DIh}}{f{{BDj{BAj}}}}}{{A`{dn}}}}{{{f{DIf}}Aj{f{AGd}}}d}{{{Gj{{Hf{{f{CMh}}DIj}}}}BAj{Ch{DIl}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BH`}}c}Ab{{Dn{{Hf{Jl{f{{BHb{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bh{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bh{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bh{c}}}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bh{c}}}}{f{Ij}}e{Ch{BIh}}}{{ALn{c}}}{BIjBIl}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bh{{Cn{Cl}}}}}}}d}{{{f{BIn}}{f{Cb}}}Ab}{{BJ`BJ`}BJ`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALd{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALf}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALh{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALj{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALj{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALf}ALj{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALl{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALlDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALf}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0``{{{f{DIn}}}{{l{Fb}}}}0{{{f{DIn}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DIn}}{f{{l{Bj}}}}d}{{A`{Abn}}}}{{{f{DIn}}}Ab}{{{f{DIn}}}{{A`{Abn}}}}1{{{f{DIn}}}{{A`{{l{Fb}}n}}}}{{{f{DIn}}}{{l{Cf}}}}{{{f{DIn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DIn}}F`}{{A`{{l{Cf}}n}}}}{{{f{DIn}}Bf}{{A`{Abn}}}}5{{{f{DIn}}}{{A`{{l{Ah}}n}}}}01{{{f{DJ`}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CAfBBj}BBj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}3{cc{}}{{}Gb}{{}c{}}{CAfBBj}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDJb}}{f{{Bh{Bf}}}}ddd}{{A`{bn}}}}{{{f{DfDJb}}d}b}>>>>====;;;;::::9999{{{f{DJb}}}El}99998888{{{f{{Bh{Gb}}}}Gb{f{{BDj{El}}}}{Ch{Bf}}CDdd}{{A`{{Gj{DJb}}n}}}}8888{DJb{{A`{Abn}}}}7777666655559999```````````{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CLh}}}{{l{Nd}}}}{{{f{CLj}}}{{l{Nd}}}}{{{f{CLl}}}{{l{Lb}}}}`{{{f{DCb}}}{{l{Nd}}}}21{{{f{CLh}}}{{l{Bb}}}}{{{f{CLj}}}{{l{Bb}}}}{{{f{CLh}}}{{l{Kl}}}}{{{f{CLj}}}{{l{Kl}}}}55`46576{{{f{DCb}}}{{l{Kl}}}}16{{{f{CLh}}}{{l{Nj}}}}{{{f{CLj}}}{{l{Nj}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}=<{{{f{DFn}}A@b}{{A`{Abn}}}}{{{f{DFn}}{f{Ab}}CCd}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNl}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DJd}}}{{f{{l{Bj}}}}}}{{{f{BNl}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJf}}}DJf}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJf}}{f{DJf}}}d}{{f{f{c}}}d{}}00{{{f{DJf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DJf}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}{{{f{DJf}}{f{Bl}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DJh{c}}}}}{{DJh{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{{f{Bl}}}{{Ch{DJf}}}}{{}Gb}{{}c{}}`{{{f{Df{DJh{c}}}}{f{Bl}}}ChAl}{{{f{DfDJj}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DJh{Lb}}}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{Hb}}}}{{{f{Df{DJh{Kl}}}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{Od}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DJn{}{{DJl{e}}}}n}}}{}{}}{{DJf{Ch{Ld}}}{{A`{{DJh{Kl}}n}}}}{{DJf{Ch{Ld}}}{{A`{{DJh{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CKj}}}CKj}{{f{f{Dfc}}}b{}}{fb}{{}CKj}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{Gbb}0{{{f{CKj}}{f{CKj}}}d}{{{f{DK`}}{f{DK`}}}d}{{f{f{c}}}d{}}00{{{f{CKj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{f{Bl}}}{{A`{DK`}}}}{{{f{Bl}}g}{{A`{CKjn}}}{{Id{Bl}}}{{BAh{Ej}}}{{Ib{}{{Cj{{Hf{ce}}}}}}}}{{{f{CKj}}{f{Dfc}}}bADl}{{}Gb}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CKjGb}CKj}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bh{Bf}}}}}{{Ch{DKb}}}}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}=<{{{f{{Bh{Bf}}}}{f{Df{Gj{Bf}}}}}{{A`{{f{{Bh{Bf}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAN`{}{{Ib{}{{Cj{c}}}}}}0{{AGde}ANb{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANh}}}{{f{El}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{{f{AOj}}{f{El}}}{{A`{Abn}}}}{{{f{AOj}}{f{El}}Fn}{{A`{Abn}}}}`{B@ne{}{{AN`{c}}ALf}}0{{B@nAGd}e{}{{ANb{c}}ALf}}0{{{AOd{Bl}}}El}{{{f{AOj}}}{{f{El}}}}``{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gj{c}}AGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALf{}{{ANj{e}}{ANl{c}}{ANn{g}}}}}{AO`{AOb{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}{{GbcAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AOj}}Gb}{{A`{Jjn}}}}{{{f{AOj}}Gb}Jj}{{}El}{{{f{BBd}}Gb}Jj}4{{BBfEl}{{A`{Mjn}}}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{AGl{cgAGj}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}{{Ch{c}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMl}}{f{AMl}}}{{A`{{Hf{AMlAMl}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANbe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@n{{A`{eg}}}{}{{AN`{c}}ALf}{}}0{{B@nAGd}{{A`{eg}}}{}{{ANb{c}}ALf}{}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}Gb}cJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}0{{{f{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}}}gJf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{Gbc{}}0{{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}{Ch{Ij}}}{{ALf{}{{ANj{c}}{ANl{e}}{ANn{g}}}}}Jf{AO`{AOb{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}```````````{{{f{AMl}}{f{AMl}}c}{{A`{AMln}}}AOh}{{AOh{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CKf{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gf{Hb}{{Ad{AMf}}}}{Gf{AMf}{{Ad{Hb}}}}{f{AMh}}{f{AMh}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CKf}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ij}}}DAb{}}{{{DAd{Hb}}{DAd{Bf}}{Ch{Ij}}}DAf}{{{DAd{Hb}}{DAd{Bf}}{Ch{Ij}}}DAh}`{CMnBBj}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CMnLd}BBj}3{{CMnBBjLd}BBj}{{CMnDd}BBj}555{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}8{cc{}}9{{}Gb}{{}c{}};;;;;;;;;;{{CMn{Ch{Dd}}BBjCKf}BBj}{{CMnBBj}BBj}={{CMn{f{Bl}}}BBj}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CMnBBj}0?0`{{{f{BJb}}{f{AAn}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJb}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DKd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{DKd{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DKd}}}d}{{GbGb}DKd}{{{f{DfDKd}}{Cn{Cl}}}b}{{{f{DfDKd}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GbAl}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKf}}}DKf}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DKf}}{f{DKf}}}d}{{{f{DKf}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DKf}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBC`}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKh}}}DKh}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DKh}}{f{DKh}}}d}{{{f{DKh}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DKh}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBC`}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALn{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CGd}Ab}{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Dn{}{{Ad{}}}}E`}}{{{f{Ab}}{f{Cb}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DKj}}}{{f{AGf}}}}{{{f{DfDKj}}}{{Cn{Cl}}}}{{{f{DfDKj}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKj}}}DKj}{{f{f{Dfc}}}b{}}{fb}{{}DKj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DKj}}}{{f{AGd}}}}{{{f{DfDKj}}Gb}b}{{{f{DKj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DKj}}}Gb}{GbDKj}{{{f{DfDKj}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DKj}}}{{Ch{{f{DKl}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DHh}}}DHh}{{f{f{Dfc}}}b{}}{fb}{{}DHh}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{BEb{ElA@l}}}}}El}{{{f{DHh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DHh}}}Gb}{{{f{DHh}}}{{N`{{BDj{El}}}}}}{{{f{Bl}}dd}El}{{{f{DBj}}Bf{Ch{Gb}}d{Ch{{f{{BDj{El}}}}}}GbGb{Ch{{f{CDf}}}}{Ch{Bf}}Bf{Ch{{f{CDh}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hf{{BDj{El}}GbGb}}n}}}}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DBj}}{f{CD`}}}{{A`{DHhn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DHh{N`{{BDj{El}}}}}DHh}````{{{f{{l{c}}}}eAM`d}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bh{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}``{{{f{DKn}}}{{f{Ab}}}}{{{f{CBh}}}{{A`{{l{Kl}}n}}}}{{{f{CBh}}}{{A`{{l{Nd}}n}}}}0{{{f{CBh}}}{{A`{{l{Bb}}n}}}}22112{{{f{CBh}}}{{A`{{l{Nj}}n}}}}322{{{f{CBh}}{f{Bl}}}{{A`{Abn}}}}{{{f{CBh}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gb{f{Df{Gj{d}}}}}b}```{{{f{AKh}}GbGb}AKh}0{{Gb{f{{Bh{Ff}}}}{f{DfFh}}}{{A`{{AMb{{l{Fb}}}}n}}}}{{{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bh{Ff}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bh{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BOj}}}{{f{{l{Bj}}}}}}{{{f{BOn}}}{{A`{{l{Bj}}n}}}}{{{f{BOn}}}{{l{Bj}}}}{{{f{BOn}}{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{BOn}}{f{Bl}}d}{{A`{{l{Bb}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{BOn}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}Gb}{{A`{{l{Bj}}n}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOn}}{f{Bl}}{f{El}}}{{A`{Abn}}}}5{{{f{BOn}}{f{{l{Bj}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOn}}{f{Bl}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bh{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{BOn}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}0{{{f{BOn}}{f{Bl}}{f{Bl}}Gb}{{A`{{l{Bj}}n}}}}1{{{f{BOn}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{BOn}}{f{{l{Bj}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{{l{Bj}}}}{f{{l{Bj}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{BOn}}{f{Ff}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{BOn}}}{{l{Fb}}}}0{{{f{BOn}}}{{l{Bj}}}}{{{f{BOn}}{f{Ff}}{f{Ff}}}{{A`{{l{Bj}}n}}}}4{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}505050{{{f{BOn}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{BOn}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}444````````{{eGbGb}{{DL`{Hb}}}{{Id{Bl}}}{{D`{}{{Cj{c}}}}}}{{eGbGb}{{Kb{Hb}}}{{Id{{Bh{Bf}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BKf}}}Aj}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DI`{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}`{{{f{BKf}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gb}}}}0{{{f{BKf}}F`}{{l{Fb}}}}{{{f{BKf}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}Gb}{{f{{Cn{Cl}}}}}}{{{f{BKf}}}{{f{AGf}}}}{{{f{DfBKf}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBKf}}}{{f{Df{l{c}}}}}Dl}{{{f{BKf}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BKf}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBKf}}}{{A`{Gbn}}}}{{{f{DfAb}}}{{A`{Gbn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BKf}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BKf}}}{{Ch{{Cn{Fl}}}}}}{{{f{BKf}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMl}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}B`}{{{f{BKf}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{BKf}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBKf}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BKf}}}{{N`{BKf}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gb{{f{c}}}{}}00{{{f{Ab}}}f}1{Gb{{f{Dfc}}}{}}000{{Abc}{}{AnMh}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{AnMh}}{Gbb}000{{{f{BKf}}}Ab}{{{f{BKf}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}8{{{f{Ab}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{}BAf}2{{{f{Ab}}{f{Bl}}}};144{{f{f{c}}}d{}}00{{{f{Ab}}}Gb}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{BKf}}}{{Eb{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BKf}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{{f{BKf}}}Mj}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}Ej}{cc{}}00{DLbAb}{{{l{c}}}AbDl}{{{L`{KnKl}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LnLb}}}Ab}6{{Dd{f{{Bh{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bh{Jj}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{Ib{}{{Cj{{Ch{O`}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nl}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bf}}}}}}}}{cAb{{Ib{}{{Cj{Bf}}}}}}{cAb{{Ib{}{{Cj{{f{Bf}}}}}}}}{cAb{{Ib{}{{Cj{Ej}}}}}}{cAb{{Ib{}{{Cj{{f{Bl}}}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{O`}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{cAb{{Ib{}{{Cj{{f{O`}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{Nf}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Hb}}}}}}}}{cAb{{Ib{}{{Cj{Hb}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{f{Od}}}}}}}}{cAb{{Ib{}{{Cj{Od}}}}}}{cAb{{Ib{}{{Cj{{Ch{Od}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nl}}}}}}}}{cAb{{Ib{}{{Cj{Nl}}}}}}{cAb{{Ib{}{{Cj{{f{Nf}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{{Dd{Gj{Jl}}}Ab}{{Dd{Gj{Aj}}}Ab}{{Dd{Gj{Kd}}}Ab}{{Dd{Gj{Kf}}}Ab}{{Dd{Gj{O`}}}Ab}{{Dd{Gj{Bf}}}Ab}{{Dd{Gj{Nh}}}Ab}{{Dd{Gj{Hb}}}Ab}{{Dd{Gj{Od}}}Ab}{{Dd{Gj{Nl}}}Ab}{{Dd{Gj{Nf}}}Ab}{{DdGb{f{El}}}Ab}{{{f{Ab}}GbGb}Ab}{{{f{BKf}}Gb}{{A`{Jjn}}}}{{{f{Ab}}}Gb}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BKf}}}{{Ch{{Nb{Fl}}}}}}{{{f{BKf}}Gb}{{Ch{{f{K`}}}}}}{{{f{BKf}}GbGb}{{Ch{{f{K`}}}}}}{{{f{BKf}}Gb}Jj}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAf}102{{{f{BKf}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gb}000{{}c{}}000{{}Ff}{AbAAn}2{BFjAb}{AbAb}>{{{f{Ab}}}{{A`{{l{Bb}}n}}}}000{{{f{BKf}}}{{l{Bb}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DLd}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BKf}}}Mj}{{{f{BKf}}}Gb}{{{f{Ab}}}Gb}{{{f{BKf}}Gb}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBj}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}c}{}BAf}{{{f{Ab}}{f{Ab}}}}021{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{BKf}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}6{{AbAb}}>={{{f{BKf}}}{{A`{Gbn}}}}{{{f{BKf}}}{{f{Dd}}}}{{Ddc}Ab{{Id{{Bh{Kd}}}}}}{{Dd{Ob{Kf}}}Ab}{{Dd{Ob{Jl}}}Ab}{{Ddc}Ab{{Id{{Bh{Ab}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Jl}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Eb{{Bh{Bf}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{Jj}}}}}}{{Ddc}AbBFj}{{Ddc}Ab{{Id{{Bh{{Ch{AMj}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{{f{{Bh{Bf}}}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Kf}}}}}}}}{{Ddc}Ab{{Id{{Bh{AMj}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Kd}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Nh}}}}}}}}{{Ddc}Ab{{Id{{Bh{Hb}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{BB`}}}}}}}}{{Ddc}Ab{{Id{{Bh{Ej}}}}}}{{Ddc}Ab{{Id{{Bh{BB`}}}}}}{{Ddc}Ab{{Id{{Bh{Od}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Hb}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Gj{Bf}}}}}}}}{{Ddc}Ab{{Id{{Bh{d}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{AMf}}}}}}}}{{Ddc}Ab{{Id{{Bh{AMf}}}}}}{{Ddc}Ab{{Id{{Bh{Bf}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{BBb}}}}}}}}{{Ddc}Ab{{Id{{Bh{O`}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{{Eb{{Bh{Bf}}}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{Nh}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Od}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Ab}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Bf}}}}}}}}{{Ddc}Ab{{Id{{Bh{{f{Bl}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{Id{{Bh{{Ch{d}}}}}}}}{{Ddc}Ab{{Id{{Bh{BBb}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Nl}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{{Gj{Bf}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{{f{Bl}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{Jl}}}}}}{{Ddc}Ab{{Id{{Bh{Kf}}}}}}{{Ddc}Ab{{Id{{Bh{Nf}}}}}}{{Ddc}Ab{{Id{{Bh{{Eb{Bl}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{{Eb{Bl}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{{f{{Bh{Bf}}}}}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Ej}}}}}}}}{{Dd{Ob{Hb}}}Ab}{{Ddc}Ab{{Id{{Bh{Nl}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Nf}}}}}}}}{{Ddc}Ab{{Id{{Bh{Aj}}}}}}{{Ddc}Ab{{Id{{Bh{{Ch{Aj}}}}}}}}{{Dd{Ob{Od}}}Ab}{{Ddc}Ab{{Id{{Bh{{Ch{O`}}}}}}}}{{Dd{f{El}}}Ab}{{{f{BKf}}GbGb}Ab}{{DdGb}Ab}{{{f{DfDLd}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{}BAf}{{{f{Ab}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Ab}}}}302{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BKf}}}Gb}`{{{f{BKf}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BKf}}AjA@`}{{A`{Mjn}}}}{{{f{BKf}}}Ab}8{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}{{{f{DfBKf}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bh{B@f}}}}}{{A`{Abn}}}}05{MbMb}{{{f{BKf}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gbdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gb}Ab}{{{f{DfAb}}Mb}b}{{{f{BKf}}Hb}Ab}{{{f{DfBKf}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DLd}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{BKf}}HbGb}Ab}{{{f{Ab}}HbGb}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BKf}}F`}{{A`{Abn}}}}{{{f{BKf}}Hb}{{Hf{AbAb}}}}{{{f{Ab}}Hb}{{Hf{AbAb}}}}{{{f{BKf}}Bf}{{Ch{Aj}}}}{{{f{BKf}}Bf}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{Ab}}Gb}{{A`{{Eb{Bl}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{Abc}{}{AnMh}}{{{f{Ab}}c}{}{AnMh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{BKf}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bh{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bh{A@h}}}}}Ab}{{{f{BKf}}{f{{Bh{Jl}}}}}{{A`{Abn}}}}{{{f{BKf}}{f{{Bh{Jl}}}}}Ab}{{{f{BKf}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bh{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GbB@b}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bl}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Eb{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cf}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ab}}}{{Ch{{f{AMl}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ef}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}00{{{Hf{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{Dd{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hf{{f{BAj}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{{f{BAj}}{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}4{{{f{Ab}}}{{Ch{{f{{l{Nj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fb}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADh}}}}}}{{{f{DfAb}}{Kh{c}}}dDl}{{{f{Ab}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{GlBC`}}}}{{{f{Ab}}}{{Ch{{f{{l{Nn}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Oh}}}}}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Oh}}}}n}}}}{{{f{BKf}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKf}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BKf}}Bf}{{Ch{Aj}}}}{{{f{BKf}}Bf}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{AnMh}}{{{f{BKf}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{}Gb}{{}c{}}{{{DLf{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{Dn{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BLf}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CBj}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{G`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBj}}c}{{A`{Abn}}}B`}{{{f{{l{G`}}}}c}{{A`{Abn}}}B`}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CMj}}}CMj}{{f{f{Dfc}}}b{}}{fb}{{}CMj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{CMj}}{f{CMj}}}d}{{f{f{c}}}d{}}00{{{f{CMj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{CMj}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AEL`BHd","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11945],[5,"StructType",1996,11946],[5,"ChunkedArray",17,11947],[6,"PolarsError",3585,11948],[6,"Result",11949],[5,"Series",11401,11950],[17,"Output"],[10,"FnMut",11951],[5,"ListType",1996,11946],[1,"f64"],[10,"PolarsNumericType",1996,11946],[10,"Num",11952],[10,"ToPrimitive",11953],[5,"BooleanType",1996,11946],[5,"BinaryType",1996,11946],[1,"u8"],[1,"slice"],[5,"StringType",1996,11946],[1,"str"],[10,"NumOpsDispatchInner",11891,11954],[5,"ObjectType",1996,11946],[6,"GroupsProxy",4235,11955],[10,"PolarsObject",1548,11956],[5,"FixedSizeListType",1996,11946],[6,"Option",11957],[17,"Item"],[10,"Array",11958],[5,"Box",11959],[10,"Iterator",11960],[5,"AmortizedListIter",11961],[5,"PlSmallStr",1996,11962],[0,"mut"],[17,"IsNested"],[5,"FalseT",1996,11946],[10,"PolarsDataType",1996,11946],[10,"Fn",11951],[10,"Copy",11963],[6,"Cow",11964],[5,"AmortSeries",11867,11965],[5,"Float32Type",1996,11946],[5,"Float64Type",1996,11946],[5,"String",11966],[6,"DataType",1996,11967],[5,"View",11968],[5,"SortOptions",1676,11969],[5,"UInt32Type",1996,11946],[5,"BinaryOffsetType",1996,11946],[6,"Column",3961,11970],[5,"SortMultipleOptions",1676,11969],[10,"PolarsIntegerType",1996,11946],[10,"MetadataTrait",1264,11971],[6,"CastOptions",1158,11972],[10,"NumOpsDispatchCheckedInner",11912,11973],[1,"usize"],[5,"Iter",11974],[1,"fn"],[5,"Map",11975],[5,"Vec",11976],[5,"CompactString",11977],[5,"MetadataProperties",1264,11978],[10,"DoubleEndedIterator",11979],[1,"i64"],[5,"OffsetsBuffer",11980],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11981],[5,"Error",11981],[17,"Array"],[10,"IntoIterator",11982],[10,"AsRef",11983],[10,"Borrow",11984],[10,"PolarsAsRef",11985],[5,"Bitmap",11986],[10,"Send",11963],[10,"Sync",11963],[10,"NoOption",11987],[10,"IntoParallelIterator",11988],[10,"ExactSizeIterator",11989],[10,"Clone",11990],[10,"TrustedLen",11991],[6,"AnyValue",1996,11992],[1,"u32"],[5,"MetadataFlags",1264,11978],[10,"PolarsObjectSafe",1548,11956],[5,"BinaryArray",11993],[1,"f32"],[1,"u64"],[5,"Metadata",1264,11978],[5,"RwLockWriteGuard",11994],[5,"Int32Type",1996,11946],[5,"DateType",1996,11946],[5,"Logical",1996,11995],[5,"Int64Type",1996,11946],[6,"TimeUnit",1996,11996],[5,"DatetimeType",1996,11946],[5,"Int128Type",1996,11946],[5,"DecimalType",1996,11946],[5,"DurationType",1996,11946],[5,"TimeType",1996,11946],[10,"PolarsFloatType",1996,11946],[6,"IsSorted",11401,11997],[10,"PolarsIterator",1207,11998],[6,"ChunkedArrayLayout",17,11947],[10,"NumCast",11953],[5,"Scalar",4604,11999],[6,"MetadataReadGuard",1264,12000],[5,"IMMetadata",1264,12001],[5,"Arc",4604,12002],[5,"RwLockReadGuard",11994],[5,"Int8Type",1996,11946],[1,"i8"],[1,"i128"],[5,"Int16Type",1996,11946],[1,"i16"],[5,"UInt16Type",1996,11946],[1,"u16"],[5,"Range",12003],[1,"i32"],[5,"UInt64Type",1996,11946],[5,"UInt8Type",1996,11946],[5,"Field",1996,12004],[10,"ParallelIterator",11988],[10,"IndexedParallelIterator",11988],[6,"QuantileInterpolOptions",4604,12005],[5,"RollingOptionsFixedWindow",4604,12006],[10,"PolarsOpsNumericType",12007],[10,"Sized",11963],[5,"ChunkId",4604,12008],[17,"IsStruct"],[5,"RandomState",12009],[5,"BytesHash",12010],[5,"ViewRepr",12011],[1,"array"],[5,"Dim",12012],[5,"ArrayBase",12011],[5,"OwnedRepr",12013],[6,"Either",12014],[5,"TypeId",12015],[5,"DataFrame",3684,12016],[5,"NullableIdxSize",4604,12008],[10,"FnOnce",11951],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",852,12017],[5,"AnonymousListBuilder",880,12018],[5,"AnonymousOwnedListBuilder",880,12018],[5,"ListBooleanChunkedBuilder",880,12019],[5,"ListPrimitiveChunkedBuilder",880,12020],[10,"ListBuilderTrait",880,12021],[10,"ChunkedBuilder",880,12022],[5,"ListStringChunkedBuilder",880,12023],[5,"ListBinaryChunkedBuilder",880,12023],[5,"ListNullChunkedBuilder",880,12024],[5,"BinViewChunkedBuilder",880,12025],[10,"ViewType",12026],[5,"BooleanChunkedBuilder",880,12027],[5,"NullChunkedBuilder",880,12028],[5,"PrimitiveChunkedBuilder",880,12029],[5,"NullChunked",12030],[10,"NewChunkedArray",880,12022],[10,"Hasher",12031],[10,"ChunkedCollectInferIterExt",1187,12032],[10,"ChunkedCollectIterExt",1187,12032],[10,"Canonical",1201,12033],[10,"ChunkedCollectParIterExt",1203,12034],[10,"FromParIterWithDtype",1203,12034],[5,"BooleanArray",12035],[5,"BoolIterNoNull",1207,11998],[5,"FixedSizeListArray",12036],[5,"FixedSizeListIterNoNull",1207,11998],[5,"SomeIterator",1207,11998],[5,"MetadataEnv",1264,12037],[10,"MetadataCollectable",1264,12038],[5,"Iter",12039],[5,"IterNames",12039],[5,"File",12040],[5,"Mutex",12041],[6,"MetadataMerge",1264,11978],[5,"RwLock",11994],[5,"ObjectArray",1548,11956],[6,"ArrowDataType",1996,12042],[10,"Any",12015],[10,"Debug",11981],[5,"BitmapIter",12043],[6,"ZipValidity",12044],[5,"ObjectChunkedBuilder",1625,12045],[10,"AnonymousObjectBuilder",1648,12046],[5,"ObjectRegistry",1648,12046],[10,"ChunkAgg",1676,12047],[17,"FuncRet"],[10,"ChunkApply",1676,12047],[10,"ChunkApplyKernel",1676,12047],[10,"ChunkSort",1676,12047],[10,"ChunkUnique",1676,12047],[10,"ChunkCast",1676,12047],[6,"FillNullStrategy",1676,12047],[10,"ChunkCompareEq",11401,12047],[10,"ChunkExplode",1676,12047],[10,"ChunkFillNullValue",1676,12047],[10,"ChunkFilter",1676,12047],[10,"ChunkFull",1676,12047],[10,"ChunkFullNull",1676,12047],[10,"ChunkAnyValue",1676,12047],[10,"ChunkCompareIneq",1676,12047],[10,"IsFirstDistinct",1676,12047],[10,"IsLastDistinct",1676,12047],[10,"ChunkQuantile",1676,12047],[10,"ChunkExpandAtIndex",1676,12047],[10,"Reinterpret",1676,12047],[10,"ChunkReverse",1676,12047],[10,"ChunkRollApply",1676,12047],[10,"ChunkSet",1676,12047],[10,"ChunkShift",1676,12047],[10,"ChunkShiftFill",1676,12047],[10,"SlicedArray",1676,12048],[10,"ChunkVar",1676,12047],[10,"ChunkTake",1676,12047],[10,"ChunkTakeUnchecked",1676,12047],[10,"ChunkBytes",1676,12047],[10,"ChunkZip",1676,12047],[10,"BinaryFnMut",1885,12049],[10,"StaticArray",1996,12050],[10,"TernaryFnMut",1885,12049],[10,"Error",12051],[10,"UnaryFnMut",1885,12049],[5,"PrimitiveArray",12052],[6,"SearchSortedSide",1926,12053],[5,"NoNull",4604,12054],[5,"RowsEncoded",12055],[5,"NaiveDateTime",12056],[6,"Tz",12057],[5,"NaiveTime",12058],[5,"CategoricalChunked",1996,12059],[5,"CategoricalChunkedBuilder",1996,12060],[10,"ArrayFromIter",1996,12061],[10,"ArrayFromIterDtype",1996,12061],[5,"Path",12062],[5,"OsStr",12063],[10,"AsRefDataType",1996,11967],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12064],[10,"From",11983],[5,"BinaryViewArrayGeneric",12026],[6,"RevMapping",1996,12065],[10,"CategoricalMergeOperation",1996,12066],[10,"LogicalType",1996,11995],[6,"CategoricalOrdering",1996,12065],[5,"OwnedObject",1996,11992],[6,"UnknownKind",1996,11967],[5,"CompatLevel",1996,11967],[5,"Dimension",1996,12067],[6,"ReshapeDimension",1996,12067],[5,"CategoricalType",1996,11946],[6,"ArrowTimeUnit",1996],[6,"Ordering",12068],[10,"ArrayCollectIterExt",1996,12061],[5,"GlobalRevMapMerger",1996,12066],[1,"char"],[10,"FromIterator",11982],[10,"NumericNative",1996,11946],[10,"Into",11983],[5,"ArrowField",4604],[6,"PrimitiveType",12069],[6,"IntegerType",12070],[5,"TimeDelta",12071],[5,"NaiveDate",12072],[10,"GetAnyValue",1996,11992],[10,"IntoScalar",1996,12073],[5,"CatIter",1996,12059],[6,"Expr",4604,12074],[1,"u128"],[6,"PhysicalType",12070],[6,"ToCompactStringError",11977],[5,"Arguments",11981],[5,"StringCacheHolder",3546,12075],[5,"EnumChunkedBuilder",3565,12076],[5,"ErrString",3585,11948],[6,"PolarsWarning",3585,12077],[6,"Error",12078],[5,"Error",12079],[5,"TryReserveError",12080],[5,"Utf8Error",12081],[5,"Error",12082],[6,"ParquetError",12083],[10,"Display",11981],[5,"Schema",12084],[10,"IntoColumn",3961,11970],[6,"NullStrategy",3684,12016],[6,"UniqueKeepStrategy",3684,12016],[5,"HashSet",12085],[5,"Row",4492,12086],[5,"GroupBy",4235,12087],[5,"DynamicGroupOptions",4604,12088],[5,"RangeTo",12003],[5,"RangeFrom",12003],[5,"RangeToInclusive",12003],[5,"RangeFull",12003],[5,"RangeInclusive",12003],[5,"RecordBatchIter",3684,12016],[5,"PhysRecordBatchIter",3684,12016],[5,"LazyFrame",4604,12089],[10,"IntoSeries",11401,12090],[5,"RollingGroupOptions",4604,12088],[10,"RangeBounds",12003],[10,"IntoVec",4604,12054],[6,"IndexOrder",4604,12091],[5,"RecordBatchT",12092],[5,"StructArray",4604,12093],[5,"Duration",4604,12094],[5,"ScalarColumn",3961,12095],[6,"BitRepr",11401,11997],[5,"UnpivotArgsIR",4206,12096],[5,"GroupsIdx",4235,11955],[5,"UnitVec",12097],[6,"GroupByMethod",4235,12087],[5,"SlicedGroups",4235,11955],[5,"GroupsProxyParIter",4235,11955],[10,"UnindexedConsumer",12098],[6,"GroupsIndicator",4235,11955],[6,"IRAggExpr",12099],[10,"IntoGroupsProxy",4235,12100],[5,"Copied",12101],[5,"Zip",12102],[5,"GroupsProxyIter",4235,11955],[6,"RollingFnParams",4604,12103],[10,"IsFloat",12104],[10,"NativeType",12105],[10,"AggList",4476,12106],[10,"TakeExtremum",4476,12107],[10,"PhysicalAggExpr",4489,12108],[6,"AnyValueBuffer",4492,12109],[6,"AnyValueBufferTrusted",4492,12109],[5,"Node",12110],[6,"IR",12111],[5,"Arena",12110],[6,"AExpr",12099],[10,"JoinDispatch",4604,12112],[5,"JoinArgs",4604,12113],[5,"StructNameSpace",4604,12114],[10,"SeriesTrait",11401,11997],[10,"DfTake",4604,12115],[10,"DataFrameOps",4604,12116],[5,"CsvReader",4604,12117],[10,"PhysicalIoExpr",12118],[10,"MmapBytesReader",12119],[10,"LhsNumOps",11891,11954],[6,"Selector",4604,12120],[10,"NumOpsDispatch",11891,11954],[5,"LazyGroupBy",4604,12089],[5,"OptFlags",4604,12121],[10,"Allocator",12122],[5,"JoinBuilder",4604,12089],[10,"AnonymousScan",4604,12123],[5,"ScanArgsAnonymous",4604,12124],[10,"FunctionOutputField",4604,12125],[5,"SpecialEq",4604,12125],[6,"VisitRecursion",12126],[6,"FunctionExpr",4604,12127],[10,"ArgAgg",4604,12128],[5,"ArrayNameSpace",4604,12129],[5,"ListNameSpace",4604,12130],[5,"FieldsMapper",4604,12131],[5,"IpcStreamReader",4604,12132],[10,"Read",12133],[10,"ColumnsUdf",4604,12125],[10,"AsBinary",4604,12134],[10,"StringMethods",10317,12135],[5,"BorrowedFd",12136],[10,"AsFd",12136],[10,"AsList",4604,12137],[10,"AsRawFd",12138],[6,"AggExpr",4604,12074],[10,"SeriesSealed",4604,12139],[10,"AsString",4604,12140],[20,"MaybeUninit",12141],[10,"StringNameSpaceImpl",4604,12142],[5,"OwnedBatchedCsvReader",4604,12143],[5,"CsvWriter",4604,12144],[5,"BatchedWriter",12144],[10,"Write",12133],[5,"IpcWriter",4604,12145],[5,"BatchedWriter",12145],[5,"ParquetReader",4604,12146],[5,"BatchedParquetReader",4604,12147],[5,"ParquetWriter",4604,12148],[5,"BatchedWriter",12149],[5,"BatchedCsvReader",4604,12143],[5,"BinaryNameSpace",10222,12150],[6,"Operator",4604,12074],[10,"RenameAliasFn",4604,12125],[5,"UserDefinedFunction",4604,12151],[10,"ColumnBinaryUdf",4604,12125],[5,"InProcessQuery",4604,12152],[5,"HashMap",12153],[5,"CategoricalNameSpace",4604,12154],[10,"RoundSeries",4604,12155],[10,"TemporalMethods",11286,12156],[10,"NumOpsDispatchChecked",11912,11973],[5,"LazyCsvReader",4604,12157],[5,"ScanArgsIpc",4604,12158],[5,"LazyJsonLineReader",4604,12159],[5,"ScanArgsParquet",4604,12160],[5,"RollingOptionsDynamicWindow",4604,12161],[5,"Bounds",4604,12162],[6,"ClosedWindow",4604,12163],[6,"Label",4604,12163],[6,"StartBy",4604,12163],[5,"Window",4604,12164],[5,"CsvReadOptions",4604,12165],[5,"CsvParseOptions",4604,12165],[6,"CsvEncoding",4604,12165],[6,"CommentPrefix",4604,12165],[6,"NullValues",4604,12165],[5,"CsvWriterOptions",4604,12166],[5,"SerializeOptions",4604,12166],[6,"QuoteStyle",4604,12166],[5,"IpcScanOptions",4604,12167],[5,"IpcWriterOptions",4604,12145],[6,"IpcCompression",4604,12145],[6,"JoinCoalesce",4604,12113],[5,"JsonWriterOptions",4604,12168],[6,"JoinType",4604,12113],[6,"JoinValidation",4604,12113],[5,"ParquetOptions",4604,12169],[5,"AsOfOptions",4604,12170],[6,"ParallelStrategy",4604,12169],[6,"AsofStrategy",4604,12170],[6,"InequalityOperator",4604,12171],[5,"ParquetWriteOptions",4604,12172],[5,"IEJoinOptions",4604,12171],[6,"ParquetCompression",4604,12172],[5,"GzipLevel",4604,12172],[5,"BrotliLevel",4604,12172],[5,"ZstdLevel",4604,12172],[6,"InterpolationMethod",4604,12173],[6,"ClosedInterval",4604,12174],[6,"RankMethod",4604,12175],[5,"RankOptions",4604,12175],[6,"DslPlan",4604,12176],[5,"When",4604,12177],[5,"Then",4604,12177],[5,"ChainedWhen",4604,12177],[5,"ChainedThen",4604,12177],[6,"LazySerde",4604,12074],[6,"Excluded",4604,12074],[6,"BooleanFunction",4604,12178],[6,"CategoricalFunction",4604,12179],[6,"TemporalFunction",4604,12180],[6,"PowFunction",4604,12181],[6,"StringFunction",4604,12182],[6,"StructFunction",4604,12183],[5,"StatisticsOptions",4604,12184],[5,"DatetimeArgs",4604,12185],[5,"DurationArgs",4604,12185],[5,"RollingCovOptions",4604,12186],[5,"StrptimeOptions",4604,12186],[5,"JoinOptions",4604,12186],[6,"WindowType",4604,12186],[6,"WindowMapping",4604,12186],[6,"NestedType",4604,12186],[5,"UnpivotArgsDSL",4604,12186],[5,"FileMetadata",4604,12187],[6,"LiteralValue",4604,12188],[5,"AnonymousScanOptions",4604,12189],[5,"UnionArgs",4604,12189],[5,"RollingVarParams",4604,12103],[5,"RollingQuantileParams",4604,12103],[6,"NonExistent",4604,12190],[10,"LazyFileListReader",4604,12191],[5,"CloudOptions",10453,12192],[10,"Ord",12068],[6,"ColumnOrder",12193],[10,"BinaryNameSpaceImpl",4604,12194],[5,"JsonLineReader",4604,12195],[10,"CrossJoin",4604,12196],[10,"ExprEvalExtension",4604,12197],[10,"DateMethods",10317,12198],[10,"DatetimeMethods",10317,12199],[10,"DurationMethods",10317,12200],[5,"IpcStreamWriterOption",4604,12132],[10,"BinaryUdfOutputField",4604,12125],[10,"Default",12201],[5,"CStr",12202],[5,"ParquetStatistics",4604],[5,"ColumnChunkMetadata",12203],[6,"NullBehavior",11918,12204],[5,"Weak",12002],[5,"DateLikeNameSpace",10848,12205],[10,"SeriesMethods",4604,12206],[10,"PartialEq",12068],[10,"Scalar",12207],[10,"ListNameSpaceExtension",4604,12208],[10,"Command",12209],[5,"PathBuf",12062],[10,"SerReader",4604,12210],[10,"SerWriter",4604,12210],[5,"IpcReader",4604,12167],[5,"IpcStreamWriter",4604,12132],[5,"JsonWriter",4604,12168],[5,"JsonReader",4604,12168],[10,"UdfSchema",4604,12211],[6,"ListFunction",12212],[6,"BinaryFunction",12213],[6,"ArrayFunction",12214],[6,"RangeFunction",12215],[5,"MutableStatistics",12216],[1,"never"],[5,"OsString",12063],[5,"CString",12217],[10,"ToOwned",11964],[5,"GrowableStruct",12218],[5,"MutableStructArray",12219],[10,"SchemaExt",4604,12220],[10,"FromData",10842,12221],[5,"Buffer",12222],[10,"FromDataUtf8",10842,12221],[10,"FromDataBinary",10842,12221],[5,"ListArray",12223],[6,"Ambiguous",4604,12190],[10,"NamedFromOwned",4604,12224],[10,"DataFrameJoinOps",4604,12225],[5,"FunctionOptions",12189],[10,"PartialOrd",12068],[6,"Context",12176],[5,"BoundsIter",4604,12164],[6,"ReaderBytes",12119],[10,"PolarsTemporalGroupby",4604,12088],[10,"Hash",12031],[10,"SeriesJoin",4604,12226],[10,"TimeMethods",10317,12227],[5,"NonZero",12228],[10,"IntoListNameSpace",4604,12208],[5,"StructValueIter",12229],[17,"DataType"],[10,"SchemaNamesAndDtypes",4604,12220],[10,"AsofJoinBy",4604,12230],[10,"ListNameSpaceImpl",4604,12231],[5,"ExprNameNameSpace",4604,12232],[5,"KeyValue",12233],[10,"IntoLazy",4604,12089],[10,"Literal",4604,12188],[5,"Null",4604,12188],[10,"CloneToUninit",11990],[5,"SuperTypeOptions",12234],[5,"RowIndex",12235],[10,"ChunkAggSeries",4604,12236],[10,"QuantileAggSeries",4604,12237],[10,"IndexToUsize",4604,12238],[10,"NamedFrom",4604,12224],[6,"RowGroupFetcher",12147],[6,"ScanSources",12239],[5,"SplitNChars",4604,12240],[5,"AnonymousScanArgs",4604,12123],[5,"Pin",12241],[5,"Request",12051],[10,"SeriesRank",4604,12175],[5,"BorrowedCursor",12242],[10,"VarInt",12243],[5,"IoSliceMut",12133],[10,"SeriesOpsTime",10317,12244],[10,"PolarsRound",4604,12245],[10,"ChunkedSet",4604,12007],[5,"SchemaDescriptor",12246],[6,"SeekFrom",12133],[10,"VarAggSeries",4604,12247],[5,"StringNameSpace",12248],[10,"TakeChunked",4604,12115],[5,"IRPlan",12111],[10,"ToDummies",4604,12249],[10,"PolarsTruncate",4604,12250],[5,"FileMetaData",12233],[5,"AllocError",12122],[5,"SchemaInferenceResult",11253,12251],[10,"PolarsUpsample",4604,12252],[10,"VecHash",4604,12253],[6,"JsonFormat",4604,12168],[5,"BTreeMap",12254],[10,"WriteDataFrameToFile",12210],[5,"IoSlice",12133],[6,"PrefilterMaskSetting",10132,12147],[5,"RowGroupMetadata",12255],[5,"MemSlice",12256],[6,"Filter",12257],[10,"ArrayNameSpace",10203,12258],[10,"AsArray",10203,12259],[6,"Buffer",10239,12260],[10,"AsString",10383,12135],[6,"Pattern",10383,12261],[5,"DatetimeInfer",10422,12262],[10,"StrpTimeParser",10422,12262],[17,"Error"],[10,"TryFromWithUnit",10422,12262],[6,"CloudType",10453,12192],[6,"SupportedCompression",10512,12263],[5,"AnonymousBuilder",10903,12264],[6,"RollingFunction",11146,12265],[6,"RollingFunctionBy",11177,12266],[5,"MutableNullArray",11222,12267],[5,"MutableBitmap",12268],[10,"AsSeries",11286,12156],[5,"Utf8Array",12269],[5,"_SerdeSeries",11970],[5,"SeriesIter",11401,12270],[5,"Rc",12271],[8,"FillNullLimit",1676],[10,"InitHashMaps",1996],[10,"InitHashMaps2",1996],[5,"TrueT",1996],[8,"PolarsResult",3585],[15,"IO",10112],[15,"Context",10112],[15,"Count",10106],[15,"Slice",10107],[8,"OpaqueColumnUdf",4604],[8,"ChunkJoinOptIds",4604],[10,"ListFromIter",4604],[15,"Quantile",9988],[15,"Min",9988],[15,"Max",9988],[15,"IsBetween",11099],[15,"Any",11099],[15,"All",11099],[15,"GroupBy",9998],[15,"Union",9998],[15,"Sort",9998],[15,"Scan",9998],[15,"ExtContext",9998],[15,"DataFrameScan",9998],[15,"IR",9998],[15,"Select",9998],[15,"HStack",9998],[15,"MapFunction",9998],[15,"Cache",9998],[15,"Filter",9998],[15,"Distinct",9998],[15,"Slice",9998],[15,"Sink",9998],[15,"Join",9998],[15,"HConcat",9998],[15,"SortBy",10049],[15,"Filter",10049],[15,"Cast",10049],[15,"Sort",10049],[15,"Gather",10049],[15,"RenameAlias",10049],[15,"Ternary",10049],[15,"Function",10049],[15,"Window",10049],[15,"AnonymousFunction",10049],[15,"Slice",10049],[15,"BinaryExpr",10049],[15,"Round",11102],[15,"RoundSF",11102],[15,"Clip",11102],[15,"BackwardFill",11102],[15,"ForwardFill",11102],[15,"Random",11102],[15,"GatherEvery",11102],[15,"ValueCounts",11102],[15,"Rank",11102],[15,"ReplaceStrict",11102],[15,"CumCount",11102],[15,"CumSum",11102],[15,"CumProd",11102],[15,"CumMin",11102],[15,"CumMax",11102],[15,"Range",10109],[15,"ConcatHorizontal",11124],[15,"ConcatVertical",11124],[15,"ExtractGroups",11124],[15,"SplitExact",11124],[15,"Contains",11124],[15,"Find",11124],[15,"Replace",11124],[15,"DatetimeFunction",11138],[5,"Utf8Field",10239],[5,"CategoricalField",10239],[5,"DatetimeField",10239],[15,"Datetime",10313],[10,"Utf8FromIter",11397],[10,"BinaryFromIter",11397]],"r":[[1,12272],[2,12272],[3,12272],[4,12272],[6,12075],[7,12272],[8,12272],[9,12272],[13,12272],[14,12272],[16,12075],[17,11947],[18,11947],[19,11947],[24,12273],[116,11947],[140,11947],[141,11947],[169,11947],[171,11947],[226,11947],[279,11947],[425,11947],[471,11947],[576,11947],[579,11947],[721,11947],[852,12017],[880,12018],[881,12018],[882,12025],[883,12025],[884,12027],[885,12022],[886,12023],[887,12019],[888,12021],[889,12024],[890,12020],[891,12023],[892,12022],[893,12028],[894,12029],[895,12025],[1032,12022],[1048,12021],[1076,12022],[1141,12018],[1142,12018],[1143,12023],[1144,12019],[1145,12021],[1146,12024],[1147,12020],[1148,12023],[1156,12021],[1158,11972],[1187,12032],[1188,12032],[1201,12033],[1203,12034],[1204,12034],[1207,11998],[1208,11998],[1209,11998],[1210,11998],[1246,11998],[1262,12274],[1263,12274],[1269,12001],[1274,11978],[1275,12038],[1276,12037],[1277,11978],[1278,11978],[1279,11978],[1280,12000],[1281,11971],[1548,11956],[1549,11956],[1550,11956],[1551,11956],[1563,11956],[1594,11956],[1595,12275],[1625,12045],[1648,12046],[1649,12046],[1650,12046],[1651,12046],[1663,12046],[1664,12046],[1665,12046],[1668,12046],[1670,12046],[1677,12047],[1678,12047],[1679,12047],[1680,12047],[1681,12047],[1682,12047],[1683,12047],[1684,12047],[1685,12047],[1686,12047],[1687,12047],[1688,12047],[1689,12047],[1690,12047],[1691,12047],[1692,12047],[1693,12047],[1694,12047],[1695,12047],[1696,12047],[1697,12047],[1698,12047],[1699,12047],[1700,12047],[1701,12047],[1702,12047],[1703,12047],[1704,12047],[1707,12047],[1708,12047],[1718,12047],[1719,12048],[1721,11969],[1722,11969],[1736,12047],[1781,12047],[1784,12047],[1793,12047],[1796,12047],[1840,12047],[1846,12047],[1883,12047],[1885,12049],[1889,12049],[1890,12049],[1891,12049],[1892,12049],[1893,12049],[1894,12049],[1895,12049],[1896,12049],[1897,12049],[1898,12049],[1899,12049],[1900,12049],[1901,12049],[1902,12049],[1903,12049],[1904,12049],[1905,12049],[1906,12049],[1907,12049],[1908,12049],[1909,12049],[1910,12049],[1911,12049],[1912,12049],[1913,12049],[1914,12049],[1915,12049],[1916,12049],[1917,12049],[1918,12049],[1919,12049],[1920,12049],[1921,12276],[1922,12276],[1923,12277],[1924,12277],[1925,12277],[1929,12053],[1931,12053],[1950,12053],[1956,12048],[1957,12278],[1958,12278],[1959,12278],[1960,12278],[1963,12279],[1964,12280],[1965,12280],[1966,12280],[1967,12280],[1968,12280],[1969,12280],[1970,12280],[1971,12280],[1972,12048],[1973,11969],[1974,11969],[1985,12281],[1986,12282],[1987,12282],[1988,12282],[1989,12281],[1990,12281],[1991,12283],[1992,12281],[1993,12282],[1994,12282],[1995,12282],[1997,11992],[2001,11946],[2002,12061],[2003,12061],[2004,12061],[2005,12042],[2007,11967],[2011,11946],[2013,11946],[2014,11946],[2016,11946],[2021,11946],[2022,11946],[2023,12059],[2026,12059],[2027,12060],[2028,12066],[2029,12065],[2031,11946],[2032,11967],[2033,11967],[2034,11967],[2035,11967],[2040,12284],[2041,11946],[2044,12285],[2046,11946],[2051,12286],[2052,11946],[2054,12067],[2058,12287],[2059,11946],[2066,11946],[2067,12004],[2068,12004],[2071,11946],[2077,11946],[2078,11946],[2082,11946],[2083,11946],[2084,11992],[2086,12066],[2090,12288],[2091,12238],[2092,12288],[2093,12288],[2095,12289],[2096,12288],[2098,11946],[2099,11946],[2103,11946],[2104,11946],[2108,11946],[2109,11946],[2113,11946],[2114,11946],[2118,11946],[2119,11946],[2121,12073],[2132,11946],[2133,11946],[2135,11995],[2136,11995],[2148,11946],[2151,11946],[2153,11946],[2154,11992],[2158,12289],[2159,12289],[2160,12288],[2161,12289],[2162,12289],[2163,12289],[2164,11962],[2165,11946],[2166,11946],[2167,11946],[2168,11946],[2170,12067],[2171,12065],[2174,12050],[2178,11946],[2180,11946],[2185,11946],[2190,12290],[2191,11946],[2192,11996],[2193,11967],[2196,11946],[2200,11946],[2201,11946],[2205,11946],[2206,11946],[2210,11946],[2211,11946],[2215,11946],[2216,11946],[2220,11967],[2403,12066],[2416,11995],[2548,11967],[2726,11995],[3128,12066],[3129,12066],[3133,11967],[3523,12059],[3524,12059],[3525,12060],[3526,12066],[3527,12065],[3529,12066],[3533,12065],[3534,12066],[3536,12066],[3537,12066],[3538,12059],[3539,12059],[3540,12065],[3545,12065],[3546,12075],[3552,12075],[3555,12075],[3563,12075],[3565,12076],[3591,11948],[3598,11948],[3599,11948],[3600,12077],[3616,11948],[3629,11948],[3645,12077],[3652,11948],[3654,11948],[3655,11948],[3656,11948],[3657,11948],[3658,12077],[3659,11948],[3681,12291],[3682,12291],[3683,12291],[3685,12016],[3690,12016],[3691,12016],[3693,12016],[3694,12016],[3736,12016],[3773,12016],[3805,12016],[3875,12016],[3961,11970],[3962,11970],[3964,12095],[4206,12096],[4235,11955],[4238,12087],[4239,12087],[4241,11955],[4242,11955],[4243,11955],[4244,11955],[4245,11955],[4246,11955],[4249,11955],[4251,12100],[4263,11955],[4272,12087],[4343,12087],[4353,12087],[4476,12106],[4477,12107],[4478,12107],[4479,12107],[4480,12107],[4481,12107],[4482,12107],[4483,12107],[4484,12107],[4485,12107],[4489,12108],[4494,12109],[4495,12109],[4515,12086],[4549,12086],[4570,12086],[4584,12086],[4585,12086],[4586,12086],[4602,12292],[4603,12293],[4607,12074],[4614,12121],[4616,12190],[4619,12123],[4620,12123],[4621,12189],[4628,11992],[4629,12002],[4630,12128],[4633,12017],[4638,11946],[4639,12061],[4641,12061],[4642,12061],[4643,12129],[4644,11958],[4645,12042],[4647,12294],[4649,12134],[4650,12137],[4652,12170],[4653,11967],[4654,12140],[4656,12170],[4657,12230],[4658,12170],[4661,12295],[4667,12143],[4668,12147],[4673,11946],[4674,12025],[4677,12194],[4679,11946],[4680,11946],[4682,11946],[4683,12125],[4690,11946],[4691,12027],[4692,12178],[4693,11946],[4694,11955],[4697,12162],[4698,12164],[4700,12172],[4711,12059],[4715,12059],[4716,12060],[4717,12179],[4718,12066],[4719,12154],[4720,12065],[4722,11946],[4726,12177],[4727,12177],[4728,12047],[4729,12236],[4730,12047],[4731,12047],[4732,12047],[4733,12047],[4734,12047],[4735,12047],[4736,12047],[4737,12047],[4738,12047],[4739,12047],[4740,12047],[4741,12047],[4742,12047],[4743,12008],[4744,12113],[4745,12047],[4746,12047],[4747,12047],[4748,12047],[4749,12047],[4750,12047],[4751,12047],[4752,12047],[4753,12047],[4754,12047],[4755,12047],[4756,12047],[4757,11947],[4758,12022],[4759,12032],[4760,12032],[4761,12007],[4763,12174],[4764,12163],[4767,11970],[4769,12125],[4773,12125],[4775,12165],[4776,11967],[4788,12196],[4789,12165],[4790,12165],[4791,12165],[4792,12117],[4793,12144],[4794,12166],[4801,11967],[4802,11967],[4803,12016],[4804,12225],[4805,12116],[4809,11967],[4817,12284],[4818,12198],[4820,11946],[4824,12185],[4825,12285],[4827,12199],[4829,11946],[4836,12286],[4837,11946],[4841,12115],[4844,12067],[4849,12176],[4853,12094],[4859,12185],[4860,12287],[4861,12200],[4862,11946],[4863,12088],[4874,12074],[4878,12074],[4879,12197],[4880,12232],[4889,12295],[4890,12295],[4891,11946],[4892,12004],[4896,12004],[4897,12131],[4898,12232],[4899,12187],[4900,12296],[4902,12047],[4903,12047],[4913,11946],[4921,11946],[4922,11946],[4927,11946],[4928,11946],[4936,12221],[4937,12221],[4938,12221],[4942,12127],[4943,12125],[4947,11992],[4949,12125],[4951,12066],[4952,12087],[4954,12087],[4956,11955],[4957,11955],[4958,11955],[4959,11955],[4960,11955],[4961,11955],[4968,12172],[4978,12288],[4980,12171],[4981,12295],[4987,12238],[4988,12288],[4989,11955],[4990,12008],[4991,12288],[4994,12152],[4996,12091],[4997,12238],[4998,12171],[5000,12289],[5001,12288],[5003,12113],[5006,11946],[5007,11946],[5012,11946],[5013,11946],[5018,11946],[5019,11946],[5024,11946],[5025,11946],[5030,11946],[5031,11946],[5035,12173],[5037,11970],[5038,12100],[5039,12089],[5040,12208],[5041,12073],[5042,12090],[5043,12054],[5045,12145],[5046,12167],[5047,12167],[5048,12132],[5049,12132],[5050,12132],[5051,12145],[5052,12145],[5055,12047],[5059,12047],[5074,12113],[5075,12089],[5076,12113],[5077,12112],[5078,12186],[5080,12113],[5081,12113],[5084,12168],[5085,12195],[5087,12168],[5088,12168],[5089,12168],[5093,12163],[5095,12297],[5097,12297],[5098,12297],[5104,12157],[5105,12191],[5106,12089],[5107,12089],[5108,12159],[5109,12074],[5116,12113],[5121,11954],[5127,12023],[5128,12019],[5129,12021],[5130,11946],[5132,12298],[5133,12130],[5134,12208],[5135,12231],[5136,12020],[5137,12023],[5138,11946],[5139,12188],[5141,12188],[5143,11995],[5146,11995],[5197,12188],[5202,12224],[5203,12224],[5215,12186],[5217,12022],[5219,12054],[5220,12190],[5231,12188],[5239,12165],[5240,12008],[5241,12008],[5242,11954],[5243,11973],[5244,11946],[5247,11946],[5249,11946],[5254,12074],[5255,12074],[5256,12121],[5265,12143],[5266,11992],[5268,12299],[5271,12169],[5272,12172],[5273,12169],[5274,12146],[5276,12172],[5277,12148],[5280,12289],[5281,12289],[5282,12288],[5283,12289],[5284,12289],[5285,12289],[5286,11962],[5288,11946],[5289,11948],[5290,11946],[5291,11946],[5292,11998],[5293,11946],[5294,11956],[5295,11948],[5296,12245],[5297,12088],[5298,12250],[5300,12252],[5302,12181],[5305,12029],[5309,12237],[5310,12005],[5312,12166],[5321,12175],[5322,12175],[5323,12047],[5325,12125],[5334,12067],[5335,12065],[5345,12186],[5348,12103],[5349,12088],[5350,12161],[5351,12006],[5352,12103],[5353,12300],[5354,12103],[5359,12155],[5360,12301],[5368,11999],[5372,12124],[5373,12158],[5374,12160],[5375,12220],[5376,12220],[5379,12220],[5380,12220],[5381,12053],[5385,12120],[5388,12210],[5389,12210],[5390,12166],[5391,11950],[5394,12226],[5395,12206],[5396,12244],[5397,12175],[5398,12139],[5399,11997],[5412,12048],[5413,11955],[5419,11969],[5420,11969],[5421,12125],[5426,12240],[5428,12163],[5430,12050],[5431,12184],[5439,12075],[5441,11946],[5442,12025],[5444,12182],[5445,12135],[5446,12142],[5448,11946],[5455,12186],[5459,12093],[5460,12273],[5463,12183],[5464,12114],[5466,11946],[5476,12115],[5478,12180],[5479,12156],[5481,12177],[5489,12290],[5490,12227],[5492,11946],[5493,11996],[5494,11967],[5498,12249],[5512,11946],[5519,11946],[5520,11946],[5525,11946],[5526,11946],[5531,11946],[5532,11946],[5537,11946],[5538,11946],[5539,12302],[5540,12211],[5544,12189],[5546,12016],[5549,11967],[5550,12186],[5551,12096],[5554,12151],[5564,12247],[5565,12253],[5569,12177],[5571,12164],[5574,12186],[5575,12186],[5585,12172],[5682,12303],[5687,12304],[5688,12303],[5701,12305],[5712,12087],[5714,12306],[5717,12307],[5731,12307],[5742,12308],[5748,12309],[5751,12310],[5764,12311],[5769,12311],[5772,12047],[5782,12312],[5807,12313],[5811,12314],[5815,12315],[5823,12309],[5825,12177],[6095,12316],[6103,12066],[6108,12314],[6119,12309],[6133,12317],[6136,12318],[6138,12318],[6140,12318],[6434,12319],[6442,12307],[6446,12320],[6447,12306],[6449,12321],[6462,12306],[6471,12302],[6475,12321],[6477,12322],[6480,12321],[6481,12321],[6482,12322],[6483,12322],[6492,12298],[6493,12323],[6499,12324],[6500,12325],[6501,12325],[6502,12324],[6503,11967],[6509,12326],[6511,12307],[6512,12326],[6514,12326],[6516,12326],[6518,12307],[6519,12326],[6523,12272],[6525,12310],[6526,12312],[6527,12185],[6529,12310],[6530,12310],[6531,12282],[6532,12282],[6533,12282],[6600,12298],[6601,12112],[6868,12216],[6870,12272],[6872,12327],[7020,12328],[7021,12309],[7030,12306],[7031,12306],[7033,12185],[7041,12094],[7042,12094],[7043,12220],[7316,12299],[7317,12299],[7318,12299],[7324,12087],[7345,12047],[7382,12309],[7387,12298],[7391,12047],[7396,12329],[7503,12087],[7507,12307],[7511,12322],[7744,12047],[7754,12309],[7756,12047],[7781,12299],[7790,12295],[7802,12163],[7803,12163],[7887,12330],[7898,12331],[7899,12332],[7900,12332],[7902,12333],[7914,12306],[7917,12238],[7918,12251],[8056,12310],[8057,12310],[8059,12334],[8060,12173],[8062,12334],[8063,12335],[8218,12174],[8220,12299],[8228,12336],[8234,12337],[8237,12338],[8246,12314],[8249,12314],[8256,12323],[8291,12309],[8300,12324],[8301,12324],[8309,12309],[8318,12188],[8366,12066],[8367,12066],[8372,12308],[8383,12309],[8386,12309],[8395,12339],[8396,12295],[8397,12314],[8408,12314],[8414,12314],[8424,11967],[8433,12314],[8454,12312],[8492,12312],[8503,12340],[8504,12341],[8552,12342],[8576,12314],[8581,12309],[8582,12298],[8618,12295],[8636,11948],[8637,11948],[8638,11948],[8639,11948],[8644,12225],[8653,12314],[8684,12307],[8691,12168],[8695,12343],[8696,12344],[8698,12345],[8705,12345],[8706,12345],[8708,12332],[8710,12299],[8802,12316],[8806,12047],[8820,12317],[8872,12047],[8892,12240],[8894,12240],[8912,12330],[8922,12312],[8923,12346],[8925,12346],[8927,12346],[8929,12346],[8931,12346],[8946,12314],[8971,12177],[8975,12310],[9124,12324],[9125,12324],[9575,12309],[9600,12298],[9766,12177],[9977,12347],[9986,12047],[10135,12147],[10138,12147],[10142,12339],[10147,12348],[10149,12349],[10154,12106],[10155,12107],[10156,12107],[10157,12107],[10158,12107],[10159,12107],[10160,12107],[10161,12107],[10162,12107],[10163,12107],[10167,12049],[10171,12049],[10172,12049],[10173,12049],[10174,12049],[10175,12049],[10176,12049],[10177,12049],[10178,12049],[10179,12049],[10180,12049],[10181,12049],[10182,12049],[10183,12049],[10184,12049],[10185,12049],[10186,12049],[10187,12049],[10188,12049],[10189,12049],[10190,12049],[10191,12049],[10192,12049],[10193,12049],[10194,12049],[10195,12049],[10196,12049],[10197,12049],[10198,12049],[10199,12049],[10200,12049],[10201,12049],[10202,12049],[10203,12258],[10204,12259],[10222,12150],[10240,12260],[10242,12260],[10245,12260],[10259,12260],[10291,12260],[10316,12154],[10317,12198],[10318,12199],[10319,12200],[10320,12161],[10321,12244],[10322,12135],[10323,12227],[10376,12350],[10383,12135],[10389,12261],[10390,12135],[10413,12135],[10422,12262],[10424,12262],[10425,12262],[10436,12262],[10455,12192],[10456,12192],[10492,12351],[10505,12192],[10506,12192],[10513,12263],[10525,12263],[10531,11992],[10535,11946],[10536,12061],[10537,12061],[10538,12061],[10539,12042],[10541,11967],[10545,11946],[10547,11946],[10548,11946],[10550,11946],[10555,11946],[10556,11946],[10557,12059],[10560,12059],[10561,12060],[10562,12066],[10563,12065],[10565,11946],[10566,11967],[10567,11967],[10568,11967],[10569,11967],[10574,12284],[10575,11946],[10578,12285],[10580,11946],[10585,12286],[10586,11946],[10588,12067],[10592,12287],[10593,11946],[10598,11946],[10599,12004],[10600,12004],[10603,11946],[10609,11946],[10610,11946],[10614,11946],[10615,11946],[10616,11992],[10618,12066],[10622,12288],[10623,12238],[10624,12288],[10625,12288],[10627,12289],[10628,12288],[10630,11946],[10631,11946],[10635,11946],[10636,11946],[10640,11946],[10641,11946],[10645,11946],[10646,11946],[10650,11946],[10651,11946],[10653,12073],[10664,11946],[10665,11946],[10667,11995],[10668,11995],[10680,11946],[10683,11946],[10685,11946],[10686,11992],[10690,12289],[10691,12289],[10692,12288],[10693,12289],[10694,12289],[10695,12289],[10696,11962],[10697,11946],[10698,11946],[10699,11946],[10700,11946],[10702,12067],[10703,12065],[10706,12050],[10710,11946],[10712,11946],[10717,11946],[10722,12290],[10723,11946],[10724,11996],[10725,11967],[10728,11946],[10732,11946],[10733,11946],[10737,11946],[10738,11946],[10742,11946],[10743,11946],[10747,11946],[10748,11946],[10752,11967],[10765,12066],[10768,11995],[10773,11967],[10776,11995],[10791,12066],[10792,12066],[10793,11967],[10811,12059],[10812,12059],[10813,12060],[10814,12066],[10815,12065],[10817,12066],[10821,12065],[10822,12066],[10824,12066],[10825,12066],[10826,12059],[10827,12059],[10828,12065],[10833,12065],[10834,12075],[10835,12075],[10836,12075],[10837,12075],[10838,12076],[10839,12332],[10840,12332],[10841,12332],[10842,12221],[10843,12221],[10844,12221],[10848,12205],[10900,12108],[10903,12264],[10923,12276],[10924,12276],[10939,12178],[10942,12179],[10981,12127],[11024,12181],[11057,12182],[11065,12183],[11070,12180],[11095,12127],[11096,12127],[11097,12127],[11098,12127],[11140,12179],[11144,12181],[11150,12265],[11181,12266],[11208,12277],[11209,12277],[11210,12277],[11211,12173],[11214,12173],[11215,12335],[11216,12352],[11217,12353],[11218,12353],[11219,12353],[11220,12353],[11221,12353],[11222,12267],[11253,12251],[11264,12251],[11269,12251],[11270,12251],[11283,12053],[11284,12053],[11285,12053],[11286,12156],[11287,12156],[11308,12048],[11309,12278],[11310,12278],[11311,12278],[11312,12278],[11315,12279],[11316,12280],[11317,12280],[11318,12280],[11319,12280],[11320,12280],[11321,12280],[11322,12280],[11323,12280],[11324,12048],[11325,11969],[11326,11969],[11337,12140],[11338,12240],[11339,12142],[11358,12330],[11366,12240],[11368,12240],[11371,12330],[11377,12346],[11379,12346],[11381,12346],[11383,12346],[11385,12346],[11391,12151],[11397,12354],[11398,12354],[11402,11997],[11403,12047],[11405,12090],[11406,11997],[11410,11950],[11411,12270],[11412,12270],[11413,11997],[11424,11950],[11431,11950],[11621,11950],[11743,11950],[11867,11965],[11868,11965],[11891,11954],[11892,11954],[11893,11954],[11895,11954],[11899,11954],[11912,11973],[11913,11973],[11920,12204]],"b":[[29,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[30,"impl-Add-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[32,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-ChunkedArray%3CStringType%3E"],[38,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[39,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[40,"impl-Add-for-%26ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[43,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[44,"impl-AggList-for-ChunkedArray%3CListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[49,"impl-AggList-for-ChunkedArray%3CT%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[60,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[64,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[91,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[151,"impl-ChunkedArray%3CStructType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[162,"impl-ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[183,"impl-Div-for-ChunkedArray%3CT%3E"],[184,"impl-Div-for-%26ChunkedArray%3CT%3E"],[185,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[193,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[198,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[201,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[202,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[203,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[210,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[227,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[228,"impl-Debug-for-ChunkedArray%3CListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[230,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[231,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[232,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-Debug-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkedArray%3CFixedSizeListType%3E"],[236,"impl-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[246,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[249,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[251,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[254,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[255,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[256,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[261,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[263,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[264,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[268,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[270,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[272,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[276,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[277,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[278,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[283,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[286,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[290,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[299,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[305,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[307,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[308,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[322,"impl-ChunkedArray%3CListType%3E"],[323,"impl-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[371,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[376,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[377,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[378,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkedArray%3CListType%3E"],[390,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[437,"impl-ChunkedArray%3CT%3E"],[442,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[443,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[444,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[447,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[450,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[452,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[453,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[455,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[456,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[457,"impl-ChunkedArray%3CBooleanType%3E"],[458,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[466,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[467,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[477,"impl-ChunkedArray%3CBooleanType%3E"],[478,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[484,"impl-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkedArray%3CT%3E"],[486,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[487,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[488,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul-for-ChunkedArray%3CT%3E"],[492,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[493,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[496,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[497,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[498,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[501,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[502,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[503,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[504,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[505,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[506,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[507,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[510,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[511,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[513,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[515,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[518,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[519,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[520,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[522,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[523,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[524,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[539,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[540,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[541,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[542,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[543,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[544,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[546,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[553,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[554,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[555,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[556,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[557,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[558,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[559,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[560,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[563,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[569,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[573,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[577,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[578,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[580,"impl-ChunkedArray%3CListType%3E"],[581,"impl-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkedArray%3CListType%3E"],[586,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[587,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[588,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[589,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[591,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[621,"impl-Rem-for-ChunkedArray%3CT%3E"],[622,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[623,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[624,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[627,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[628,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[639,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[640,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[641,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[642,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[643,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[644,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[645,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[647,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[660,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[661,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[662,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[663,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[664,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[665,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[666,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[669,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[670,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[671,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[672,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[674,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[675,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[677,"impl-Container-for-ChunkedArray%3CT%3E"],[678,"impl-ChunkedArray%3CT%3E"],[679,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[680,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[681,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[683,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[684,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[686,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[687,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[689,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[690,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[691,"impl-Container-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkedArray%3CT%3E"],[694,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[698,"impl-Sub-for-ChunkedArray%3CT%3E"],[699,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[700,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[703,"impl-ChunkedArray%3CBooleanType%3E"],[704,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[705,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[709,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[713,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[714,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[715,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[716,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[719,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[725,"impl-ChunkedArray%3CListType%3E"],[726,"impl-ChunkedArray%3CFixedSizeListType%3E"],[727,"impl-ChunkedArray%3CT%3E"],[728,"impl-ChunkedArray%3CListType%3E"],[733,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[734,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[740,"impl-ChunkedArray%3CListType%3E"],[741,"impl-ChunkedArray%3CFixedSizeListType%3E"],[755,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[765,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[768,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[780,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[789,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[851,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1027,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1028,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1302,"impl-Flags-for-MetadataProperties"],[1303,"impl-MetadataProperties"],[1304,"impl-Flags-for-MetadataFlags"],[1305,"impl-MetadataFlags"],[1368,"impl-Metadata%3CT%3E"],[1369,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1394,"impl-UpperHex-for-MetadataProperties"],[1395,"impl-LowerHex-for-MetadataProperties"],[1396,"impl-Debug-for-MetadataProperties"],[1397,"impl-Octal-for-MetadataProperties"],[1398,"impl-Binary-for-MetadataProperties"],[1399,"impl-LowerHex-for-MetadataFlags"],[1400,"impl-Debug-for-MetadataFlags"],[1401,"impl-UpperHex-for-MetadataFlags"],[1402,"impl-Octal-for-MetadataFlags"],[1403,"impl-Binary-for-MetadataFlags"],[1413,"impl-Flags-for-MetadataProperties"],[1414,"impl-MetadataProperties"],[1415,"impl-MetadataFlags"],[1416,"impl-Flags-for-MetadataFlags"],[1427,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1428,"impl-Metadata%3CT%3E"],[1471,"impl-Metadata%3CT%3E"],[1472,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1476,"impl-Metadata%3CT%3E"],[1477,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1554,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1555,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1590,"impl-ObjectArray%3CT%3E"],[1591,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1606,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1607,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1617,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1618,"impl-ObjectArray%3CT%3E"],[1619,"impl-ObjectArray%3CT%3E"],[1620,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1623,"impl-Array-for-ObjectArray%3CT%3E"],[1626,"impl-ObjectChunkedBuilder%3CT%3E"],[1627,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1629,"impl-ObjectChunkedBuilder%3CT%3E"],[1630,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2298,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2299,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2300,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2301,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2407,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2408,"impl-Logical%3CDurationType,+Int64Type%3E"],[2410,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2411,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2412,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2413,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2414,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2715,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2716,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2717,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2718,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2719,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2731,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2732,"impl-PartialEq-for-DataType"],[2741,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2742,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2743,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2744,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2745,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2746,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2785,"impl-Display-for-PlSmallStr"],[2786,"impl-Debug-for-PlSmallStr"],[2790,"impl-Debug-for-AnyValue%3C\'a%3E"],[2791,"impl-Display-for-AnyValue%3C\'_%3E"],[2793,"impl-Display-for-DataType"],[2794,"impl-Debug-for-DataType"],[2798,"impl-Display-for-ReshapeDimension"],[2799,"impl-Debug-for-ReshapeDimension"],[2800,"impl-Debug-for-TimeUnit"],[2801,"impl-Display-for-TimeUnit"],[2805,"impl-From%3C%26String%3E-for-PlSmallStr"],[2806,"impl-From%3C%26str%3E-for-PlSmallStr"],[2807,"impl-From%3CString%3E-for-PlSmallStr"],[2808,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2812,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2813,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2826,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2827,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2829,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2830,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2831,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2834,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2835,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2836,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2838,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2840,"impl-From%3C%26ArrowField%3E-for-Field"],[2865,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2867,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2874,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2875,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2876,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2877,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2878,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2879,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2880,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2881,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2901,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2902,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2903,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2904,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2905,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2908,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2909,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2910,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2911,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2912,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2950,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2951,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2952,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2953,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2954,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2955,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3068,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3069,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3070,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3071,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3072,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3122,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3123,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3124,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3125,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3126,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3127,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3163,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3164,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3165,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3166,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3167,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3168,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3169,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3170,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3179,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3180,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3181,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3182,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3183,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3184,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3187,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3188,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3210,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3211,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3217,"impl-Logical%3CDurationType,+Int64Type%3E"],[3218,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3225,"impl-Logical%3CTimeType,+Int64Type%3E"],[3226,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3227,"impl-Logical%3CDateType,+Int32Type%3E"],[3243,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3244,"impl-Logical%3CDurationType,+Int64Type%3E"],[3297,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3298,"impl-Logical%3CTimeType,+Int64Type%3E"],[3299,"impl-Logical%3CDateType,+Int32Type%3E"],[3305,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3306,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3631,"impl-Display-for-ErrString"],[3632,"impl-Debug-for-ErrString"],[3633,"impl-Debug-for-PolarsError"],[3634,"impl-Display-for-PolarsError"],[3638,"impl-From%3CError%3E-for-PolarsError"],[3639,"impl-From%3CError%3E-for-PolarsError"],[3640,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3641,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3642,"impl-From%3CError%3E-for-PolarsError"],[3644,"impl-From%3CParquetError%3E-for-PolarsError"],[3782,"impl-Debug-for-DataFrame"],[3783,"impl-Display-for-DataFrame"],[3789,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3790,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3816,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3817,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3818,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3819,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3820,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3821,"impl-Index%3C%26str%3E-for-DataFrame"],[3822,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3823,"impl-Index%3Cusize%3E-for-DataFrame"],[3842,"impl-DataFrame"],[3843,"impl-Container-for-DataFrame"],[3851,"impl-Container-for-DataFrame"],[3852,"impl-DataFrame"],[3896,"impl-DataFrame"],[3897,"impl-Container-for-DataFrame"],[3901,"impl-Container-for-DataFrame"],[3902,"impl-DataFrame"],[3925,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3926,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3968,"impl-Add%3CT%3E-for-%26Column"],[3969,"impl-Add%3CT%3E-for-Column"],[3970,"impl-Add-for-%26Column"],[3971,"impl-Add-for-Column"],[3995,"impl-Column"],[3996,"impl-BitAnd-for-%26Column"],[3997,"impl-BitAnd-for-Column"],[3998,"impl-BitOr-for-%26Column"],[3999,"impl-BitOr-for-Column"],[4000,"impl-BitXor-for-%26Column"],[4001,"impl-BitXor-for-Column"],[4029,"impl-Div-for-%26Column"],[4030,"impl-Div-for-Column"],[4031,"impl-Div%3CT%3E-for-%26Column"],[4032,"impl-Div%3CT%3E-for-Column"],[4057,"impl-From%3CSeries%3E-for-Column"],[4058,"impl-From%3CScalarColumn%3E-for-Column"],[4104,"impl-Mul-for-Column"],[4105,"impl-Mul-for-%26Column"],[4106,"impl-Mul%3CT%3E-for-Column"],[4107,"impl-Mul%3CT%3E-for-%26Column"],[4122,"impl-Rem-for-%26Column"],[4123,"impl-Rem-for-Column"],[4124,"impl-Rem%3CT%3E-for-Column"],[4125,"impl-Rem%3CT%3E-for-%26Column"],[4146,"impl-Sub-for-Column"],[4147,"impl-Sub%3CT%3E-for-%26Column"],[4148,"impl-Sub%3CT%3E-for-Column"],[4149,"impl-Sub-for-%26Column"],[4351,"impl-Display-for-GroupByMethod"],[4352,"impl-Debug-for-GroupByMethod"],[4359,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4360,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4393,"impl-IntoIterator-for-GroupsIdx"],[4394,"impl-IntoIterator-for-%26GroupsIdx"],[4396,"impl-IntoParallelIterator-for-GroupsIdx"],[4397,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5775,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5776,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5780,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5781,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5809,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5810,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5833,"impl-Flags-for-OptFlags"],[5834,"impl-OptFlags"],[6578,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6579,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6580,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6590,"impl-Default-for-Arc%3Cstr%3E"],[6591,"impl-Default-for-Arc%3CT%3E"],[6592,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6593,"impl-Default-for-Arc%3CCStr%3E"],[7086,"impl-Expr"],[7087,"impl-PartialEq-for-Expr"],[7091,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7092,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7111,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7112,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7113,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7118,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7119,"impl-PartialEq-for-StructArray"],[7405,"impl-Display-for-Duration"],[7406,"impl-Debug-for-Duration"],[7428,"impl-Debug-for-JoinType"],[7429,"impl-Display-for-JoinType"],[7430,"impl-Debug-for-JoinValidation"],[7431,"impl-Display-for-JoinValidation"],[7447,"impl-Debug-for-Expr"],[7448,"impl-Display-for-Expr"],[7451,"impl-Display-for-Operator"],[7452,"impl-Debug-for-Operator"],[7454,"impl-Debug-for-BooleanFunction"],[7455,"impl-Display-for-BooleanFunction"],[7456,"impl-Display-for-CategoricalFunction"],[7457,"impl-Debug-for-CategoricalFunction"],[7458,"impl-Debug-for-TemporalFunction"],[7459,"impl-Display-for-TemporalFunction"],[7460,"impl-Display-for-PowFunction"],[7461,"impl-Debug-for-PowFunction"],[7462,"impl-Display-for-StringFunction"],[7463,"impl-Debug-for-StringFunction"],[7465,"impl-Debug-for-StructFunction"],[7466,"impl-Display-for-StructFunction"],[7467,"impl-Display-for-FunctionExpr"],[7468,"impl-Debug-for-FunctionExpr"],[7481,"impl-Octal-for-OptFlags"],[7482,"impl-UpperHex-for-OptFlags"],[7483,"impl-Binary-for-OptFlags"],[7484,"impl-LowerHex-for-OptFlags"],[7485,"impl-Debug-for-OptFlags"],[7488,"impl-Pointer-for-Arc%3CT,+A%3E"],[7489,"impl-Display-for-Arc%3CT,+A%3E"],[7490,"impl-Debug-for-Arc%3CT,+A%3E"],[7522,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7523,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7602,"impl-From%3Cbool%3E-for-Expr"],[7603,"impl-From%3Cf32%3E-for-Expr"],[7604,"impl-From%3Cu16%3E-for-Expr"],[7605,"impl-From%3Ci8%3E-for-Expr"],[7606,"impl-From%3Cu8%3E-for-Expr"],[7607,"impl-From%3C%26str%3E-for-Expr"],[7608,"impl-From%3Ci32%3E-for-Expr"],[7609,"impl-From%3Cu32%3E-for-Expr"],[7610,"impl-From%3Cu64%3E-for-Expr"],[7611,"impl-From%3Ci16%3E-for-Expr"],[7612,"impl-From%3Ci64%3E-for-Expr"],[7613,"impl-From%3Cf64%3E-for-Expr"],[7615,"impl-From%3CAggExpr%3E-for-Expr"],[7620,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7622,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7623,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7624,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7625,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7626,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7627,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7628,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7629,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7630,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7639,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7640,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7642,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7643,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7655,"impl-From%3CExpr%3E-for-Selector"],[7657,"impl-From%3CPlSmallStr%3E-for-Selector"],[7658,"impl-From%3CString%3E-for-Selector"],[7659,"impl-From%3C%26str%3E-for-Selector"],[7664,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7665,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7666,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7667,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7670,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7671,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7672,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7673,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7674,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7675,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7676,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7677,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7678,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7679,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7680,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7681,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7688,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7689,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7690,"impl-From%3Ci8%3E-for-Scalar"],[7692,"impl-From%3Cu8%3E-for-Scalar"],[7693,"impl-From%3Cu64%3E-for-Scalar"],[7694,"impl-From%3Cu16%3E-for-Scalar"],[7695,"impl-From%3Cf64%3E-for-Scalar"],[7696,"impl-From%3Ci32%3E-for-Scalar"],[7697,"impl-From%3Cu32%3E-for-Scalar"],[7698,"impl-From%3Ci16%3E-for-Scalar"],[7699,"impl-From%3Ci64%3E-for-Scalar"],[7700,"impl-From%3Cf32%3E-for-Scalar"],[7709,"impl-Flags-for-OptFlags"],[7710,"impl-OptFlags"],[7715,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7716,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7724,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7725,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7738,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7739,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8861,"impl-StructArray"],[8862,"impl-Array-for-StructArray"],[8868,"impl-Array-for-StructArray"],[8869,"impl-StructArray"],[9139,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9140,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9144,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9145,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9603,"impl-StructArray"],[9604,"impl-Array-for-StructArray"],[9860,"impl-LazyFileListReader-for-LazyCsvReader"],[9861,"impl-LazyCsvReader"],[9862,"impl-LazyJsonLineReader"],[9863,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9904,"impl-LazyFileListReader-for-LazyCsvReader"],[9905,"impl-LazyCsvReader"],[9906,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9907,"impl-LazyJsonLineReader"],[9949,"impl-Array-for-StructArray"],[9950,"impl-StructArray"],[10442,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10443,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10448,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10449,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11164,"impl-Display-for-RollingFunction"],[11165,"impl-Debug-for-RollingFunction"],[11195,"impl-Debug-for-RollingFunctionBy"],[11196,"impl-Display-for-RollingFunctionBy"],[11420,"impl-Add-for-%26Series"],[11421,"impl-Add-for-Series"],[11422,"impl-Add%3CT%3E-for-Series"],[11423,"impl-Add%3CT%3E-for-%26Series"],[11440,"impl-AsSeries-for-Series"],[11441,"impl-SeriesSealed-for-Series"],[11494,"impl-Div%3CT%3E-for-Series"],[11495,"impl-Div-for-Series"],[11496,"impl-Div-for-%26Series"],[11497,"impl-Div%3CT%3E-for-%26Series"],[11508,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11509,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11510,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11512,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11513,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11514,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11531,"impl-Debug-for-Series"],[11532,"impl-Display-for-Series"],[11537,"impl-From%3C_SerdeSeries%3E-for-Series"],[11538,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11539,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11540,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11541,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11542,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11549,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11550,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11551,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11552,"impl-FromIterator%3Cu8%3E-for-Series"],[11553,"impl-FromIterator%3C%26u8%3E-for-Series"],[11554,"impl-FromIterator%3CString%3E-for-Series"],[11555,"impl-FromIterator%3C%26str%3E-for-Series"],[11556,"impl-FromIterator%3Cu64%3E-for-Series"],[11557,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11558,"impl-FromIterator%3C%26bool%3E-for-Series"],[11559,"impl-FromIterator%3Cbool%3E-for-Series"],[11560,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11561,"impl-FromIterator%3C%26f64%3E-for-Series"],[11562,"impl-FromIterator%3Cu16%3E-for-Series"],[11563,"impl-FromIterator%3Cf64%3E-for-Series"],[11564,"impl-FromIterator%3C%26u16%3E-for-Series"],[11565,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11566,"impl-FromIterator%3C%26u64%3E-for-Series"],[11567,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11568,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11569,"impl-FromIterator%3Cu32%3E-for-Series"],[11570,"impl-FromIterator%3C%26u32%3E-for-Series"],[11571,"impl-FromIterator%3Ci8%3E-for-Series"],[11572,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11573,"impl-FromIterator%3C%26f32%3E-for-Series"],[11574,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11575,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11576,"impl-FromIterator%3C%26i64%3E-for-Series"],[11577,"impl-FromIterator%3Ci64%3E-for-Series"],[11578,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11579,"impl-FromIterator%3C%26i32%3E-for-Series"],[11580,"impl-FromIterator%3Ci32%3E-for-Series"],[11581,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11582,"impl-FromIterator%3C%26i16%3E-for-Series"],[11583,"impl-FromIterator%3Ci16%3E-for-Series"],[11584,"impl-FromIterator%3C%26i8%3E-for-Series"],[11585,"impl-FromIterator%3Cf32%3E-for-Series"],[11586,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11587,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11588,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11589,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11590,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11591,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11592,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11593,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11594,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11595,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11596,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11607,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11608,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11609,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11610,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11611,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11612,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11654,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11655,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11656,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11657,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11658,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11659,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11668,"impl-Mul%3CT%3E-for-Series"],[11669,"impl-Mul%3CT%3E-for-%26Series"],[11670,"impl-Mul-for-%26Series"],[11671,"impl-Mul-for-Series"],[11676,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11677,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11678,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11679,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11680,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11681,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11682,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11683,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11684,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11685,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11686,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11687,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11688,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11689,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11690,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11691,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11692,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11693,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11694,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11695,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11696,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11697,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11698,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11699,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11700,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11701,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11702,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11703,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11704,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11705,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11706,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11707,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11708,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11709,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11710,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11711,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11712,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11713,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11714,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11715,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11716,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11717,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11718,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11719,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11720,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11721,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11722,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11723,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11724,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11725,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11726,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11727,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11728,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11734,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11735,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11736,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11738,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11739,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11740,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11749,"impl-Rem-for-%26Series"],[11750,"impl-Rem%3CT%3E-for-Series"],[11751,"impl-Rem%3CT%3E-for-%26Series"],[11780,"impl-Sub%3CT%3E-for-Series"],[11781,"impl-Sub%3CT%3E-for-%26Series"],[11782,"impl-Sub-for-%26Series"],[11783,"impl-Sub-for-Series"],[11818,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11819,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11820,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11821,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAALAQ+xA2ETkROhE7ETwRPRFCEUURShFLEXER","e":"OzAAAAEAAIcijgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAHAGEAAgBlAAUAbgAGAHYAFQCNAAAAjwAAAJEAEQCmAAMAqwACALIADQDBABUA2QAIAOMACgDvAAAA8QABAPUAHQAZARUAMQETAEYBBgBOAQ4AXwEBAGMBAQBmARoAgwECAIsBEQCeAQMApQECAKoBAgCuAQcAuwEdAN4BBgDnAQgA8QE1ACoCFQBBAgIARQIEAEsCBQBVAgEAWAIaAHQCBwCAAhEAlAIQAKYCAACoAgwAtgIOAMgCAgDMAgAAzwIAANMCAQDaAgAA3gIHAOgCAgDsAg0A+wIAAP0CKAAoAwIALAMjAFMDNQCLAwgAmAMRAK0DXAAXBBIANQQHAD4ESQCLBA4AmwQBAJ4EGQC5BAAAvAQOAM4EAgDUBAIA2QQcAPcECQACBQoAFwUAABkFAAAfBQ0ALgUPAEIFEgBXBQAAWQUJAGUFAwBrBQEAbwUNAIYFAACJBQAAkAUHAJkFBwCuBQEAsgUAALUFAwC9BQUAxAUEANAFCwDjBQQA6gUNAPoFBgAEBgcADQYBABEGFgApBggAMwYAADYGAAA4BgIAPgYQAFAGAABSBgAAVAYCAFgGAgBcBgEAXwYIAGkGAABrBgUAcwYBAHYGAAB4BgEAewYDAIAGAwCFBgIAiQYDAI8GAACSBgAAmwYAAKAGAACjBgEAqAYBAKsGAACuBgEAtwYAAL0GAwDJBgYA0wYQAOYGBQDuBggA+QYDAP4GAAAABwAAAgcAAAQHAQAKBwUAEwcCAB0HAQApBwAAKwcBAC4HAAAxBwAAMwcAADcHAAA5BwAAPgcMAE0HAgBcBwAAXgcHAGcHAQBqBwAAbgcAAHAHAwB1BwEAeAcFAIQHFgCcBwEAoAcEAKYHAwCtBwcAwgcDAMcHCADRBwQA2AcCANwHBQDkBwAA5gcOAPkHAQD9BwAA/wcAAAQIAQAHCAAACQgAAAsIBgATCAAAFQgAABgIAQAcCAAAHggBACEIAAAjCAIAJwgNADYIAAA4CAEAOwgAAD0IAQBACAAAQggBAEUIAABHCAEASggDAFEIAABVCAEAWQgAAFwIAABeCAAAYAgDAGUIAABoCAgAcggCAHcIAwB8CAAAfggCAIMIAACFCAIAiQgBAI8IAwCUCAEAlwgAAJkIAQCcCAAAnggBAKEIAACjCAEApggAAKgIAQCrCAAArQgAALAIJwDZCBgA8wgDAPgIbgBqCYAA7AkJAPcJowCcCgUApAo5AN8KFQD2CgMA/QoBAAsLAQAOCwIAEwsCABcLAAAZCwAAHQsAADILAAA0CwAANgsAADsLBwBGCwAASQsCAE0LBQBUCwYAXAsFAGMLAABlCxwAhwsPAJkLLwDKCwAA+QsJAAQMAAAGDAAACAwCAAwMAwARDAEAFgwAABgMBwAhDAAAJAwCACkMAwAuDAAAMQwOAEIMAABFDA8AVgwAAFkMCwBmDBAAeAwCAHwMAAB+DA4AjgwAAJYMAACYDAEAngwRALIMAAC0DAMAugwjAOAMAQDlDGwAUw01AIoNAQCNDTsAyg0BAM0NCADXDQAA2Q0BANwNBADiDQEA5w0AAOkNAgDtDQoA+Q0AAPsNBAACDgQACA4EAA4OEgAiDhEANQ4AADcOBAA9DgQARQ4FAEwOGABoDgAAaw4LAHkOAwB+DgAAhA4VAJwODwCtDgAAtg4BALoOAgC+DgAAwA4AAMUOAwDXDgAA3g4AAOAOAADiDgEA6Q4MAPwOAgAEDwAABw8BAAwPAAATDwEAFg8AACMPAQAnDwAALg8AADcPAQA6DwEAPg8AAEAPAQBIDwAASg8EAFIPBgBbDwoAZw8AAGoPAQBvDwQAfA8AAH4PBgCQDwMAlg8BAJkPEACsDx0AzA8LANoPAQDdDwYA5w8JAPMPAwD4DwgAAhACAAcQDQAXEAsAJBAUADsQAAA+EAIAQhAjAGcQBwBwEA4AgBACAIQQCgCQEAEAkxADAJgQAwCdEAkAqBAHALEQAQC0EBwA0hAoAPwQBgAIEQIADhEDABQRAAAYEQcAKBENADcRAQA+EQMAQxEBAEcRAgBMEQAAThEgAHIRDACBEQUAiBEHAJERIwC3EQ4AxxEPANkRAADbEQMA4hEGAOwRDgD9EQYABhIAAAkSCQAUEgEAGBIEAB4SBQAlEgAAKhIJADUSAQA5EgQAPxIBAEISCgBOEgAAURIAAFMSCQBeEgIAZhIJAHESBQB7EgAAfhIAAIcSAgCOEgAAkRIBAJcSCAChEgAAoxIAAKUSAACnEhEAvBIHAMUSAQDIEgUA0hIEANoSAgDeEgEA5RIFAOwSAQDvEgkA+hIAAP0SAwACEwYACxMCABATAAATEwAAFRMCABoTAgAeEwUAJRMEACsTAwAyEwIAOBMAADoTAQA+EwAAQBMEAEcTDwBYEwAAWxMBAF4TAwBkEwQAbBMkAJMTAACVEwEAmRMAAJsTAQCfEwAAoRMBAKUTAACnEwUAsBMCALUTAAC4EwAAuxMAAL0TAgDBEwIAxRMLANMTBwDcEwAA3hMAAOITAQDmEwAA6BMAAOoTAQDtEwEA8BMBAPUTAQD4EwwACBQFAA8UBwAZFAIAHRQIACoUAQAtFAAALxQBADIUBAA4FAMAPRQCAEEUAABDFAQASRQAAEsUBgBTFAQAWRQBAFwUAQBfFAEAYhQBAGUUAABnFAAAahQAAGwUAgBxFAMAdhQHAIAUAgCHFAEAihQGAJIUAwCYFAAAmhQAAJ0UAACfFAMApBQCAKgUAACqFAIArhQAALAUBwC5FAcAwxQTANgUAgDcFBUA9RQBAPgUDwAKFQAADBUCABEVDAAfFQAAIRUCACYVAQAqFQEALxUIADkVAwBBFQYASRUJAFUVAwBaFQgAZBUAAGYVAgBrFQIAchUFAHkVEgCOFQAAkBUBAJQVAACWFQEAmhUAAJwVAQCgFQAAohUEAKkVAwCuFQEAsRUBALcVCgDDFQAAxhUGAM8VAgDTFWEANxYGAEMWAABFFgAASBYGAFEWAABYFgAAWhYAAF4WAABhFgAAZhYFAHAWAAB0FgAAexYAAH8WAACLFgIAjxYIAJkWAACbFgEAnhYCAKUWAQCoFgQArhYBALYWCgDDFgAAxRYAAMgWAADKFgAAzBYAAM4WAADQFv0AzxcCANMXAQDWFwAA2BcCAN4XAADiFwAA5hcAAOgXAADqFwAA8BcAAPIXAQD1FwAA/xdSAFMYCwBgGL8AIRkBACcZAgAtGQIAMxkKAEIZBABIGQAAThkAAFAZAABaGQEAXhkAAGAZAABkGQAAZxkBAG0ZAQB/GQAAhBkCAIoZAACMGQUAlBkqAMMZCAHOGgAA0xoBANYaAwDdGgAA3xoDAOcaCADxGmcAWhsNAG0bAQByGwEAdRsAAHkbAAB7GwAAfRsCAIEbLQCwGxcAyRsOANsbswCTHAAAmhwAAJwcAQCfHAAAoRwAAKUcAACpHAAAqxwAAK8cAACyHAAAtRwAALwcAAC/HAIAxhwGAM4cAQDRHAAA0xwDANwcAADeHAAA4BwBAOUcbABWHQAAYx0BAIYdAACPHQAAlx0AALMdCwDAHQAAwx0AAMUdAADHHQgA1h0AANgdAQDbHQEA5B0AAOgdAADqHQIA8x0AAPUdAAAJHgIADR4IABweAAAeHgAAIR4AACQeAQAtHgEAMh4CADgeBQA/HgIAQx4BAEceAgBLHgAATR4AAE8eAABUHgAAWh4AAF0eAQBgHgMAZR4AAGceAQBtHgMAdB4BAHgeAACDHgAAhR5DAMweAwDUHgAA1h4AANgeBADfHgAA4R4AAOMeAQDmHgAA6R4BAO4eAADxHoIAdh8AAHsfAgB/HwEAAiABAAYgAAAIIAYAEiAFABkgAwAeIAIAIyAAACUgAQAoIAAAKiABAC4gAQA1IAAAPCAAAD4gAQBCIAIARiADAEwgAgBRIAAAUyAAAFogAQBdIAIAZyAAAGogAQBtIAIAcyACAHkgAQCBIAMAhyABAIsgAgCPIAMAlSAOAKkgAACvIAEAtiAAALkgBQDCIAAAyiADANggAADiIAAA6SAAAOsgAQDuIAAA8SAAAPYgAAD4IAAA+iAAAP8gAAADIQAABSECAAwhBgAZIQgAJyEAACkhAAAtIQAAMyEAADUhBAA+IQEAQSEBAEQhAABHIQgAUiEBAFUhAABYIQEAXCEAAGAhAABpIQAAbCEBAHMhAQB5IQEAfCEEAIchAgCPIQEAliECAJohBACoIQAAqiEEALAhBQC3IQAAvSEDAMIhAADEIQIAyiEAAMwhAADYIQAA2yEBAN4hAQDhIQMA5yEFAO4hBAD0IQAA+SEAAP8hAAAFIgEACyIAAA8iAAARIgAAEyIBADYiAAA7IgAAQyIDAEgiBABPIgEAWSIAAF0iBABjIgQAayIAAG0iAQBwIgAAciIAAHQiAQB4IgAAeiIAAHwiAwCDIgAAjCIAAI4iAACQIgAAliIDAJ8iAQCiIgAApCIBAKkiAACrIgAAsSICALUiAgC5IgcAwiIAAMQiAADIIgAAziIAANEiAADXIgAA2yIKAOgiAgDtIgAA8CICAPsiAQAMIwAADiMAABEjAgAVIwMAGiMCAB4jAAAhIwAAJSNhAIkjDgCbIwEAoCMMAK4jAACwIwEAsyORAEYkfgDIJAAAyiQDANUkAADYJA8A6SR9AGglAABwJQAAdSUAAHclAAB5JQAAfyUEAIUlAgCKJQEAjiUAAJIlAACYJQEAmyUAAJ0lfgAiJgMAKyYAAC4mAAAwJgAANCYBADgmAQA7JgAAQyYAAEcmAQBNJgAAUyYAAF0mAABkJgEAbyYDAHYmAQCFJgAAiCYAAIsmAACNJgAAlSYBAJgmAQCeJgAAqyYAALEmAACzJgAAtyYAAL4mAADDJgAAzyYAANImAQDVJgAA1yYBAN4mAADgJgEA5SYUAPsmAQACJwEABScNABQnBAAaJzAATScAAE8nAABRJwEAVCcBAFcnBgBfJz8AoScBAKQnCACvJwUAticJAMEnAQDEJwAAyCcAAMonAwDPJwEA0icFANwnEgDwJwEA8ycCAPgnAAD8JxYAFCgXADAoBAA5KBMATigGAGUoAABzKAIAiSgAAJAoCACdKAAAnygMAK0oAgCxKBIAxSgBAMgoDwDZKBkA9SgAAPcoAgD8KAoACCkBAAspBgATKQMAGCkCABwpAAAfKQYAJykEAC4pAgAyKQUAOikAADwpDgBPKQEAUykAAFUpAABaKQEAXSkAAF8pAABhKQQAZykAAGkpAABsKQEAcCkAAHIpAQB1KQAAdykCAHspDQCKKQAAjCkBAI8pAACRKQEAlCkAAJYpAQCZKQAAmykBAJ4pAwClKQAAqSkBAK0pAACwKQAAsikAALQpAwC5KQAAvCkIAMYpAgDLKQMA0CkAANIpAgDXKQAA2SkCAN0pAQDjKQMA6CkBAOspAADtKQEA8CkAAPIpAQD1KQAA9ykBAPopAAD8KQEA/ykAAAEqAAAEKhIAGCoHACIqAAAlKhEAOCoIAEIqAQBFKggATyoAAFEqAQBXKgEAWioEAGMqAQBsKgIAcioAAHQqAAB+KgAAjSoDAJUqCgChKgAAoyoIAK4q8ACgKwEAoysaAL8rAQDCKxAA1SsSAOkrAADrKxcABCwBAAgsAAAKLAsAFywCAB4sAAAuLAMANSwHAEosBQBSLAAAWywAAF0sAQBkLAYAbCwAAHIsCgCGLAUAjSwAAI8sAwCULAUAnSwEAKQsAQCoLAAAriwEALcsAgC7LAoAySwCAM0sAADRLAIA1SwDAN0sEQDyLAEA9iwBAPksAAD7LAAA/iwCAAstAwASLQUAGy0BAB4tMABSLQAAVC0AAFgtAABaLQAAXC0BAF8tAABlLQEAaC0DAHAtBAB8LQIAgC0AAIMtAACGLQIAiy0BAJAtAACVLQMAmi0AAJ0tBQCkLS0A1C0BANctAQDcLQEA4C0AAOItAADmLQIA6y0BAO4tAADxLQIA9y0BAPotAAD8LQAA/i0AAAIuAAAFLgMADi4AABYuAAAYLgEAGy4BACguBwA0LgQAOi4BAEAuAABCLgAARy4DAFEuAABULgMAWS4AAF0uCwBqLgAAbC4AAG4uBAB0LhYAjS4BAJEuDwCiLgEApS4EAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPKKKPFPPIIGKEEEPIIIPPEPEEEKEEPPPKKPEPGPPIFEKPPPFGEEIEPKGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[446,"polars_core::chunked_array::arithmetic"],[474,"polars_core::chunked_array::builder"],[582,"polars_core::chunked_array::builder::list"],[736,"polars_core::chunked_array::cast"],[764,"polars_core::chunked_array::collect"],[778,"polars_core::chunked_array::float"],[780,"polars_core::chunked_array::from_iterator_par"],[784,"polars_core::chunked_array::iterator"],[821,"polars_core::chunked_array::iterator::par"],[823,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1366,"polars_core::chunked_array::ops::arity"],[1402,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1404,"polars_core::chunked_array::ops::gather"],[1407,"polars_core::chunked_array::ops::search_sorted"],[1436,"polars_core::chunked_array::ops::sort"],[1443,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1444,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1452,"polars_core::chunked_array::ops::sort::options"],[1527,"polars_core::chunked_array::temporal"],[1528,"polars_core::chunked_array::temporal::conversion"],[1531,"polars_core::config"],[1535,"polars_core::datatypes"],[3046,"polars_core::datatypes::categorical"],[3188,"polars_core::datatypes::categorical::revmap"],[3242,"polars_core::datatypes::categorical::string_cache"],[3261,"polars_core::datatypes::enum_"],[3279,"polars_core::datatypes::revmap"],[3285,"polars_core::datatypes::string_cache"],[3289,"polars_core::error"],[3356,"polars_core::error::PolarsError"],[3360,"polars_core::error::constants"],[3363,"polars_core::export"],[3370,"polars_core::fmt"],[3401,"polars_core::frame"],[3685,"polars_core::frame::column"],[3919,"polars_core::frame::explode"],[3947,"polars_core::frame::group_by"],[4183,"polars_core::frame::group_by::GroupByMethod"],[4184,"polars_core::frame::group_by::GroupsProxy"],[4186,"polars_core::frame::group_by::aggregations"],[4199,"polars_core::frame::group_by::expr"],[4202,"polars_core::frame::row"],[4298,"polars_core::functions"],[4300,"polars_core::hashing"],[4330,"polars_core::prelude"],[4953,"polars_core::prelude::PolarsError"],[4957,"polars_core::prelude::default_arrays"],[4963,"polars_core::prelude::list"],[4986,"polars_core::prelude::null"],[5017,"polars_core::prelude::revmap"],[5023,"polars_core::prelude::slice"],[5026,"polars_core::prelude::string_cache"],[5030,"polars_core::prelude::utf8"],[5034,"polars_core::random"],[5035,"polars_core::scalar"],[5075,"polars_core::scalar::reduce"],[5076,"polars_core::schema"],[5098,"polars_core::series"],[5547,"polars_core::series::amortized_iter"],[5571,"polars_core::series::arithmetic"],[5596,"polars_core::series::arithmetic::checked"],[5604,"polars_core::series::ops"],[5630,"polars_core::utils"],[5838,"polars_core::utils::flatten"],[5843,"dyn_clone::sealed"],[5844,"num_traits"],[5845,"num_traits::cast"],[5846,"polars_error"],[5847,"polars_core::series::arithmetic::borrowed"],[5848,"polars_core::frame::group_by::proxy"],[5849,"core::option"],[5850,"core::iter::traits::iterator"],[5851,"polars_utils::pl_str"],[5852,"core::ops::function"],[5853,"core::marker"],[5854,"alloc::string"],[5855,"polars_core::datatypes::dtype"],[5856,"polars_arrow::array::binview::view"],[5857,"polars_core::datatypes::aliases"],[5858,"polars_core::chunked_array::metadata::md_trait"],[5859,"alloc::boxed"],[5860,"polars_core::series::arithmetic::borrowed::checked"],[5861,"polars_arrow::array"],[5862,"alloc::vec"],[5863,"compact_str"],[5864,"core::iter::traits::double_ended"],[5865,"core::fmt"],[5866,"core::iter::traits::collect"],[5867,"polars_arrow::bitmap::immutable"],[5868,"rayon::iter"],[5869,"polars_arrow::trusted_len"],[5870,"polars_core::datatypes::any_value"],[5871,"polars_utils::index"],[5872,"std::sync::rwlock"],[5873,"polars_core::chunked_array::logical::decimal"],[5874,"core::iter::traits::exact_size"],[5875,"polars_core::series::series_trait"],[5876,"core::slice::iter"],[5877,"core::iter::adapters::map"],[5878,"core::convert"],[5879,"polars_core::chunked_array::metadata::guard"],[5880,"polars_core::chunked_array::metadata::interior_mutable"],[5881,"alloc::sync"],[5882,"core::ops::range"],[5883,"polars_core::datatypes::field"],[5884,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5885,"polars_core::chunked_array::ops::rolling_window"],[5886,"polars_utils::aliases"],[5887,"polars_utils::hashing"],[5888,"ndarray::aliases"],[5889,"either"],[5890,"core::result"],[5891,"core::any"],[5892,"polars_core::chunked_array::arithmetic::numeric"],[5893,"polars_core::chunked_array::builder::string"],[5894,"polars_arrow::array::binview"],[5895,"polars_core::chunked_array::builder::boolean"],[5896,"polars_core::chunked_array::builder::null"],[5897,"polars_core::chunked_array::builder::primitive"],[5898,"core::clone"],[5899,"polars_core::chunked_array::builder::list::anonymous"],[5900,"polars_core::chunked_array::builder::list::boolean"],[5901,"polars_core::chunked_array::builder::list::primitive"],[5902,"polars_core::chunked_array::builder::list::binary"],[5903,"polars_core::chunked_array::builder::list::null"],[5904,"core::hash"],[5905,"polars_arrow::array::boolean"],[5906,"polars_core::chunked_array::metadata::env"],[5907,"polars_core::chunked_array::metadata::collect"],[5908,"bitflags::iter"],[5909,"std::fs"],[5910,"std::sync::mutex"],[5911,"polars_arrow::datatypes"],[5912,"polars_arrow::bitmap::utils::iterator"],[5913,"polars_arrow::bitmap::utils::zip_validity"],[5914,"polars_arrow::offset"],[5915,"polars_arrow::array::static_array"],[5916,"core::error"],[5917,"polars_arrow::array::primitive"],[5918,"polars_arrow::legacy::array::slice"],[5919,"polars_row::row"],[5920,"polars_arrow::array::binary"],[5921,"chrono::naive::datetime"],[5922,"alloc::borrow"],[5923,"polars_arrow::array::static_array_collect"],[5924,"bytemuck::zeroable"],[5925,"polars_core::chunked_array::logical::categorical"],[5926,"polars_core::chunked_array::logical::categorical::merge"],[5927,"polars_core::chunked_array::logical"],[5928,"polars_core::datatypes::reshape"],[5929,"polars_core::datatypes::time_unit"],[5930,"core::cmp"],[5931,"polars_arrow::datatypes::physical_type"],[5932,"polars_arrow::types"],[5933,"core::borrow"],[5934,"polars_arrow::pushable"],[5935,"polars_core::datatypes::into_scalar"],[5936,"polars_core::chunked_array::logical::categorical::builder"],[5937,"polars_core::chunked_array::logical::categorical::revmap"],[5938,"polars_core::chunked_array::logical::categorical::string_cache"],[5939,"polars_core::chunked_array::logical::enum_"],[5940,"polars_error::warning"],[5941,"polars_arrow::datatypes::schema"],[5942,"polars_core::series::from"],[5943,"polars_core::chunked_array::ndarray"],[5944,"polars_arrow::array::struct_"],[5945,"polars_arrow::record_batch"],[5946,"polars_core::frame::column::scalar"],[5947,"polars_core::series::iterator"],[5948,"polars_utils::idx_vec"],[5949,"rayon::iter::plumbing"],[5950,"polars_core::frame::group_by::into_groups"],[5951,"core::iter::adapters::copied"],[5952,"core::iter::adapters::zip"],[5953,"polars_arrow::legacy::kernels::rolling"],[5954,"polars_utils::float"],[5955,"polars_arrow::types::native"],[5956,"polars_core::frame::group_by::aggregations::agg_list"],[5957,"polars_core::frame::row::av_buffer"],[5958,"polars_core::hashing::identity"],[5959,"polars_core::hashing::vector_hasher"],[5960,"core::alloc"],[5961,"std::os::fd::owned"],[5962,"std::os::fd::raw"],[5963,"std::path"],[5964,"std::ffi::os_str"],[5965,"core::mem::maybe_uninit"],[5966,"polars_arrow::legacy::kernels::time"],[5967,"core::ffi::c_str"],[5968,"core::default"],[5969,"polars_arrow::scalar"],[5970,"std::io::error"],[5971,"alloc::collections"],[5972,"simdutf8::basic"],[5973,"regex::error"],[5974,"alloc::ffi::c_str"],[5975,"polars_arrow::legacy::array::default_arrays"],[5976,"polars_arrow::buffer::immutable"],[5977,"polars_arrow::array::list"],[5978,"polars_core::named_from"],[5979,"polars_core::chunked_array::ops::aggregate"],[5980,"polars_core::chunked_array::ops::aggregate::quantile"],[5981,"polars_arrow::legacy::index"],[5982,"core::pin"],[5983,"core::io::borrowed_buf"],[5984,"std::io"],[5985,"polars_core::chunked_array::ops::aggregate::var"],[5986,"alloc::collections::btree::map"],[5987,"polars_arrow::legacy::array::list"],[5988,"polars_arrow::legacy::array::null"],[5989,"polars_arrow::bitmap::mutable"],[5990,"polars_arrow::array::utf8"],[5991,"polars_schema::schema"],[5992,"alloc::rc"],[5993,"polars_core::utils::supertype"],[5994,"polars_arrow::legacy::utils"],[5995,"polars_arrow::legacy::trusted_len::rev"],[5996,"core::iter::sources::repeat"],[5997,"core::iter::adapters::take"],[5998,"polars_core::chunked_array::object::extension"],[5999,"polars_error::constants"],[6000,"polars_core::frame::horizontal"],[6001,"polars_arrow::legacy::prelude"],[6002,"polars_arrow::legacy::array"],[6003,"polars_arrow::legacy::array::utf8"],[6004,"polars_core::utils::any_value"],[6005,"polars_core::utils::schema"],[6006,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kl000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`000000000000000000000000000000001000010000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``0000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fd00000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGb0Ib`3Lb22````````42110Ld4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541F`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf000000000000000000000````AEj00AEl0000000```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CE`4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHnAI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ``````````````````````````````````````AJl00`0`00000000000000000`00000`````AJn0````````````EdEj1010101010101010101010110010110010101010101010221010101010101010010010````````AMl`C```````HnDnADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEbCEd````ANb``8``654``654``654``654``4`777444BCf765``4``5AOlANd1010A`:98`:9`:``;3;```````````B@j``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMjAN`<9ANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlE`JdGf0D`00El00HnjJbMfLjLlM`CnClDjDdAnE`?>=AEhGf0220020D`El344AKnAL`43243232664325643253432AKf54305436ALb0ALd06HnDnMjALfAJb><<<<<<AMhCEfBnjJbIdAMj;AMl;AMn;AN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhCEfBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlDn`AMf0Hn2E`GfD`ElAKf6Jd54321`JbMfLjLlM`CnClAMhAMj?AMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAN`MjB@`0002Dn00`HnAMl27AMh0CEfBnjJbIdAMj879AMn<=ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMh0CEfBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlJdjJbMfLjLlM`CnClAMhCEfBn:9IdAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlDn0AMn3AN`ANbANd;:7E`GfD`0El0321100;;998877::665544??>>3AMh3121AEhAMd6431AMj??=<<;>:9988ADjAOl95CEfBnjJbId7Hn00000AMlDn000AMnMj00AN`ANbANd0ANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADj00AOlDnE`00GfD`0El0AEh32104432211AKf01432154433225432143214AJb00654312065431260AN`ANbJdAMf0:98756100:98756:C`jJbIdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjE`AEh0ANb0HnBAfAJb5D`AKf7Gf2El2813300133006AMlDnMj:ANdADjAOl<<4AMhCEfBnjJbIdAMjHn=<AMn<AN`ANb=ANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlE`Dn3AMhCEfBnjJbIdAMjHnAMl9AMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhBAh0E`GfD`ElAKfAEhBAjJd8HnDn0010000101000010=1010100001000010=AJb:019887798877``1AMl::98:AKnAL`10`<<;:<6jJbMfLjLlM`CnClD`ElMj0CEbCEdBBn55554444AEh04AN`ANb02E`Gf:9AKf555AMhAMn3343==<<43==<<404=4=Hn7ANd3Jd4AKnAL`108jJbMfLjLlM`CnClE`GfD`ElAKfAEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbMfLjLlM`CnClGf0ElD`011Dn?ANd102ADjE`10AMhAMjHnAMl7AMnMjAN`ANb:ANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlDn2JdAMhHn3ANbANdEl3E`0ALb0ALd0B@`00078CEfBnjJbIdAMj=AMlDnAMnMjAN`0ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlAMhCEfBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlHnDn10ANbANdE`AMhCEfBnjJbIdAMj;AMl;AMnMjAN`=<ANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOl1GfD`ElAEhAJb0Dn1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AKf>Gf:98765432<;D`El3AEhAMhCEfBnjJbIdAMjHnAMlDnAMnMjAN`ANbANdANfANhMfLjANjANlLlM`CnClANnAO`DjDdAObAnAOdAOfAOhAOjADjAOlCEbCEdBBnEfAJbHnE``````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd3132144444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CEhCEj10```````````BDh0000000000`0`````00`````00000BEb`0BE`11``0``01BCl00000000000000000000BFfBFh3421034222342342342`22421034210342222103422222222224222442`2222223422103422222222222222222`222422222222222222103422103421022222222222222222222221022222222222222222`222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Eh`0BGh111111111111111111101110111111111110101010101110101011101011111101101111111111111101011101111111111011111110101BDn12221222222221122222222221212122222222222221221222122222222122222221222212212222222212222221222222212222222122122222`BGn00000000000000000000000000`BHd0``0``````BHlAl`2`22222222210`222BH`1BEj40`1023BIfBHhBHf4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BI`04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CElCEn0``````````BJbBJd0`BJf0BJhBJj``101010101010`10101010BEh211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BJl000000000000BJn000111111`````````BGb````````````AKj00`0Bh0BO`Ah4```BCd`N`5```````5```3BCf`1``````211``1`6`4BLf````471``````BIl``61`````88`88``8``8`8``0``7OfBL`LfNb=B@l85BLbBLd84444>>>>4>44?>>6544=3BGb3;8219AKjBh987BO`736>;54<`87BKn02;:9847?<65=2;:9847?<65=2;:9847?<65=29B@`0003:44``7::3::::958N``544=<;;3:690>87?54=<;3:690>87?;`;;;54=<;;3:690>87?994=;;;:690>87?44==;;669900??<AMd<6655>=<<<;7:1?98BLf<7777766666??>==================5<8;2BIl;:1BNfBNjBNl::::::::LfCF`0000111<<;<BOb222Fl3>3BGbB@l<:Of66`AKjBh2BL`9BO`Nb76N`BIlBLbBLdBLf:7198:7Lf76=<543210000098;<0;0BEf1`1``1BOl0BOn?911?3C@`C@b5B@l66666666666`Of?Bh888````:6688588888`8`AJn09C@nBL``;994340;NbBGb7N`BIlBLbBLdBLfAKj;LfB@`0002=>:11BO`:9B@l987654?Of=42<;1:9876C@`555555556Bh66702?64>=3<;:986`C@n813BL`86NbBGb7N`BIlBLbBLdBLf?66<AKjLf;;;0CEhCEj10```BNfBNjBNl`CAh000000000000000000000`CAl00000000000000000000000000000`BCdBCf10``AJn0``````CFbCFd``L`000000000000000000000000000000`0000000`CBn0`````BDlCBj1010121010101Jn0``00```BGj11````01AfBOh0111111`0010000`10001001001110000001CCb3420342111222211221211224214242222034220342222220342111142222222224422222211211142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFj3223333220033332223223333333322223222232233332232223333333333333333333333333333333333333323133333332`223322233323325223333222331233222322223333333322332222333533333333333145333333333314533333333333331453333322322222145333223``Ch000000000000000000000```CCf0CChAj0`2100210021002100``BKnFf0100CCj0`00000000000000000000000CCl0``````````0CCnCDb```````211````22222222CDjAK`43210432CD`543543543``CDd06``6653322654322654632654``636533665565`6666653265546666226CDh337333````4764376577743765375BFn6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dh{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dj}}}}}El}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEn{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fb{F`}}}C`}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}Fd}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Ff}{{{f{{l{c}}}}e}{{Ah{Af}}}FfAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}C`}{{{f{{l{c}}}}}FjC`}{{{f{{l{c}}}}}{{f{{Fn{Fl}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fn{Fl}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fG`}{{{f{{l{c}}}}}{{Ah{{f{Dh}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gb}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gb}bC`C`}{{{f{{l{c}}}}}{{`{{Gd{}{{Bb{{f{Dh}}}}}}}}}A`}{{}{{l{c}}}C`}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bC`}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gf}}}{{Ah{{l{c}}}}}{{C`{}{{Gh{Bn}}{Gj{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}`{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}{c{{l{e}}}H`{{C`{}{{Hb{c}}}}}}1{{Bhc}{{l{e}}}Hd{{C`{}{{Hb{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Hb{}}}}C`}Hd}{{Bh{Fn{Fl}}}{{l{c}}}C`}{{Bh{Fn{Fl}}Dn}{{l{c}}}C`}{c{{l{e}}}{{Hd{}{{Bb{{Hh{Fn{B`{Hf}}}}}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}21{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dh}}}{{l{c}}}A`}{{Bh{f{{Dh{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhFn}{{l{c}}}A`}{{BhFn{B`{Hf}}}{{l{c}}}A`}{{BhFh}{{l{c}}}A`}0{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{BhFh{f{Dn}}}E`}{{{f{{l{c}}}}Fh}B`C`}{{{f{{l{c}}}}Fh}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fh}HnA`}{{{f{{l{j}}}}Fh}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}IbC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{Id{c}}}}}}Fh}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FhdFh}AlEn}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}018{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{}Fh}0{{FhIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}C`}{{}c{}}0{{}Eh}{{{l{Jb}}{B`{Fh}}Fh}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fh}}Fh}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GdHl}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}GfJl}000{{{f{{l{c}}}}}GfC`}02{{{f{{l{c}}}}}JnC`}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{l{c}}}}}{{Kh{{Kd{Fl}}{Kf{{f{Fl}}}{{Cb{{B`{{f{Hf}}}}}}}}}}}C`}`{{fc}G`{{Kj{Dl}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}{{{f{{l{c}}}}}{{Kl{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{c}}}}}FhC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}01{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}En}{{{f{{l{c}}}}}L`En}{{{f{Bj{l{c}}}}{In{c}}}bC`}`{{{f{{l{c}}}}}{{Lb{c}}}C`}{{{f{{l{c}}}}}{{f{{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Lh{F`}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{Lf{{Ld{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{Dh}}}{{l{c}}}A`}{{Bh{f{{Dh{Df}}}}FhFh}{{l{An}}}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FhC`}{{{f{{l{c}}}}}{{Ah{Fh}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bhc}{{l{Lj}}}{{Kj{{Dh{{B`{Il}}}}}}}}{{Bhc}{{l{Ll}}}{{Kj{{Dh{Ln}}}}}}{{Bhc}{{l{Lj}}}{{Kj{{Dh{Il}}}}}}{{Bhc}{{l{M`}}}{{Kj{{Dh{Kb}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{d}}}}}}{{Bh{Md{Mb}}}{{l{Mf}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{Mh}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{Ij}}}}}}{{Bh{Md{Il}}}{{l{Lj}}}}{{Bhc}{{l{Mf}}}{{Kj{{Dh{Mb}}}}}}{{Bh{Md{Ln}}}{{l{Ll}}}}{{Bh{Md{Kb}}}{{l{M`}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{n}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{{B`{Mh}}}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{Fn{Df}}}}}}}}{{Bhc}{{l{M`}}}{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}{{l{Ll}}}{{Kj{{Dh{{B`{Ln}}}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{Db}}}}}}{{Bhc}{{l{Mf}}}{{Kj{{Dh{{B`{Mb}}}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{{B`{d}}}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FhFh}{{l{c}}}A`}{{Bh{Fn{c}}}{{l{{Id{c}}}}}Ih}{{Bh{Fn{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhFn}{{l{c}}}A`}{{{Lf{Mj}}{Fn{Fl}}I`I`}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}10{{{f{{l{c}}}}}FhC`}``{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{c}}}}}L`A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}En}{{{f{{l{c}}}}nN`}{{Ah{L`}}}En}{{BhFhn}{{Ah{{l{An}}}}}}{{BhFhnn}{{Ah{{l{c}}}}}A`}{{BhFh}{{l{c}}}A`}{{BhFhnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{B`{Hf}}}C`}{{{f{{l{c}}}}}{{f{Mj}}}C`}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fhe}{{Ah{{l{c}}}}}Jl{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Fhdd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Gf}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}I`}bC`}{{{f{Bj{l{c}}}}Jn}bC`}{{{f{{l{c}}}}Kb}{{l{c}}}A`}{{{f{{l{c}}}}KbB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}KbFh}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Kb}{{Hh{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kj{{Dh{I`}}}}Nd}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}{{Kj{{Dh{I`}}}}Nd}}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}}`{{{f{{l{c}}}}dNh}{{Fn{{Fn{Nj}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dj}}}}Fh}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{c}}}}}{{Ah{Nl}}}A`}{{{f{{l{j}}}}}{{Ah{Nn}}}}{fc{}}{{{f{{l{Dd}}}}}D`}{{{f{{l{c}}}}}{{Fn{B`}}}A`}{{{f{{l{c}}}}}{{O`{Fn{Fn{B`}}}}}A`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{Ob{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{C`{}{{Hb{c}}}}C`}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fh}{}C`}{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{}c{}}0{{Bhc}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{c}}}}{Fn{Fl}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}C`}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}3201{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}542310453276453210453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kj{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kj{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{Fhb}000{A@b{{l{c}}}C`}{{{A@d{Dl}}}D`}{{{A@d{{Dh{Df}}}}}El}{AA`D`}{AAbEl}{A@hGf}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dh{c}}}}}AAd{}}{{Bh{f{{Dh{{B`{c}}}}}}}AAd{}}{{}Fh}000{{}c{}}000`{{BhFh}{{A@d{c}}}{A@fNd}}{{BhFh}A@h}{{BhFh}A@j}{{BhFh}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dh}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dh}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dl}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dh{Df}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dl}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dh{Df}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fh{{f{c}}}{}}000000{Fh{{f{Bjc}}}{}}000000{Fhb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}E`}{{{f{BjAAh}}}E`}{{{f{BjABd}}}E`}{{{f{BjAAn}}}E`}{cc{}}000000{{{f{Dn}}FhFhBh}{{Ah{{Fb{AAn}}}}}}{{}Fh}000000{{{f{BjAB`}}}Fl}{{{f{BjABb}}}Fl}{{{f{BjAAj}}}Fl}{{{f{Bj{AAl{c}}}}}FlA`}{{{f{BjAAn}}}Fl}{{}c{}}000000{{BhFh{B`{Dn}}}AAf}{{BhFh{B`{Dn}}}AAh}{{BhFhFh}AB`}{{BhFhFh}ABb}{{BhFhFh}AAj}{{BhFh}ABd}{{BhFhFhDn}{{AAl{c}}}A`}{{BhFhFhDnDn}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Fd}}}Fd}{{f{f{Bjc}}}b{}}{fb}{{}Fd}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{Fd}}{f{Fd}}}d}{{f{f{c}}}d{}}0{{{f{Fd}}{f{BjGl}}}Gn}{cc{}}{{{f{Fd}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{Fd}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}C`}{{ABj{f{{l{c}}}}}{{l{c}}}C`}10{{ABjBhDn}{{l{c}}}C`}0{{ABhBh}{{Ob{{l{c}}e}}}C`{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}C`{}}10{{ABjBhDn}{{Ob{{l{c}}e}}}C`{}}0`{ABlABl}``{{ABnBhDn}e{}{{AC`{c}}}}{{eBhDn}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{cc{}}0{{}Fh}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gd{}}`{{{f{ACd}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fh{B`{Fh}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gb}{{}Ib}{{GbGb}Gb}{{IbIb}Ib}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}3210{{{f{Gb}}}Mb}0{{{f{Ib}}}Df}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Ld{c}}}}}{{Fb{F`}}}C`}{{{f{{Ld{c}}}}}{{Ld{c}}}C`}{{{f{{In{c}}}}}{{In{c}}}C`}{{{f{ACh}}}ACh}{{{f{Gb}}}Gb}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GbGb}{IbIb}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}{{Ld{c}}}C`}{{}{{In{c}}}C`}{{}Gb}{{}Ib}{Fh{{f{c}}}{}}{{{f{{Lb{c}}}}}{{f{e}}}C`{}}111111{Fh{{f{Bjc}}}{}}000000{{GbGb}Gb}{{IbIb}Ib}{{}d}{{{f{F`}}}{{B`{I`}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{In{c}}I`}{{In{c}}}C`}{{{In{c}}{B`{I`}}}{{In{c}}}C`}{Fhb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGb}}c}b{{Hd{}{{Bb{Gb}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}C`}{{{In{c}}{B`{d}}}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{e}}}C`C`}{{{In{c}}Ib}{{In{c}}}C`}{{{In{c}}{B`{Ib}}}{{In{c}}}C`}{{{f{{In{c}}}}{f{BjGl}}}GnC`}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gb}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Mb{{B`{Gb}}}}{Df{{B`{Ib}}}}{MbGb}0{DfIb}010{cGb{{Hd{}{{Bb{Gb}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dl}}}{{B`{Gb}}}}{{{f{Dl}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{f{{In{c}}}}}dC`}{{{f{Ib}}}d}{{{f{F`}}}Ib}{{{f{{In{c}}}}}IbC`}0{{{f{{In{c}}}}}{{B`{f}}}C`}0{{{f{Bj{Ld{c}}}}}{{f{Bj{In{c}}}}}C`}{{{f{Ib}}}Jn}{{}Fh}000000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{GbGb}Gb}{{IbIb}Ib}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gbc{}}{Ibc{}}{{{f{Gb}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dC`}21{{{f{{In{c}}}}}JnC`}111{{{f{Gb}}}{{ACl{Gb}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gb}}}{{ACn{Gb}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{F`}}}{{B`{L`}}}}{{{f{{In{c}}}}}{{B`{L`}}}C`}{{{In{c}}}{{In{c}}}C`}{{{In{c}}B`}{{In{c}}}C`}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}C`}4321{{{In{c}}}{{Ld{c}}}C`}{GbGb}{IbIb}{{{f{{Ld{c}}}}}{{Lh{{In{c}}}}}C`}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{{f{BjGb}}Gbd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bC`}{{{f{Bj{In{c}}}}d}bC`}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bC`}{{{f{Bj{In{c}}}}B`}bC`}033{{{f{Bj{In{c}}}}Jn}bC`}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}C`}{{{In{c}}{B`{Jn}}}{{In{c}}}C`}{{GbGb}Gb}{{IbIb}Ib}>=10{{{Ld{c}}}{{In{c}}}C`}{fc{}}0000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Ld{c}}}}}{{B`{{Lh{{In{c}}}}}}}C`}{{{f{{Ld{c}}}}}{{B`{{J`{{In{c}}}}}}}C`}{fOd}000000:9{{{f{{Ld{c}}}}}{{f{{ADf{F`}}}}}C`}{{}c{}}000000{ACjACj}0{{{f{{Ld{c}}}}}{{J`{{In{c}}}}}C`}````{{fh}b}{{{f{{ADh{c}}}}Fh}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fh}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{cc{}}{{{Fn{c}}}{{ADh{c}}}Ih}{{FhADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fh}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fh}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fh}dIh}{{fFh}d}1{{{f{{ADh{c}}}}}{{AEb{egAE`}}}Ih{}{}}{{{f{{ADh{c}}}}}{{AEb{{f{c}}{AEd{c}}AE`}}}Ih}{{{f{{ADh{c}}}}}FhIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FhFh}bIh}{{fFhFh}c{}}01{{{f{{ADh{c}}}}Fh}{{Hh{{Fb{H`}}{Fb{H`}}}}}Ih}0{{{f{If}}}{{Fb{If}}}}{{{f{{ADh{c}}}}}{{Fb{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dl}}}}{{}{{f{Dl}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fh}{{f{c}}}Ih}{{{f{{ADh{c}}}}Fh}eIh{}}1{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}}{{AEd{c}}}Ih}{{}c{}}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fb{H`}}}Ih}1`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{}Fh}{{}c{}}{{BhFh}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{BhFh}{{Fb{AEj}}}}{{}AEn}{{}ADj}{{}Fh}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFh}}{f{Cd}}}AFh}{{{f{AFh}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dh{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFj}}Ed}Ef}{{{f{AFj}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AFl}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFn}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gf}}}{{Ah{{l{c}}}}}C`}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFh}AGl{}}{{BhFh}AGn}`{{{f{AH`}}Fh}{{Ah{Hn}}}}{{{f{AH`}}Fh}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gf}}}}{{{f{AHf}}}{{Ah{Gf}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fh}}}}{{{f{AHj}}FhFh}{{l{c}}}C`}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Kb}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cd}}Nb}{{Ah{Af}}}}{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gf}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Kb}{{l{c}}}C`}{{{f{AId}}Kbc}{{l{e}}}{}C`}`{{{f{AFj}}d}{{l{c}}}C`}{{{f{AFj}}Ed}{{l{c}}}C`}{{{f{AIf}}Df}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{Fn{{f{{Dh{Df}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AJ`{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{H`AJb}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`H`{{Cj{}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{Ob{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJd{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`H`AJf{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}C`C`H`AJf{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}C`C`AJf{{Cj{ff}{{Cb{{Ob{{Fb{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{Ob{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{Ob{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{H`AJb}AJf{{Cj{f}{{Cb{{Ob{eg}}}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJh{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJhC`}{{{f{{l{c}}}}g}{{l{i}}}C`H`{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}C`H`{{Cj{}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{H`AJb}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FhA`}0{{JnJn}Jn}{{{f{Ef}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJld}{{Fn{I`}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJl}}}AJl}{{f{f{Bjc}}}b{}}{fb}{{}AJl}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AJl}}{f{AJl}}}d}{{f{f{c}}}d{}}0{{{f{AJl}}{f{BjGl}}}Gn}{cc{}}{{{f{AJl}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{{Dh{f}}}}cI`e}{{Fn{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFhf}{{Cb{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fh{f{Bj{Fn{d}}}}}b}```{{{f{AJn}}FhFh}AJn}0{{Fh{f{{Dh{Eh}}}}{f{BjEj}}}{{Ah{{AK`{Ef}}}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AKb}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{{AKd{Kb}}}}}}{{Bh{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AKf}}}}{{Bh{f{{Dh{Af}}}}}{{Ah{AKf}}}}{{{f{Af}}}{{Ah{Fl}}}}{{{f{{Dh{Af}}}}}{{Ah{AKb}}}}{{{f{{Dh{Af}}}}}{{Ah{AKf}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Ej}}}Ej}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Ej}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0``{Fhb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Ej}}{f{Ej}}}d}{{f{f{c}}}d{}}000{{{f{Ed}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}{{{f{Ej}}}Ed}{{{f{Ed}}}Ej}2{{{f{Ed}}{f{Bjc}}}bABf}{{{f{Ej}}{f{Bjc}}}bABf}{{}Fh}0{{}c{}}0````{{}Ed}{{}Ej}``{{{f{AJn}}FhFh}AJn}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Edd}Ed}{{Ejd}Ej}1010{{Ejc}Ej{{Hd{}{{Bb{d}}}}}}210{EdEd}{EjEj}`{AKhKb}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{E`}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{GfGf}c{}}{{{f{Gf}}{f{Gf}}}c{}}{{D`D`}c{}}{{{f{D`}}{f{D`}}}c{}}{{{f{D`}}{f{Dl}}}c{}}{{{f{El}}{f{El}}}c{}}{{ElEl}c{}}{{{f{El}}{f{{Dh{Df}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{El}}{f{Af}}}{{Ah{Af}}}}{{{f{Gf}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{Gf}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{El}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gf}}}d}{{{f{Gf}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{{AKl{Dl}}}}}}}}Cf}}{{{f{El}}c}El{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{AKl{{Dh{Df}}}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKn}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AL`}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Gf}}{f{Cd}}}Gf}{{{f{D`}}{f{Cd}}}D`}{{{f{El}}{f{Cd}}}El}{{{f{Gf}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{El}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{El}}c}El{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{Gf}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{Dl}}}}{f{c}}}{{Cb{c}}}}}}{{{f{El}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{{Dh{Df}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dh{e}}}}}bIh{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Dl}}}{{Cb{{AKl{Dl}}}}}}Cf}}{{{f{El}}c}El{{Cd{{f{{Dh{Df}}}}}{{Cb{{AKl{{Dh{Df}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{Gf}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{El}}Ed}Ef}{{{f{AKf}}Ed}Ef}{{{f{Gf}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{El}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AKf}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{Gf}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{El}}}{{Ah{Ef}}}}{{{f{{AEh{c}}}}}{{Ah{Ef}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{D`}}}El}{{{f{Hn}}}Hn}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mj}}}{{f{Dn}}}}{{{f{ALf}}}{{f{Dn}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dh{c}}}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{Gf}}{f{Gf}}}c{}}{{GfGf}c{}}1010{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{Dn{{Fb{Dn}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMf}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hn}}{f{Dn}}}Hn}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{El}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKf}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Jd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{El}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AKf}}{f{Dn}}Fd}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}C`C`}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{Dn}}}Dn}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Mf}}}Mf}{{{f{Lj}}}Lj}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Ll}}}Ll}{{{f{M`}}}M`}{{{f{Cn}}}Cn}{{{f{Cl}}}Cl}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{Dj}}}Dj}{{{f{Dd}}}Dd}{{{f{AOb}}}AOb}{{{f{An}}}An}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AN`}}{f{AN`}}}AOn}{{{f{BjMj}}Dn}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{Dn}}}d}00{B@bDn}{{}Hn}{{}AMl}{{}Dn}{{}ADj}{{{f{{AMh{ce}}}}}{{f{g}}}C`C`{}}{Fh{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}C`C`{}}{Fh{{f{Bjc}}}{}}000000000000000000000000000000000000{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Fhb}000000000000000000000000000000000000{{{f{AMf}}}{{f{Dn}}}}{{{f{Jd}}}{{f{Dn}}}}{{{f{Hn}}}Dn}{{{f{Mj}}}{{f{Dn}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{Dn}}{f{ADj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{ANd}}{f{ANd}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}543201{{f{f{c}}}d{}}0000000000000000000{{{f{E`}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}{{{f{{AMh{ce}}}}}MjC`C`}{{{f{Gf}}d}{{Ah{Gf}}}}{{{f{El}}{f{{Dh{Df}}}}}{{Ah{El}}}}{{{f{D`}}{f{Gf}}}{{Ah{{l{Dj}}}}}}{{{f{El}}{f{Gf}}}{{Ah{{l{Dd}}}}}}{{{f{{AEh{c}}}}{f{Gf}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{E`}}{f{BjGl}}}Gn}{{{f{D`}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{Dn}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}{{{f{ANb}}{f{BjGl}}}Gn}0{{{f{ANd}}{f{BjGl}}}Gn}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}000000{{{B`{c}}}Hn{{B@h{Hn}}}}1{dHn}{{{f{Dl}}}Hn}{{{f{{Dh{Df}}}}}Hn}{cHnB@j}5{HnDn}{{{f{Hn}}}Dn}{{{f{ADj}}}Dn}88{{{f{B@l}}}Mj}9{{{f{Hn}}}Mj}:::{{{f{AOl}}}ANd};;;;;;;;;;;;;;;;;;;;;{B@nADj}{BA`ADj}={{{f{ADj}}d}Dn}{eE`{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cE`{{Hd{}{{Bb{{B`{Af}}}}}}}}{cE`{{Hd{}{{Bb{{B`{{Fb{H`}}}}}}}}}}{cGf{{Hd{}{{Bb{d}}}}}}{eD`{{`{Dl}}}{{Hd{}{{Bb{c}}}}}}{eD`{{Kj{Dl}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}<;97865{eAKf{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAKf{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cE`{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGf{{Hj{}{{Bb{{B`{d}}}}}}}}{cGf{{Hj{}{{Bb{d}}}}}}{eD`{{`{Dl}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eD`{{Kj{Dl}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dh{Df}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eEl{{Kj{{Dh{Df}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{{cBhDn}E`{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dh{d}}}}}Gf}{{Bh{f{{Dh{c}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{c}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dh{{B`{d}}}}}}}Gf}{{Bh{f{{Dh{{B`{c}}}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{{B`{c}}}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGf{{Hl{}{{Bb{{B`{d}}}}}}}}{{{Fn{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{Fn{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gd{}{{Bb{e}}}}HlJfJh}}{{FhcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fh}E`}{{BhdFh}Gf}{{Bh{f{Dl}}Fh}D`}{{Bh{f{{Dh{Df}}}}Fh}El}{{Bh{f{{Dh{Df}}}}Fh}AKf}{{BhcFh}{{AEh{c}}}Ih}{{FhADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{BhFh}E`}{{BhFh}Gf}{{BhFh}D`}{{BhFh}El}{{BhFh}AKf}{{BhFh}{{AEh{c}}}Ih}{{BhFh{f{Dn}}}E`}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fh}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{AN`Il}{ANb{{B`{Il}}}}{{{f{Jd}}Fh}{{Ah{Hn}}}}{{{f{AMf}}Fh}{{Ah{Hn}}}}0{{{f{E`}}Fh}{{Ah{Hn}}}}{{{f{Gf}}Fh}{{Ah{Hn}}}}{{{f{D`}}Fh}{{Ah{Hn}}}}{{{f{El}}Fh}{{Ah{Hn}}}}{{{f{AKf}}Fh}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fh}{{Ah{Hn}}}Ih}{{{f{Jd}}Fh}Hn}{{{f{AMf}}Fh}Hn}0{{{f{E`}}Fh}Hn}{{{f{Gf}}Fh}Hn}{{{f{D`}}Fh}Hn}{{{f{El}}Fh}Hn}{{{f{AKf}}Fh}Hn}{{{f{{AEh{c}}}}Fh}HnIh}{{{f{E`}}Fh}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEh{c}}}}Fh}{{B`{{f{If}}}}}Ih}0{{ANbIl}Il}{{ANbc}Il{{Cd{}{{Cb{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dl}}}}}}{{{f{BAf}}Fh}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fh}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Fh}{{{f{D`}}}Fh}{{{f{AKf}}}Fh}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{Gf}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{El}}dd}{{Ah{Al}}}}{{{f{AKf}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}43210{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{Dn}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{ANb}}{f{Bjc}}}bABf}{{{f{ANd}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{DnDn}{{}Fh}000000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Eh}{{BAh{B`{Fh}}Fh}{{Ah{Jd}}}}{{BAh{B`{Fh}}Fh}Jd}{{{f{E`}}}c{}}{{{f{Gf}}}c{}}{{{f{D`}}}c{}}{{{f{El}}}c{}}{{{f{AKf}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjDn}{{Ah{L`}}}}{JdAf}{BAhAf}{HnHn}{{{f{Dn}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}12121222212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEb{cgAE`}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}{{f{Dn}}}}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}43210{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{Dn}}}}{{{f{Gf}}}{{B`{d}}}}{{{f{Gf}}}L`}{{{f{D`}}}L`}{{{f{El}}}L`}{{{f{Gf}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}L`}{{{f{AL`}}}L`}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dh{Df}}}}FhFh}Gf}{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{D`}}}{{Ah{Fh}}}}{{{f{El}}}{{Ah{Fh}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{B`{{AKl{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}D`{{Kj{{Dh{{AKl{Dl}}}}}}}}{{Bhc}El{{Kj{{Dh{{AKl{{Dh{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{AKl{{Dh{Df}}}}}}}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{Bhe}{{AEh{c}}}Ih{{Kj{{Dh{{B`{c}}}}}}}}{{BhDn}Mj}{IlAN`}{KbANb}{IlANb}{Bh{{AEh{c}}}Ih}{{{f{E`}}FhFh}E`}{{{f{Gf}}FhFh}Gf}{{{f{D`}}FhFh}D`}{{{f{El}}FhFh}El}{{{f{AKf}}FhFh}AKf}{{{f{{AEh{c}}}}FhFh}{{AEh{c}}}Ih}{{Bh{Fn{c}}}{{AEh{c}}}Ih}{{Bh{Fn{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}C`C`}{{}AMn}{Gfc{}}{{{f{Gf}}}c{}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}543210{{{f{E`}}}{{Ah{{AGf{Kb}}}}}}9{{{f{E`}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{ANd}}{f{ANd}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{Jd}}}{{B`{Fh}}}}{{{f{{AMh{AOdJb}}}}}{{B`{Fh}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{L`}}}}{{{f{AL`}}nN`}{{Ah{L`}}}}{{BhFhn}{{Ah{Gf}}}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{E`}}}E`}{{{f{Gf}}}Gf}{{{f{D`}}}D`}{{{f{El}}}El}{{{f{AKf}}}AKf}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fh}{{{f{{AMh{AOdJb}}}}}Fh}{{{f{Gf}}c{B`{d}}}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}}{{{f{D`}}c{B`{{f{Dl}}}}}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}}{{{f{El}}c{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gf}}ce}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{El}}ce}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{Fn{Df}}}}}}}}}}{{{f{Gf}}{f{Gf}}{B`{d}}}{{Ah{Gf}}}}{{{f{D`}}{f{Gf}}{B`{{f{Dl}}}}}{{Ah{D`}}}}{{{f{El}}{f{Gf}}{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMj}}Bh}b}{{{f{E`}}Kb}E`}{{{f{Gf}}Kb}Gf}{{{f{D`}}Kb}D`}{{{f{El}}Kb}El}{{{f{AKf}}Kb}AKf}{{{f{{AEh{c}}}}Kb}{{AEh{c}}}Ih}{{{f{E`}}Kb{B`{{f{Af}}}}}E`}{{{f{Gf}}Kb{B`{d}}}Gf}{{{f{D`}}Kb{B`{{f{Dl}}}}}D`}{{{f{El}}Kb{B`{{f{{Dh{Df}}}}}}}El}{{{f{AKf}}Kb{B`{{f{{Dh{Df}}}}}}}AKf}{{{f{{AEh{c}}}}Kb{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gf}}d}Gf}{{{f{D`}}d}D`}{{{f{El}}d}{{l{Dd}}}}{{{f{AKf}}d}AKf}{{{f{Gf}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dj}}}}{{{f{El}}Ed}{{l{Dd}}}}{{{f{AKf}}Ed}AKf}{{{f{AKn}}Df}L`}{{{f{AL`}}Df}L`}{{{f{Hn}}}{{AKl{Dl}}}}{{{f{Hn}}{f{Dn}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gf}}}{{B`{I`}}}}{{{f{Gf}}}L`}{{{f{El}}}L`}{{{f{D`}}{f{Ef}}}D`}{{{f{D`}}{f{c}}}D`{{Kj{{Dh{I`}}}}Nd}}{{{f{El}}{f{c}}}El{{Kj{{Dh{I`}}}}Nd}}{{{f{El}}{f{Ef}}}El}{{{f{Dn}}AMn}ADj}{{{f{Mj}}AMn}B@l}{ANdAOl}{{{f{Dn}}BhAMn}B@l}{ANd{{f{Dl}}}}{{{f{D`}}Fh}{{Ah{Af}}}}{{ADjFhd}ADj}{{{f{BjE`}}Dn}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{E`}}}{{Ah{Nn}}}}{fc{}}0000000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADj}}}BAl}{{{f{Jd}}Fh}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AOdJb}}}}Fh}{{Ah{{AKl{{AMh{AOdJb}}}}}}}}{fDb}000{{{f{El}}}D`}{{{f{Hn}}{f{Hn}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kn}{c{{Ob{e}}}{}{}}000000000000{Kb{{Ob{AN`c}}}{}}111111111111111111111111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{Dn}}}{{Ah{Hn}}}}{{{f{Dn}}AMn}{{Ah{ADj}}}}{f{{Ob{G`BAn}}}}000{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gf}}}{{Ah{Gf}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{El}}}{{Ah{El}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fh}cA@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}0{{{f{Dn}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Df}L`}{{{f{AL`}}Df}L`}{{{f{Gf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}Ih}{{{f{Gf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Fhc{}}0{Fh{{BBn{ce}}}{}{}}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}Hn}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dl}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dl}}}b}{{{f{AMb}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{Fhb}000{{{f{AMb}}}{{f{Dn}}}}{{{f{AMb}}{f{D`}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Dl}}}c{}}102{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Lf{BCd}}}}{cc{}}000{{B@d{Lf{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{D`}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFhBCf}AMb}{{{f{AMb}}Fh}{{Ah{Hn}}}}{{{f{AMb}}Fh}Hn}{{{f{AMb}}}{{f{{Lf{BCd}}}}}}=<;<;={{}Fh}000{{}c{}}000{{}Eh}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fh}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Dl}}}c{}}{{{f{AMb}}{f{D`}}}c{}}120{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{AMb}}}L`}{{{f{BjBCb}}{f{{Lf{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fh}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFhBCf}BC`}{{{Lf{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}};9:;9:<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dl}}}{{Hh{Mbd}}}}`{{{f{BCh}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ed}AMb}`{{{f{AMb}}AMnd}Fl}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dl}}}{{B`{Mb}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Mb}{{f{Dl}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Mb}{{B`{{f{Dl}}}}}}{{}Fh}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fh}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{{}b}{Fhb}{{{f{BjBCn}}}b}2{cc{}}6{{}Fh}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Mb{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dl}}}{{Ah{{f{BjBD`}}}}}}>=;:8{BD`AMb}765{{BhFh{Lf{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dl}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fh{{f{c}}}{}}0{{{f{BDb}}}f}{Fh{{f{Bjc}}}{}}0{Fhb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}{cBDb{{B@h{{AKl{Dl}}}}}}1{{}{{Kf{{f{Dl}}BDd}{{Cb{b}}}}}}{{}Fh}0{{}c{}}0{cAKjAJf}{{{f{Dl}}}BDb}````{{{Kf{{f{Dl}}BDd}{{Cb{b}}}}}b}{cAKjBDf}{fDb}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{G`BAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BjGl}}MhFh}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fh}}}}{{}Db}{{}d}{{}Fh}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fh}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{Fn{Eh}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{Fn{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cd}}}{{Fn{Eh}}}}0{{{f{BCl}}{f{Gf}}}{{Ah{BCl}}}}{{{Fn{Eh}}}BCl}{{{f{BCl}}{f{{Dh{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dh{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}KbFh}BCl}{{{f{BCl}}}BCl}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}0{{{f{BjBCl}}{f{Dl}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{c}}}}}}{{{f{BjBCl}}Fhe}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}9{{{f{BE`}}}BE`}{{{f{BEb}}}BEb};{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dl}}}{{Ah{{f{Eh}}}}}}{{{f{BCl}}e}{{Ah{{Fn{{f{Eh}}}}}}}{{Kj{Dl}}}{{Hd{}{{Bb{c}}}}}}{{}BEb}{{}BCl}{Fh{{f{c}}}{}}0000{Fh{{f{Bjc}}}{}}0000{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{Fhb}0000{{{f{BCl}}{f{Dl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dl}}}{{Ah{Eh}}}}{{{f{BCl}}e}BCl{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEd{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dh{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{Fn{Dn}}}}<{{{f{BEf}}}BCl}{{{f{BDl}}}BCl}{{{f{BEb}}{f{BEb}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}0{{{f{BCl}}}Fh}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{Fn{Eh}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{Fn{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gf}}}{{Ah{BCl}}}}{{{f{BE`}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Eh}}}}}}{cBCl{{Hd{}{{Bb{Af}}}}}}{{{f{{Dh{BEh}}}}}{{Ah{BCl}}}}{{{f{{Dh{BEh}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEh}}}}}}}}{{{f{BCl}}Fh}{{B`{{Fn{Hn}}}}}}{{{f{BCl}}{f{Dl}}}{{B`{Fh}}}}{{{f{BCl}}}{{Fn{{f{Bh}}}}}}{{{f{BCl}}}{{Fn{Bh}}}}{{{f{BCl}}}{{Fn{{f{Dl}}}}}}{{{f{BCl}}}{{f{{Dh{Eh}}}}}}{{{f{BjBCl}}}{{f{Bj{Fn{Eh}}}}}}{{{f{BCl}}Fh}{{Ah{BEh}}}}{{{f{BCl}}Fh{f{BjBEh}}}{{Ah{b}}}}{{{f{BCl}}Fh{f{BjBEh}}}b}{{{f{BCl}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCl}}e}{{Ah{BEj}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{Fn{Eh}}dd}{{Ah{BEj}}}}{{{f{BEb}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fh}}}BCl}{{{f{BCl}}}Fh}{{{f{BCl}}{f{{Dh{Eh}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dh{Eh}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dh{Eh}}}}}{{f{BjBCl}}}}{{{f{BCl}}{BEl{Fh}}}{{f{c}}}{}}{{{f{BCl}}{BEn{Fh}}}{{f{c}}}{}}{{{f{BCl}}{BF`{Fh}}}{{f{c}}}{}}{{{f{BCl}}{Md{Fh}}}{{f{c}}}{}}{{{f{BCl}}Fh}{{f{c}}}{}}{{{f{BCl}}{BFb{Fh}}}{{f{c}}}{}}{{{f{BCl}}{f{Dl}}}{{f{c}}}{}}{{{f{BCl}}BFd}{{f{c}}}{}}{{}Fh}0000{{{f{BjBCl}}Fhc}{{Ah{{f{BjBCl}}}}}BDn}{{}c{}}000000{{{f{BCl}}}{{Ah{Gf}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}AMnd}BFf}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}}BFh}{{{f{BCl}}}Fh}4{{{f{BCl}}}{{Ah{{B`{Eh}}}}}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}55{{{Fn{Eh}}}{{Ah{BCl}}}}{{{Fn{Eh}}}BCl}111{{{f{BjBFf}}}{{B`{c}}}{}}{{{f{BjBFh}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{Fn{BCl}}}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cd{BCl}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cd{{f{BjBCl}}}{{Cb{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cd{BClc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Eh}}}}{{{f{BCl}}{f{BCl}}}d}>=<{{{f{BjBCl}}{f{Dl}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dl}}c}{{Ah{{f{BjBCl}}}}}BFj}{{{f{BjBCl}}Fhc}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFj};`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fhdd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fh}{{B`{{f{Eh}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BFl{Fh}}}}{{{f{BCl}}c}{{Ah{{Fn{Eh}}}}}{{BFn{Bh}}}}3{{{f{BCl}}e{f{BG`}}}{{Ah{BCl}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}}{{Hh{FhFh}}}}{{{f{BCl}}Kb}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fh}{{{f{BFf}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BFh}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BCl}}KbFh}BCl}00{{{f{BCl}}cEj}{{Ah{BCl}}}{{BFn{Bh}}}}{{{f{BjBCl}}cEj}{{Ah{{f{BjBCl}}}}}{{BFn{Bh}}}}{{{f{BCl}}Kb}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFhd}{{Fn{BCl}}}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fh}}}BCl}{{{f{BCl}}{f{Ef}}}{{Ah{BCl}}}}{BCl{{Fn{Eh}}}}{{{f{BCl}}{f{Ef}}}BCl}{{{f{BCl}}{f{Ef}}d}BCl}{{{f{BCl}}BGb}{{Ah{Nn}}}}{fc{}}00{fDb}{{{f{BjBCl}}{B`{{f{Dl}}}}{B`{{O`{Db{Fn{Db}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dl}}}}{B`{{O`{Bh{Fn{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dl}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCl}}Fhe}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Eh}}}{{Cb{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{BGd{{Ah{BCl}}}}{{{Hh{BGf{f{BEf}}}}}{{Ah{BCl}}}}2{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEh}}}}}}}}}}{{{f{BCl}}{f{Dl}}}{{Ah{Fh}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{G`BAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dh{Db}}}}}}BEb{B`{{Hh{KbFh}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{Fn{Bh}}}}BEb{B`{{Hh{KbFh}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fh}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Eh}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}`````{{fh}b}0{{EhEh}c{}}{{Ehc}e{AbKn}{}}{{{f{Eh}}c}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Al}}}Eh}0000000{{{f{Eh}}{f{Al}}nN`}Eh}1{{{f{Eh}}{f{Al}}Df}Eh}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}c}Eh{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Eh}}Ed}Ef}{{{f{BGh}}}{{f{Af}}}}{{{f{Eh}}}{{f{Af}}}}{{{f{Eh}}}{{B`{{f{BGh}}}}}}{{{f{Eh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Af}{{{f{Eh}}}{{Ah{{f{El}}}}}}{{{f{Eh}}}{{Ah{{f{AKf}}}}}}{{{f{Eh}}}{{B`{BGj}}}}>{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}101{{{f{Eh}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGh}}{f{Dn}}}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}10{{{f{BGh}}{f{Dn}}Fd}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}Fd}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AMb}}}}}}{{{f{Eh}}}Eh}{{{f{BGh}}}BGh}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Eh}}}{{Ah{{f{Jd}}}}}}{{}Eh}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{f{Eh}}c}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{Fhb}0={{{f{BGh}}}{{f{Dn}}}}{{{f{Eh}}}{{f{Dn}}}}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}011{{{f{Eh}}}{{Ah{Eh}}}}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}HnFh}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AKn}}}}}}{{{f{Eh}}}{{Ah{{f{AL`}}}}}}{{{f{Eh}}}{{AKl{Mj}}}}{{{f{Eh}}AG`}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}}{{Ah{Eh}}}}{{{f{BGh}}{f{BjGl}}}Gn}{{{f{Eh}}{f{BjGl}}}Gn}{cc{}}0{BGhEh}{AfEh}{{AfFh}BGh}{{BhFh{f{Dn}}}Eh}{{{f{Eh}}FhFh}Eh}{{{f{Eh}}Fh}{{Ah{Hn}}}}{{{f{Eh}}}Fh}{{{f{Eh}}}Ib}{{{f{Eh}}}{{B`{{Fb{F`}}}}}}{{{f{Eh}}Fh}{{B`{{f{If}}}}}}{{{f{Eh}}Fh}Hn}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{BGh}}}d}{{{f{Eh}}}d}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}}{{Ah{{f{BBh}}}}}}{{{f{Eh}}}{{Ah{{f{BBj}}}}}}{{{f{Eh}}}{{Ah{{f{BBl}}}}}}{{{f{Eh}}}{{Ah{{f{BBf}}}}}}{{{f{Eh}}}{{Ah{{f{Ef}}}}}}{{}Fh}0{{}c{}}0{BDnEh}{BGhEh}{EhEh}{EhBCl}{{{f{BjEh}}}{{f{BjAf}}}}>={{{f{Eh}}}{{Ah{Gf}}}}000{{{f{Eh}}}Gf}0{{{f{Eh}}}Jn}{{{f{BGh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Fh}{{{f{Eh}}}Fh}{{{f{Eh}}}{{Ah{{f{E`}}}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}{{Ah{L`}}}}0{{Ehc}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{EhEh}c{}}{{{f{BGh}}}{{f{Bh}}}}{{{f{Eh}}}{{f{Bh}}}}{{BhL`Fh}BGh}{{Bhc}Eh{}}{{BhDn}BGh}{{Bh{f{Dn}}}Eh}{{{f{Eh}}FhFh}Eh}{{BhL`Fh}Eh}==?{{{f{Eh}}}BGl}={{{f{Eh}}}Eh}:;=<{{{f{BjBGh}}Bh}{{f{BjBGh}}}}{{{f{BjEh}}Bh}b}{{{f{Eh}}{f{{Dh{ANb}}}}}{{Ah{Eh}}}}{{{f{BGh}}Fh}BGh}4{{{f{Eh}}ndd{B`{Il}}}{{Ah{Eh}}}}{{{f{Eh}}Fhdd{B`{Il}}}{{Ah{Eh}}}}{{{f{BGh}}}{{f{L`}}}}{{{f{BjEh}}Jn}b}{{{f{Eh}}Kb}Eh}{{{f{BjEh}}}b}{{{f{Eh}}{B`{Il}}}Eh}{{{f{Eh}}KbFh}Eh}{{{f{Eh}}Ed}{{Ah{Eh}}}}{{{f{Eh}}Kb}{{Hh{EhEh}}}}{{{f{Eh}}}{{Ah{{f{D`}}}}}}{{{f{BGh}}{f{Dn}}}{{Ah{BGh}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{EhEh}c{}}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}{f{Ef}}}{{Ah{Eh}}}}{BGhAf}{EhAf}{{{f{Eh}}{f{{Dh{I`}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{Dh{I`}}}}}Eh}{{{f{Eh}}{f{Ef}}}Eh}{fc{}}0{{{f{Eh}}}Eh}{{{f{BGh}}}Af}{{{f{Eh}}c}{{Ah{Eh}}}{{Cd{{f{Af}}}{{Cb{{Ah{Af}}}}}}}}{{{f{Eh}}}{{B`{{f{El}}}}}}{{{f{Eh}}}{{B`{{f{AKf}}}}}}{{{f{Eh}}}{{B`{{f{Gf}}}}}}{{{f{Eh}}}{{B`{{f{AMb}}}}}}{{{f{Eh}}}{{B`{{f{Jd}}}}}}{{{f{Eh}}}{{B`{{f{AKn}}}}}}{{{f{Eh}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Eh}}}{{B`{{f{BBh}}}}}}{{{f{Eh}}}{{B`{{f{BBj}}}}}}{{{f{Eh}}}{{B`{{f{BBl}}}}}}{{{f{Eh}}}{{B`{{f{BBf}}}}}}{{{f{Eh}}}{{B`{{f{Ef}}}}}}{{}{{Ob{c}}}{}}0{{{f{Eh}}}{{B`{{f{E`}}}}}}{{{f{Eh}}}{{B`{{f{D`}}}}}}{{{f{Eh}}}{{B`{{f{BBb}}}}}}{{{f{Eh}}}{{B`{{f{B@d}}}}}}{{{f{Eh}}}{{B`{{f{BBd}}}}}}{{{f{Eh}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Eh}}}{{Ah{{f{BBb}}}}}}{{{f{Eh}}}{{Ah{{f{B@d}}}}}}{{{f{Eh}}}{{Ah{{f{BBd}}}}}}{{{f{Eh}}}{{Ah{{f{BB`}}}}}}{{{f{Eh}}}{{Ah{Eh}}}}0{AfBGh}{{{f{Eh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{Eh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EhBh}Eh}{{{f{Eh}}c}Eh{AbKn}}{{{f{Eh}}{f{Gf}}{f{Eh}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}{f{Eh}}}{{Ah{Eh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGn}}}BGn}{{f{f{Bjc}}}b{}}{fb}{{}BGn}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}0{{{f{BGn}}{f{BjGl}}}Gn}{cc{}}{{{f{BGn}}{f{Bjc}}}bABf}`{{}Fh}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEj}}}{{Ah{BCl}}}}`{{{f{BH`}}}{{f{{Dh{BHb}}}}}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cj{BCl}{{Cb{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{Al}}}Al}{{{f{BEj}}}BEj}{{{f{BHd}}}BHd}{{f{f{Bjc}}}b{}}000{fb}000;{{}BH`}{{}Al}{Fh{{f{c}}}{}}000{{{f{BHf}}}{{f{c}}}{}}1111{Fh{{f{Bjc}}}{}}0000000`{{BHhe}{}{}{{BHj{c}}}}{Fhb}000{{{f{BjBH`}}}b}1111{{{f{BH`}}{f{BH`}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BHl}}}I`}{{{f{BH`}}}{{f{{Dh{I`}}}}}}{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjBH`}}}{{f{Bj{Fn{I`}}}}}}{{{f{BH`}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEj}}{f{BjGl}}}Gn}{{{f{BHd}}{f{BjGl}}}Gn}0{{{f{Dl}}BHd}Bh}{cc{}}0000{{{Fn{{Fn{BHn}}}}}BH`}{{{Fn{BHn}}}BH`}{BH`Al}333{cBH`{{Hd{}{{Bb{BHn}}}}}}{cBH`{{Hj{}{{Bb{BHn}}}}}}{{{f{Al}}Fh}BHl}{{{f{BEj}}}{{f{Al}}}}{{{f{BjBEj}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BI`}}dd}{{Ah{Al}}}}0{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBH`}}}}{{}Fh}0000000{{}c{}}0000000{AlBH`}1{BH`c{}}{{{f{BH`}}}c{}}310{{{f{BHl}}}d}{{{f{Al}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Kd{I`}}}}{Kd{BHb}}}}}}{{{f{Al}}}BIf}{{{f{BEj}}}{{Fn{Eh}}}}{{{f{BEj}}{B`{{Hh{KbFh}}}}}{{Fn{Eh}}}}={{{f{BHl}}}Fh}{{{f{Al}}}Fh}?????{{{Fn{I`}}{Fn{BHb}}d}BH`}{{{f{BCl}}{Fn{Eh}}Al{B`{{Fn{Bh}}}}}BEj}{{{f{BjBIf}}}{{B`{c}}}{}}{{{f{BjBIf}}Fh}{{B`{c}}}{}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cd{BCl}{{Cb{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHh}{{{f{BEj}}nN`}{{Ah{BCl}}}}{{BEje}BEj{{B@h{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}KbFh}BHf}{{{f{BjBH`}}}b}{{{f{BjAl}}}b}{{{f{BEj}}Df}{{Ah{BCl}}}}{{{f{BEj}}}{{Ah{BCl}}}}{Al{{Fn{I`}}}}0{BEjAl}{{{f{BjBEj}}}Al}{fc{}}000{fDb}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{G`BAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BH`}}}}{{{f{Al}}}{{f{BIh}}}}={{}c{}}0000000`````{{{f{BH`}}c}Af{{Cd{{Hh{I`{f{BHb}}}}}{{Cb{B`}}}}JfJh}}{{{f{BH`}}c}Af{{Cd{{Hh{I`{f{BHb}}}}}{{Cb{}}}}JfJh}}{{{f{{Dh{{BIj{I`}}}}}}c}Af{{Cd{{BIj{I`}}}{{Cb{B`}}}}JfJh}}{{{f{{Dh{{BIj{I`}}}}}}c}Af{{Cd{{BIj{I`}}}{{Cb{}}}}JfJh}}{{{f{{Dh{c}}}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dh{c}}}}{f{Hf}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}C`}{{{f{BIh}}{f{{Dh{Fl}}}}}d}{{{f{BJb}}{f{Al}}}Af}{{BJdBJd}BJd}0`{{{f{BJf}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJf}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJh}}Hn}{{B`{b}}}}{{{f{BjBJj}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BEh}}}BEh}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dh{c}}}}}Dn{{BAb{Dn}}}}{{}BEh}{Fh{{f{c}}}{}}00{Fh{{f{Bjc}}}{}}00{Fhb}00{{{f{BEh}}{f{BEh}}}d}{{f{f{c}}}d{}}0{{{f{BEh}}{f{BjGl}}}Gn}{cc{}}{{{Hh{{f{Dn}}Fh}}}BJh}1{{{Hh{{f{Dn}}Fh}}}BJj}2{{gFh}BDl{{B@h{Bh}}}{{B@h{Dn}}}{{Bf{}{{Bb{{Fn{{Hh{ce}}}}}}}}}}{{}Fh}00{{}c{}}00{BJhAf}{BJjAf}{{{f{Dn}}Fh}BJh}{{{f{Dn}}Fh}BJj}{{{Fn{Hn}}}BEh}{{{f{BjBJh}}Fh}Af}{{{f{BjBJj}}Fh}Af}{{{f{{Dh{BEh}}}}{B`{Fh}}}{{Ah{BDl}}}}0{{{f{{Dh{BEh}}}}{B`{Fh}}}{{Ah{{Fn{Dn}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dh{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dh{BCl}}}}d}{{Ah{BCl}}}}````{{IlIl}Il}{{{f{{Dh{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{Fn{BBd}}Nh}}}}}}{{{f{{AKd{Kb}}}}Nh{f{Bj{Fn{Il}}}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BJl}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BJl}}}Il}{cc{}}{{}Fh}{{}c{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BJn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}0{{{f{BJn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}05{{{f{BjBJl}}{f{{Dh{Df}}}}}b}{{{f{BjBJl}}Ln}b}{{{f{BjBJl}}Kb}b}{{{f{BjBJl}}Mb}b}{{{f{BjBJl}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lf{ce}}}}}{{f{e}}}NdBK`}{{{f{{Lf{c}}}}}BKb{BKdNd}}{{{f{{Lf{ce}}}}}{}NdBK`}{{{f{{Lf{c}}}}}LnBKf}{{{f{Bh}}}{{f{Dl}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{{Dh{Df}}}}}}{{{f{Bh}}}{{f{BKj}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NdBK`}4{{{Lf{{Dh{{BKl{c}}}}e}}}{{Lf{{Dh{c}}e}}}{}BK`}{{{Lf{{BKl{c}}e}}}{{Lf{ce}}}{}BK`}{f{{f{c}}}{}}700030000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Lf{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BL`}}}BL`}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nd{BK`A@n}}{{{f{Nb}}}Nb}{{{f{BGb}}}BGb}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BIl}}}BIl}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{{f{BLf}}}BLf}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}AOn{BLhNd}BK`}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fb{H`}}}}``{{}b}{cbBK`}{{}Bh}{{}{{Lf{BLj}}}}{{}{{Lf{c}}}BLl}{{}{{Lf{{Dh{c}}}}}{}}{{}{{Lf{Dl}}}}{{}Nb}{{}BGb}{{}B@l}{{}N`}`{Fh{{f{c}}}{}}{{{f{Bh}}}f}1111{{{f{{Lf{ce}}}}}{{f{c}}}NdBK`}222222222{Fh{{f{Bjc}}}{}}0000000000000{{{f{{Lf{c}}}}}{{f{Dl}}}{AJfNd}}`{{{Lf{ADlc}}}{{Ob{{Lf{ec}}{Lf{ADlc}}}}}BK`{ADlJfJh}}{{{Lf{ADlc}}}{{Lf{ec}}}BK`{ADlJfJh}}{{{f{{Lf{ce}}}}}{{BLn{ce}}}Nd{A@nBK`}}{Fhb}000{{{f{Bj{Lf{ce}}}}}bNdBK`}1111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kj{Dl}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Lf{BM`}}}}{f{BM`}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BMbNd}BK`}{{{f{{Lf{H`}}}}{f{H`}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{BLf}}{f{BLf}}}d}{{f{f{c}}}d{}}0000000000000{BL`{{Hh{MbMb}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Lf{AD`}}}}}{{Ob{bBMd}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BL`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBK`}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BK`}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BK`}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGb}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BIl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMfAKj}{BMdAKj}{cc{}}{BMhAKj}{BMjAKj}{{{f{Db}}}Bh}{G`Bh}4{DbBh}{{{f{Dl}}}Bh}{MbOf}77{{{Lf{Dl}}}{{Lf{{Dh{Df}}}}}}{{{Fb{ce}}}{{Lf{ce}}}NdBK`}{{{BIj{c}}}{{Lf{{Dh{c}}}}}{}}{c{{Lf{c}}}{}}{BMl{{Lf{BKj}}}}{{{f{BLj}}}{{Lf{BLj}}}}{{{f{BKj}}}{{Lf{BKj}}}}>{BMnc{}}{BN`{{Lf{BLj}}}}{BNb{{Lf{BKh}}}}{{{f{BKh}}}{{Lf{BKh}}}}{{{f{Dl}}}{{Lf{Dl}}}}{Db{{Lf{Dl}}}}{G`{{Lf{Dl}}}}{{{AKl{c}}}{{Lf{c}}}{BNdNd}}{{{Fn{ce}}}{{Lf{{Dh{c}}e}}}{}{BK`A@n}}{{{f{{Dh{c}}}}}{{Lf{{Dh{c}}}}}A@n}{cc{}}00000000{{c{B`{Hf}}}BNf{}}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNj}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNl}{cBh{{Hd{}{{Bb{Db}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{Fb{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{f{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{e{{Lf{{Dh{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFh}{{BNn{Kb}}}Kj{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BNn{Kb}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNn{Kb}}}BJ`{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Lf{{Dh{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Lf{c}}}Nd}{c{{Lf{ec}}}BK`Nd}{{{f{Dl}}}Bh}0{{{f{Dl}}}{{Ob{BO`}}}}{DbBh}{{Bhc}BOb{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOdNd}BK`}{{{f{Bj{Lf{ce}}}}}{{B`{{f{Bjc}}}}}NdBK`}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}NdBK`}{{{f{Fl}}Fh}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Lf{ce}}}}{f{Bjg}}}b{BOfNd}BK`ABf}{{{f{BGb}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLf}}{f{Bjc}}}bABf}{{{f{Of}}}Mb}{{}b}{cb{A@nBK`}}{{{f{{Dh{Mb}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{}Fh}0000000000000`{{{f{BjBL`}}}{{f{BjIl}}}}`{{}c{}}0000000000000{{}Eh}{{{Lf{ce}}}{{B`{c}}}{}BK`}{{{Lf{ce}}}{}NdBK`}{{{Lf{ce}}}{{Hh{e}}}NdBK`}{{{Lf{BOh}}}Af}{BhDb}{{{f{BL`}}}d}{{{f{Of}}}d}`{{{f{{Lf{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOdNd}BK`}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}{BOjNd}{BK`A@n}}{{{f{BOl}}}L`}0{{{f{BOn}}}L`}``11`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BMbNd}BK`}{{C@`Fh}{{B`{Fh}}}}{{Bhc}C@b{}}{c{{Lf{c}}}{}}{{BhADjd}B@l}{e{{Lf{c}}}{}{{Oh{{f{{BLn{c}}}}}{{Cb{c}}}}}}{{ge}{{Lf{ce}}}{}BK`{{Oh{{f{{BLn{ce}}}}}{{Cb{c}}}}}}{{ce}{{Lf{ce}}}{}BK`}{{}{{Lf{{BKl{c}}}}}{}}{c{{Lf{{BKl{e}}c}}}BK`{}}{Fh{{Lf{{Dh{{BKl{c}}}}}}}{}}{{Fhc}{{Lf{{Dh{{BKl{e}}}}c}}}BK`{}}3210`{{}Of}{{}BL`}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{B`{AOn}}}{BOdNd}BK`}{c{{C@d{{Lf{c}}}}}{}}{{ce}{{C@d{{Lf{ce}}}}}{}BK`}`````{{{f{BOl}}}L`}0{{{f{{Lf{c}}}}{f{BjC@f}}}b{AJfNd}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNdBK`}{{{f{BOn}}nN`}{{Ah{L`}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{Df}}}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}C@h}{{Ob{bBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Fn{Df}}}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{BjDb}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{C@j}}}}}{{Ob{FhBMd}}}}`{{{f{Bj{Lf{AD`}}}}C@l}{{Ob{IlBMd}}}}`{{{f{AJn}}FhFh}AJn}0{{{f{{Lf{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{C@n}}Df}L`}{{MbMb}BL`}`{{{f{{Lf{ce}}}}}FhNdBK`}>>{{{f{Of}}}{{B`{Mb}}}}{fc{}}00000000000{fDb}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}000{{{Lf{{Dh{c}}e}}}{{Ob{{Lf{{BIj{c}}e}}}}}{}BK`}1111111111{{}{{Ob{c}}}{}}0000000000000{{C@`Fh}{{Ob{FhAKj}}}}{c{{Ob{{Lf{c}}CA`}}}{}}{{ce}{{Ob{{Lf{ce}}CA`}}}{}BK`}{{}{{Ob{{Lf{{BKl{c}}}}CA`}}}{}}{c{{Ob{{Lf{{BKl{e}}c}}CA`}}}BK`{}}10{c{{Ob{{C@d{{Lf{c}}}}CA`}}}{}}{{ce}{{Ob{{C@d{{Lf{ce}}}}CA`}}}{}BK`}{f{{Ob{G`BAn}}}}00{{{Lf{ce}}}{{Ob{c{Lf{ce}}}}}{}BK`}{fOd}0000000000000{{{Lf{ce}}}cA@nBK`}`{{{f{C@n}}Df}L`}{{}c{}}0000000000000{{{f{{Lf{ce}}}}}FhNdBK`}``{{B@l{CAb{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dl}}}{{Cb{Db}}}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{Df}}}}}{{Ob{FhBMd}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAd}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dl}}}{{Ob{bB@f}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{CAf}}}}}{{Ob{FhBMd}}}}```````{{c{B`{Hf}}}BNf{}}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNj}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNl}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{CAh{B`{{f{ADj}}}}}{{Ob{{BNn{Kb}}AKj}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAh}}}d}{FhCAh}{{{f{CAh}}}{{f{{Dh{Kb}}}}}}{{{f{BjCAh}}{f{H`}}}b}{{{f{BjCAh}}}b}{{{f{BjCAh}}{f{{Dh{{Fb{H`}}}}}}}b}1{{{f{BjCAh}}{B`{{f{H`}}}}}b}{CAh{{CAj{Kb}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAl}}}{{f{ADl}}}}{{{f{BjCAl}}}{{Fb{H`}}}}{{{f{BjCAl}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAl}}}CAl}{{f{f{Bjc}}}b{}}{fb}{{}CAl}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CAl}}}{{f{ADj}}}}{{{f{BjCAl}}Fh}b}{{{f{CAl}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAl}}}Fh}{FhCAl}{{{f{BjCAl}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAl}}}{{B`{{f{CAn}}}}}}8```````{{{f{AJn}}FhFh}AJn}0`{{}b}0{{}d}``{{eFhFh}{{CB`{Kb}}}{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{eFhFh}{{AKd{Kb}}}{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{L`}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{L`}}}L`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{L`}}}{{f{Dn}}}}{{{f{L`}}{f{L`}}}d}{{{f{L`}}{f{BjGl}}}Gn}{IjL`}{cc{}}{CBbL`}{CBdL`}{LnL`}{KbL`}{DfL`}{CBfL`}{MbL`}{nL`}{IlL`}{{}Fh}{{}c{}}{{L`Bh}Eh}{{L`Bh}Af}{{{f{L`}}}d}0{{DnHn}L`}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjL`}}Hn}b}{{{f{L`}}}{{f{Hn}}}}:{{{B`{n}}Dn}L`}``````{{{f{{CBh{c}}}}{f{{CBh{c}}}}}{{Ah{b}}}{}}{{{f{BEh}}}BDl}{{{f{BEf}}}CBj}{{{f{BEf}}}BDl}{{{f{CBj}}{f{Dl}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dl}}}{{B`{Mj}}}}{{{f{CBj}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CBn{}{{CBl{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLlBMb}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBj}}AMn}BEf}{{{f{BDl}}AMn}BEf}{{{f{BjCBj}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CBj}}{f{Dl}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dl}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOh}}}n}0{{Bh{Fn{Fl}}{f{ADj}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{ADj}}{B`{{f{CC`}}}}}{{Ah{Af}}}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}`{{{f{BOh}}}{{Ah{L`}}}}0{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOh}}Ed}Ef}0{{{f{BOh}}}{{Ah{Ef}}}}0`{{{f{Af}}Fh}{{f{Fl}}}}{{{f{BOh}}}{{f{ADl}}}}{{{f{BjBOh}}}{{f{BjADl}}}}0{{{f{Af}}}E`}{{{f{BjBOh}}}{{f{Bj{l{c}}}}}C`}{{{f{BOh}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BOh}}}}{{{f{BjBOh}}}{{Ah{Fh}}}}0{{{f{BjAf}}}{{Ah{Fh}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}{{{f{Af}}}{{Ah{{f{AKf}}}}}}{{{f{BOh}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOh}}}{{B`{{Fb{F`}}}}}}0{{{f{BOh}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOh}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{BOh}}}{{f{{Fn{Fl}}}}}}{{{f{BjBOh}}}{{f{Bj{Fn{Fl}}}}}}{{{f{BjAf}}}{{f{Bj{Fn{Fl}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOh}}}{{Lf{BOh}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fh{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fh{{f{Bjc}}}{}}000{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fhb}000{{{f{BOh}}}Af}0{{{f{BOh}}}{{f{Dn}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}9{{{f{Af}}c}eB@j{}}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}{{{f{Af}}{f{Dl}}}c{}}<233{{f{f{c}}}d{}}0{{{f{Af}}}Fh}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFh}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOh}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOh}}{f{Gf}}}{{Ah{Af}}}}{{{f{BOh}}}L`}0{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Db}{cc{}}00{{{l{c}}}AfC`}1{{Bh{f{{Dh{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dh{Hn}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFl}{{Ah{Af}}}}{{Bh{Fn{Fl}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{Dn}}}Af}{cAf{{Hd{}{{Bb{{f{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Db}}}}}}{cAf{{Hd{}{{Bb{Kb}}}}}}{cAf{{Hd{}{{Bb{{B`{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ln}}}}}}}}{cAf{{Hd{}{{Bb{Ln}}}}}}{cAf{{Hd{}{{Bb{{B`{Ln}}}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Db}}}}}}}}{cAf{{Hd{}{{Bb{Mb}}}}}}{cAf{{Hd{}{{Bb{{B`{Mb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dl}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{f{Mb}}}}}}}}{{Bh{Fn{Ij}}}Af}{{Bh{Fn{Il}}}Af}{{Bh{Fn{Ln}}}Af}{{Bh{Fn{Mh}}}Af}{{Bh{Fn{n}}}Af}{{Bh{Fn{Mb}}}Af}{{Bh{Fn{Kb}}}Af}{{BhFh{f{Dn}}}Af}{{{f{Af}}FhFh}Af}{{{f{BOh}}Fh}{{Ah{Hn}}}}{{{f{Af}}}Fh}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOh}}}{{B`{{Lh{F`}}}}}}0{{{f{BOh}}Fh}{{B`{{f{If}}}}}}0{{{f{BOh}}FhFh}{{B`{{f{If}}}}}}0{{{f{BOh}}Fh}Hn}0{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}eB@j{}}{{{f{Af}}{f{Dl}}}c{}}021{{{f{BOh}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fh}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Fh}000{{}c{}}000{{}Eh}{AfBCl}2{BFjAf}{AfAf}>>{{{f{Af}}}{{Ah{Gf}}}}000{{{f{BOh}}}Gf}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCb}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOh}}}L`}0{{{f{BOh}}}Fh}{{{f{Af}}}Fh}{{{f{BOh}}Fh}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}c}eB@j{}}{{{f{Af}}{f{Dl}}}c{}}{{{f{Af}}{f{Af}}}c{}}120{{{f{Af}}}{{Ah{{B`{c}}}}}Kn}{{{f{BOh}}}{{Ah{L`}}}}0{{{f{BOh}}}{{B`{n}}}}0{{{f{Af}}}L`}11223224{{Afc}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}c}e{AbKn}{}}==<{{{f{BOh}}}{{Ah{Fh}}}}0{{{f{BOh}}}{{f{Bh}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kj{{Dh{Db}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Il}}}}}}}}{{Bhc}Af{{Kj{{Dh{Hn}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Mb}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{d}}}}}}}}{{Bhc}AfBFj}{{Bhc}Af{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}Af{{Kj{{Dh{n}}}}}}{{Bh{Md{Kb}}}Af}{{Bhc}Af{{Kj{{Dh{{B`{{AKl{{Dh{Df}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{AKl{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bh{Md{Ln}}}Af}{{Bh{Md{Il}}}Af}{{Bhc}Af{{Kj{{Dh{Ij}}}}}}{{Bh{Md{Mb}}}Af}{{Bhc}Af{{Kj{{Dh{Af}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Af}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Mh}}}}}}}}{{Bhc}Af{{Kj{{Dh{Mh}}}}}}{{Bhc}Af{{Kj{{Dh{Kb}}}}}}{{Bhc}Af{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{Ln}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{Il}}}}}}{{Bhc}Af{{Kj{{Dh{Mb}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{AKl{Dl}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{AKl{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{d}}}}}}{{Bhc}Af{{Kj{{Dh{{Fn{Df}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Ln}}}}}}}}{{Bh{f{Dn}}}Af}{{{f{BOh}}FhFh}Af}{{BhFh}Af}{{{f{BjCCb}}}{{B`{c}}}{}}{{{f{Af}}c}eB@j{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}12{{{f{Af}}{f{Dl}}}c{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOh}}}Fh}`{{{f{BOh}}}{{Ah{L`}}}}0{{{f{Af}}}BGl}{{{f{Af}}}{{Ah{L`}}}}{{{f{BOh}}nN`}{{Ah{L`}}}}0{{{f{BOh}}}Af}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}};{{{f{BjBOh}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dh{ANb}}}}}{{Ah{Af}}}}5{JnJn}{{{f{BOh}}{f{Cd}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fhdd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fh}Af}{{{f{BjAf}}Jn}b}{{{f{BOh}}Kb}Af}{{{f{BjBOh}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCb}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BOh}}KbFh}Af}{{{f{Af}}KbFh}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BOh}}Ed}{{Ah{Af}}}}0{{{f{BOh}}Kb}{{Hh{AfAf}}}}{{{f{Af}}Kb}{{Hh{AfAf}}}}{{{f{BOh}}Df}{{B`{n}}}}0{{{f{BOh}}Df}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Fh}{{Ah{{AKl{Dl}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}}{{Ah{c}}}Kn}{{{f{BOh}}}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{L`}}}}{{{f{Af}}{B`{Fh}}}Af}{{{f{BOh}}{f{Ef}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dh{I`}}}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dh{I`}}}}}Af}{{{f{BOh}}{f{Ef}}}Af}{{{f{Af}}{f{{Dh{I`}}}}}Af}{{{f{Af}}FhAMn}Fl}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{El}}}}}}{{{f{Af}}}{{B`{{f{AKf}}}}}}{{{f{Af}}}{{B`{{f{Gf}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}00{{{Hh{Bh{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{BhFl}}}{{Ah{Af}}}}2{{{Hh{{f{B@l}}{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}Fl}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Ef}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{E`}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dC`}{{{f{Af}}}{{B`{{f{D`}}}}}}4{f{{Ob{G`BAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOh}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOh}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BOh}}Df}{{B`{n}}}}0{{{f{BOh}}Df}{{Ah{L`}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKn}}{{{f{BOh}}}{{Ah{L`}}}}0{{{f{Af}}{f{Gf}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{cc{}}{{}Fh}{{}c{}}{{{CCd{Af}}}Ch}{{{f{BjCh}}{f{BjFl}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCh}}{f{BjFl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CCf{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CCh}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Ff}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{{l{Ff}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCj}}}CCj}{{f{f{Bjc}}}b{}}{fb}{{}CCj}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CCj}}{f{CCj}}}d}{{f{f{c}}}d{}}0{{{f{CCj}}{f{BjGl}}}Gn}{cc{}}{{{f{CCj}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{Fn{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}C`C`C`}{{}CCl}{{{f{CCn}}}d}0{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{DnFh}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}C`C`}{{CClCCl}CCl}{{{f{BjCCl}}CCl}b}10{{{f{CCl}}}Df}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CD`}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{{CDb{ec}}}}}{{CDb{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}C`}{{{f{Eh}}{f{Eh}}}{{Hh{EhEh}}}}{CDde{}{{CDf{c}}}}{CDde{}{{CDh{c}}}}{CClCCl}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CCl}}CCl}d}{{}CCl}{{}CCn}{Fh{{f{c}}}{}}{{{f{{CDj{c}}}}}{{f{e}}}{}{}}1{{{f{{AK`{c}}}}}{{f{e}}}{}{}}222{Fh{{f{Bjc}}}{}}{{{f{Bj{AK`{c}}}}}{{f{Bje}}}{}{}}1111{{CClCCl}CCl}{Fhb}0000{cBDl{{Hd{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CDj{Af}}}}{f{{CDj{Af}}}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{f{f{c}}}d{}}00000{{{f{BjCCl}}c}b{{Hd{}{{Bb{CCl}}}}}}``{{{f{CCl}}{f{BjGl}}}Gn}0000{{{f{CCn}}{f{BjGl}}}Gn}{cc{}}00{CClCCn}11{Df{{B`{CCl}}}}{DfCCl}00{c{{AK`{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{c{{AK`{Gf}}}{{Hd{}{{Bb{d}}}}}}{cCCl{{Hd{}{{Bb{CCl}}}}}}{eCDh{}{{Hd{}{{Bb{c}}}}}}32{{{f{Dl}}}{{B`{CCl}}}}{c{{AK`{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AK`{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{c{{AK`{Gf}}}{{Hl{}{{Bb{d}}}}}}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CCn}{{B`{Dn}}}}{{{f{ANd}}{f{ANd}}}ANd}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDj{Af}}}}{f{Bjc}}}bABf}{{{f{CCl}}{f{Bjc}}}bABf}{{{f{CCn}}{f{Bjc}}}bABf}{{}Fh}0000{{{f{BjCCl}}CCl}b}{{CClCCl}CCl}{{{f{CCl}}CCl}d}{{}c{}}0000{{{AK`{c}}}c{}}{CClc{}}2{BFn{{Fn{c}}}{}}{{}{{Fn{Bh}}}}{{{f{CCl}}}d}0{{{f{CCl}}}{{ACl{CCl}}}}{{{f{CD`}}}{{`{{Bf{}{{Bb{CD`}}}}}}}}{{{f{CCl}}}{{ACn{CCl}}}}{{{f{CD`}}}Fh}{MhHn}1{c{{AK`{c}}}{}}{{eFh}{{CDb{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFh}{{CDb{{CDn{{CDl{c}}}}c}}}A@n}{{{f{Bj{CDb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gd}}{CClCCl}{{{f{Dl}}}Db}`{{{f{BjCCl}}CCl}b}{{{f{BjCCl}}CCld}b}{{{f{{CDb{ec}}}}}{{Hh{Fh{B`{Fh}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CD`}}KbFh}CD`}{{{f{{Dh{c}}}}KbFh}{{f{{Dh{c}}}}}{}}{{{f{c}}Fh}{{Fn{c}}}CD`}0{{{f{CD`}}Kb}{{Hh{CD`CD`}}}}{{{f{BCl}}Fhd}{{Fn{BCl}}}}{{CClCCl}CCl}80{fc{}}009{{CDdFh}{{CDb{CDdc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dh{{Fn{c}}}}}}}{{Hh{Fh{Fn{Fh}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dh{c}}}}}{{AJj{I`}}}{{Kj{{Dh{Of}}}}JfJh}}{{{f{{Dh{e}}}}}{{Fn{c}}}{JfJhCf}{{Kj{{Dh{c}}}}}}{{{f{Af}}}{{Fn{Af}}}}","D":"JOl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5843],[5,"ListType",1535],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1535],[10,"Num",5844],[10,"ToPrimitive",5845],[5,"Series",5098],[8,"PolarsResult",4330,5846],[10,"NumOpsDispatchInner",5571,5847],[6,"GroupsProxy",3947,5848],[5,"BooleanType",1535],[6,"Option",5849],[17,"Item"],[8,"ArrayBox",5547],[10,"Iterator",5850],[5,"PlSmallStr",4330,5851],[0,"mut"],[17,"IsNested"],[5,"FalseT",1535],[10,"PolarsDataType",1535],[17,"Output"],[10,"Fn",5852],[10,"Copy",5853],[5,"AmortSeries",5547],[10,"FnMut",5852],[5,"Float64Type",1535],[5,"Float32Type",1535],[8,"StringChunked",1535],[5,"String",5854],[5,"BinaryType",1535],[1,"u8"],[1,"slice"],[5,"StringType",1535],[1,"str"],[6,"DataType",1535,5855],[8,"ListChunked",1535],[5,"View",5856],[5,"SortOptions",1452],[8,"IdxCa",1535,5857],[6,"Column",3685],[5,"SortMultipleOptions",1452],[8,"BinaryChunked",1535],[10,"PolarsIntegerType",1535],[10,"MetadataTrait",823,5858],[5,"Box",5859],[6,"CastOptions",736],[10,"NumOpsDispatchCheckedInner",5596,5860],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4330,5861],[5,"Vec",5862],[5,"CompactString",5863],[5,"MetadataProperties",823],[10,"DoubleEndedIterator",5864],[8,"BooleanChunked",1535],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5865],[8,"Result",5865],[10,"Array",5861],[17,"Array"],[10,"IntoIterator",5866],[5,"Bitmap",5867],[1,"tuple"],[10,"IntoParallelIterator",5868],[10,"TrustedLen",5869],[6,"AnyValue",1535,5870],[8,"IdxSize",4330,5871],[5,"MetadataFlags",823],[5,"ObjectType",1535],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",823],[5,"RwLockWriteGuard",5872],[5,"Int128Type",1535],[8,"DecimalChunked",1535,5873],[10,"Send",5853],[10,"Sync",5853],[10,"ExactSizeIterator",5874],[10,"PolarsFloatType",1535],[6,"IsSorted",5098,5875],[10,"PolarsIterator",784],[1,"i64"],[5,"Iter",5876],[1,"fn"],[5,"Map",5877],[10,"AsRef",5878],[6,"ChunkedArrayLayout",40],[10,"NumCast",5845],[5,"Scalar",5035],[6,"MetadataReadGuard",823,5879],[5,"IMMetadata",823,5880],[5,"Arc",4330,5881],[5,"RwLockReadGuard",5872],[5,"UInt64Type",1535],[5,"Int32Type",1535],[1,"i32"],[5,"Int64Type",1535],[1,"u32"],[5,"Range",5882],[5,"UInt32Type",1535],[1,"i128"],[5,"Field",1535,5883],[10,"ParallelIterator",5868],[10,"IndexedParallelIterator",5868],[6,"QuantileInterpolOptions",4330,5884],[5,"RollingOptionsFixedWindow",4330,5885],[10,"Sized",5853],[17,"IsStruct"],[8,"PlRandomState",1535,5886],[5,"BytesHash",5887],[8,"ArrayView1",5888],[8,"Array2",5888],[6,"Either",5889],[6,"Result",5890],[5,"TypeId",5891],[5,"NullableIdxSize",4330,5871],[10,"FnOnce",5852],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",446,5892],[10,"ChunkedBuilder",474],[5,"BinViewChunkedBuilder",474,5893],[10,"ViewType",5894],[5,"BooleanChunkedBuilder",474,5895],[5,"NullChunkedBuilder",474,5896],[5,"PrimitiveChunkedBuilder",474,5897],[10,"Clone",5898],[8,"StringChunkedBuilder",474,5893],[8,"BinaryChunkedBuilder",474,5893],[10,"NewChunkedArray",474],[5,"AnonymousListBuilder",582,5899],[5,"AnonymousOwnedListBuilder",582,5899],[5,"ListBooleanChunkedBuilder",582,5900],[5,"ListPrimitiveChunkedBuilder",582,5901],[10,"ListBuilderTrait",582],[5,"ListStringChunkedBuilder",582,5902],[5,"ListBinaryChunkedBuilder",582,5902],[5,"ListNullChunkedBuilder",582,5903],[10,"Hasher",5904],[10,"ChunkedCollectInferIterExt",764],[10,"ChunkedCollectIterExt",764],[10,"Canonical",778],[10,"ChunkedCollectParIterExt",780],[10,"FromParIterWithDtype",780],[5,"BooleanArray",5905],[5,"BoolIterNoNull",784],[5,"SomeIterator",784],[5,"MetadataEnv",823,5906],[10,"MetadataCollectable",823,5907],[5,"Iter",5908],[5,"IterNames",5908],[5,"File",5909],[5,"Mutex",5910],[6,"MetadataMerge",823],[5,"RwLock",5872],[5,"ObjectArray",1109],[6,"ArrowDataType",1535,5911],[10,"Any",5891],[10,"Debug",5865],[5,"BitmapIter",5912],[6,"ZipValidity",5913],[8,"ObjectValueIter",1109],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1535],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[10,"ChunkAgg",1237],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompareEq",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5914],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"ChunkCompareIneq",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1366],[10,"StaticArray",1535,5915],[10,"TernaryFnMut",1366],[10,"Error",5916],[10,"UnaryFnMut",1366],[5,"PrimitiveArray",5917],[6,"SearchSortedSide",1407],[10,"SlicedArray",4330,5918],[5,"NoNull",5630],[5,"RowsEncoded",5919],[5,"BinaryArray",5920],[8,"BinaryOffsetChunked",1535],[5,"NaiveDateTime",5921],[6,"PolarsError",4330,5846],[6,"Cow",5922],[8,"Float32Chunked",1535],[8,"Float64Chunked",1535],[10,"ArrayFromIter",1535,5923],[10,"ArrayFromIterDtype",1535,5923],[10,"AsRefDataType",1535,5855],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5924],[10,"From",5878],[5,"CategoricalChunked",3046,5925],[10,"CategoricalMergeOperation",3046,5926],[10,"LogicalType",1535,5927],[5,"Logical",1535,5927],[5,"OwnedObject",1535,5870],[6,"UnknownKind",1535,5855],[5,"CompatLevel",1535,5855],[5,"Dimension",1535,5928],[6,"ReshapeDimension",1535,5928],[6,"TimeUnit",1535,5929],[5,"UInt8Type",1535],[5,"UInt16Type",1535],[5,"Int8Type",1535],[5,"Int16Type",1535],[5,"DateType",1535],[5,"TimeType",1535],[5,"BinaryOffsetType",1535],[5,"DecimalType",1535],[5,"DatetimeType",1535],[5,"DurationType",1535],[5,"CategoricalType",1535],[6,"ArrowTimeUnit",1535],[6,"Ordering",5930],[10,"ArrayCollectIterExt",4330,5923],[8,"Utf8ViewArray",5894],[8,"UInt32Chunked",1535],[5,"Error",5865],[10,"Into",5878],[10,"NumericNative",1535],[5,"ArrowField",4330],[6,"IntegerType",5931],[6,"PrimitiveType",5932],[10,"Borrow",5933],[10,"NoOption",5934],[10,"GetAnyValue",1535,5870],[8,"Int128Chunked",1535],[10,"IntoScalar",1535,5935],[6,"PhysicalType",5931],[6,"ToCompactStringError",5863],[8,"UInt8Chunked",1535],[8,"UInt16Chunked",1535],[8,"UInt64Chunked",1535],[8,"Int8Chunked",1535],[8,"Int16Chunked",1535],[8,"Int32Chunked",1535],[8,"Int64Chunked",1535],[8,"PlIdHashMap",1535,5857],[5,"CategoricalChunkedBuilder",3046,5936],[5,"GlobalRevMapMerger",3046,5926],[6,"RevMapping",3188,5937],[6,"CategoricalOrdering",3188,5937],[5,"CatIter",3046,5925],[1,"u128"],[5,"DataFrame",3401],[5,"StringCacheHolder",3242,5938],[5,"EnumChunkedBuilder",3261,5939],[5,"ErrString",3289,5846],[6,"PolarsWarning",3289,5940],[10,"Display",5865],[6,"FloatFmt",3370],[1,"char"],[8,"Schema",5076],[10,"IntoColumn",3685],[6,"NullStrategy",3401],[6,"UniqueKeepStrategy",3401],[8,"PlHashSet",1535,5886],[8,"ArrowSchema",4330,5941],[5,"Row",4202],[5,"GroupBy",3947],[5,"RangeTo",5882],[5,"RangeInclusive",5882],[5,"RangeToInclusive",5882],[5,"RangeFrom",5882],[5,"RangeFull",5882],[5,"RecordBatchIter",3401],[5,"PhysRecordBatchIter",3401],[10,"IntoSeries",5098,5942],[10,"RangeBounds",5882],[10,"IntoVec",5630],[8,"SchemaRef",5076],[6,"IndexOrder",4330,5943],[5,"StructArray",5944],[8,"RecordBatch",5945],[5,"ScalarColumn",3685,5946],[6,"BitRepr",5098,5875],[8,"SeriesPhysIter",5098,5947],[5,"UnpivotArgsIR",3919],[5,"GroupsIdx",3947,5848],[8,"IdxVec",5948],[6,"GroupByMethod",3947],[5,"SlicedGroups",3947,5848],[5,"GroupsProxyParIter",3947,5848],[10,"UnindexedConsumer",5949],[6,"GroupsIndicator",3947,5848],[8,"IdxItem",3947,5848],[10,"IntoGroupsProxy",3947,5950],[5,"Copied",5951],[5,"Zip",5952],[5,"GroupsProxyIter",3947,5848],[8,"GroupsSlice",3947,5848],[1,"array"],[6,"RollingFnParams",4330,5953],[10,"IsFloat",5954],[10,"NativeType",5955],[10,"AggList",4186,5956],[10,"TakeExtremum",4186],[10,"PhysicalAggExpr",4199],[6,"AnyValueBuffer",4202,5957],[6,"AnyValueBufferTrusted",4202,5957],[5,"IdHasher",4300,5958],[10,"VecHash",4300,5959],[10,"Allocator",5960],[5,"BorrowedFd",5961],[10,"AsFd",5961],[10,"AsRawFd",5962],[5,"Path",5963],[5,"OsStr",5964],[20,"MaybeUninit",5965],[10,"NumOpsDispatchChecked",4330,5860],[5,"ChunkId",4330,5871],[5,"RollingVarParams",4330,5953],[5,"RollingQuantileParams",4330,5953],[6,"NonExistent",4330,5966],[10,"Ord",5930],[5,"CStr",5967],[10,"Default",5968],[5,"Weak",5881],[10,"Scalar",5969],[10,"PartialEq",5930],[5,"Error",5970],[5,"TryReserveError",5971],[5,"Utf8Error",5972],[6,"Error",5973],[5,"OsString",5964],[1,"never"],[5,"CString",5974],[5,"PathBuf",5963],[10,"ToOwned",5922],[10,"FromData",4957,5975],[5,"Buffer",5976],[10,"FromDataUtf8",4957,5975],[10,"FromDataBinary",4957,5975],[5,"ListArray",5977],[6,"Ambiguous",4330,5966],[10,"NamedFromOwned",4330,5978],[10,"PartialOrd",5930],[10,"Hash",5904],[10,"SeriesTrait",5098,5875],[10,"CloneToUninit",5898],[10,"ChunkAggSeries",4330,5979],[10,"QuantileAggSeries",4330,5980],[10,"IndexToUsize",4330,5981],[10,"NamedFrom",4330,5978],[5,"Pin",5982],[5,"Request",5916],[5,"BorrowedCursor",5983],[5,"IoSliceMut",5984],[6,"SeekFrom",5984],[10,"VarAggSeries",4330,5985],[5,"AllocError",5960],[5,"BTreeMap",5986],[5,"Arguments",5865],[5,"IoSlice",5984],[5,"AnonymousBuilder",4963,5987],[5,"Offsets",5914],[5,"MutableNullArray",4986,5988],[5,"MutableBitmap",5989],[5,"Utf8Array",5990],[1,"i8"],[1,"i16"],[1,"u16"],[5,"Schema",5991],[10,"SchemaExt",5076],[17,"DataType"],[10,"SchemaNamesAndDtypes",5076],[8,"Metadata",5911],[5,"SeriesIter",5098,5947],[5,"Rc",5992],[10,"LhsNumOps",5571,5847],[10,"NumOpsDispatch",5571,5847],[6,"NullBehavior",5604],[5,"SuperTypeFlags",5630,5993],[5,"SuperTypeOptions",5630,5993],[10,"Container",5630],[5,"TrustMyLength",5630,5869],[10,"CustomIterTools",5630,5994],[10,"FromIteratorReversed",5995],[10,"FromTrustedLenIterator",5630,5994],[5,"Wrap",5630],[5,"Repeat",5996],[5,"Take",5997],[8,"FillNullLimit",1237],[10,"InitHashMaps",1535],[10,"InitHashMaps2",1535],[5,"TrueT",1535],[15,"IO",3356],[15,"Context",3356],[15,"Count",4183],[15,"Slice",4184],[10,"ListFromIter",4330],[10,"Utf8FromIter",5030],[10,"BinaryFromIter",5030]],"r":[[0,5958],[4,5938],[13,5938],[16,5938],[32,5938],[446,5892],[474,5893],[475,5893],[476,5895],[479,5896],[480,5897],[481,5893],[582,5899],[583,5899],[584,5902],[585,5900],[587,5903],[588,5901],[589,5902],[828,5880],[834,5907],[835,5906],[839,5879],[840,5858],[1156,5998],[1436,5918],[1452,5918],[1536,5870],[1538,5923],[1539,5923],[1540,5923],[1541,5911],[1543,5855],[1559,5925],[1562,5925],[1563,5936],[1564,5926],[1565,5937],[1568,5855],[1569,5855],[1570,5855],[1571,5855],[1582,5873],[1585,5928],[1594,5883],[1595,5883],[1610,5870],[1612,5926],[1616,5857],[1617,5981],[1618,5857],[1619,5857],[1621,5886],[1622,5857],[1647,5935],[1661,5927],[1662,5927],[1680,5870],[1684,5886],[1685,5886],[1686,5857],[1687,5886],[1688,5886],[1689,5886],[1690,5851],[1696,5928],[1697,5937],[1700,5915],[1712,5929],[1713,5855],[1740,5855],[1945,5926],[1962,5927],[2076,5855],[2208,5927],[2616,5926],[2617,5926],[2629,5855],[2721,5925],[2760,5925],[3046,5925],[3047,5925],[3048,5936],[3049,5926],[3050,5937],[3052,5926],[3056,5937],[3073,5926],[3140,5926],[3141,5926],[3159,5925],[3163,5925],[3188,5937],[3193,5937],[3242,5938],[3248,5938],[3251,5938],[3259,5938],[3261,5939],[3279,5937],[3284,5937],[3285,5938],[3286,5938],[3287,5938],[3288,5938],[3295,5846],[3302,5846],[3303,5846],[3304,5940],[3318,5846],[3326,5846],[3333,5940],[3338,5846],[3340,5846],[3341,5846],[3342,5846],[3343,5846],[3344,5940],[3345,5846],[3360,5999],[3361,5999],[3362,5999],[3363,4300],[3688,5946],[3947,5848],[3953,5848],[3954,5848],[3955,5848],[3956,5848],[3957,5848],[3958,5848],[3961,5848],[3963,5950],[3975,5848],[4186,5956],[4204,5957],[4205,5957],[4299,6000],[4300,5958],[4301,5958],[4302,5959],[4305,5959],[4306,5959],[4330,5966],[4331,5881],[4332,5892],[4333,5923],[4334,5861],[4336,5941],[4337,5893],[4338,5895],[4340,5925],[4341,5925],[4342,5936],[4343,5926],[4344,5937],[4345,5979],[4346,5871],[4347,40],[4348,474],[4349,764],[4350,764],[4351,3685],[4355,3401],[4362,5975],[4363,5975],[4364,5975],[4366,5926],[4369,5981],[4370,5871],[4371,5943],[4372,5981],[4373,3685],[4374,5942],[4375,5630],[4377,6001],[4378,6001],[4379,6001],[4382,5847],[4384,5902],[4385,5900],[4386,582],[4387,6002],[4388,5901],[4389,5902],[4393,5978],[4394,5978],[4396,474],[4398,5966],[4401,5871],[4402,5871],[4403,5847],[4404,5860],[4408,5851],[4409,5846],[4410,784],[4411,1109],[4412,5846],[4413,5897],[4415,5980],[4416,5884],[4419,5937],[4420,5953],[4421,5885],[4422,5953],[4423,5953],[4426,5035],[4429,5098],[4430,5875],[4432,5918],[4433,5938],[4435,5893],[4437,3401],[4438,3919],[4440,5985],[4441,5959],[4496,5926],[4547,6002],[4548,0],[4561,6002],[4593,0],[4741,5981],[4787,6002],[4789,5926],[4790,5926],[4816,6002],[4823,5846],[4824,5846],[4825,5846],[4826,5846],[4838,5925],[4840,6002],[4846,5925],[4927,6002],[4957,5975],[4958,5975],[4959,5975],[4963,5987],[4986,5988],[5017,5937],[5022,5937],[5023,5918],[5026,5938],[5027,5938],[5028,5938],[5029,5938],[5030,6003],[5031,6003],[5100,5875],[5101,1237],[5104,5942],[5105,5875],[5106,5875],[5111,5947],[5112,5947],[5113,5875],[5571,5847],[5572,5847],[5573,5847],[5579,5847],[5596,5860],[5597,5860],[5633,5994],[5634,5994],[5635,5994],[5638,5993],[5639,5993],[5640,5869],[5655,6004],[5656,6004],[5716,6005],[5717,5993],[5757,5993],[5758,5993],[5760,6006],[5788,5993],[5820,5993],[5837,6006]],"b":[[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkedArray%3CT%3E"],[74,"impl-ChunkedArray%3CStringType%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[127,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-Debug-for-ChunkedArray%3CT%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[160,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[188,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[231,"impl-Container-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[242,"impl-ChunkedArray%3CBooleanType%3E"],[244,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[245,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[262,"impl-Mul-for-ChunkedArray%3CT%3E"],[263,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[264,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[278,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[280,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[281,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[287,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[292,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkedArray%3CListType%3E"],[308,"impl-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkedArray%3CStringType%3E"],[310,"impl-ChunkedArray%3CListType%3E"],[322,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[323,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[324,"impl-Rem-for-ChunkedArray%3CT%3E"],[325,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[345,"impl-ChunkedArray%3CT%3E"],[348,"impl-Container-for-ChunkedArray%3CT%3E"],[349,"impl-ChunkedArray%3CT%3E"],[352,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[353,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[354,"impl-Sub-for-ChunkedArray%3CT%3E"],[355,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[357,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkedArray%3CBooleanType%3E"],[361,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkedArray%3CT%3E"],[371,"impl-ChunkedArray%3CListType%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[379,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[530,"impl-BinViewChunkedBuilder%3Cstr%3E"],[531,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[861,"impl-Flags-for-MetadataProperties"],[862,"impl-MetadataProperties"],[863,"impl-MetadataFlags"],[864,"impl-Flags-for-MetadataFlags"],[928,"impl-MetadataTrait-for-Metadata%3CT%3E"],[929,"impl-Metadata%3CT%3E"],[954,"impl-Debug-for-MetadataProperties"],[955,"impl-UpperHex-for-MetadataProperties"],[956,"impl-Binary-for-MetadataProperties"],[957,"impl-Octal-for-MetadataProperties"],[958,"impl-LowerHex-for-MetadataProperties"],[959,"impl-Octal-for-MetadataFlags"],[960,"impl-LowerHex-for-MetadataFlags"],[961,"impl-Debug-for-MetadataFlags"],[962,"impl-Binary-for-MetadataFlags"],[963,"impl-UpperHex-for-MetadataFlags"],[973,"impl-MetadataProperties"],[974,"impl-Flags-for-MetadataProperties"],[975,"impl-Flags-for-MetadataFlags"],[976,"impl-MetadataFlags"],[987,"impl-MetadataTrait-for-Metadata%3CT%3E"],[988,"impl-Metadata%3CT%3E"],[1031,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1032,"impl-Metadata%3CT%3E"],[1036,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1151,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1152,"impl-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1178,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1179,"impl-ObjectArray%3CT%3E"],[1180,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1187,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1781,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1782,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1783,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1784,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1785,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1786,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1787,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1788,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1864,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1865,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1866,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1867,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1868,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1869,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2211,"impl-PartialEq-for-DataType"],[2212,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2223,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2224,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2225,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2226,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2229,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2230,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2231,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2232,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2266,"impl-Display-for-AnyValue%3C\'_%3E"],[2267,"impl-Debug-for-AnyValue%3C\'a%3E"],[2269,"impl-Display-for-DataType"],[2270,"impl-Debug-for-DataType"],[2274,"impl-Debug-for-ReshapeDimension"],[2275,"impl-Display-for-ReshapeDimension"],[2276,"impl-Debug-for-TimeUnit"],[2277,"impl-Display-for-TimeUnit"],[2288,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2290,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2291,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2292,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2293,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2295,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2296,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2297,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2300,"impl-From%3C%26Field%3E-for-Field"],[2302,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2328,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2329,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2332,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2333,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2334,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2336,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2337,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2338,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2339,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2345,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2346,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2348,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2349,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2350,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2351,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2352,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2353,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2360,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2361,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2362,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2363,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2364,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2365,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2457,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2458,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2459,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2460,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2462,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2463,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2464,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2465,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2607,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2608,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2609,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2610,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2612,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2613,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2614,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2615,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2651,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2652,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2653,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2654,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2655,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2656,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2657,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2658,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2659,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2660,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2676,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2677,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2680,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2681,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2682,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2683,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2686,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2687,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2688,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2689,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2773,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2774,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2775,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2776,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3093,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3115,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3116,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3117,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3118,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3134,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3136,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3137,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3139,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3150,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3151,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3152,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3153,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3154,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3155,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3328,"impl-Debug-for-ErrString"],[3329,"impl-Display-for-ErrString"],[3426,"impl-Add%3C%26Series%3E-for-DataFrame"],[3427,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3428,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3471,"impl-Div%3C%26Series%3E-for-DataFrame"],[3472,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3473,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3504,"impl-Debug-for-DataFrame"],[3505,"impl-Display-for-DataFrame"],[3511,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3512,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3538,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3539,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3540,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3541,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3542,"impl-Index%3Cusize%3E-for-DataFrame"],[3543,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3544,"impl-Index%3C%26str%3E-for-DataFrame"],[3545,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3563,"impl-DataFrame"],[3564,"impl-Container-for-DataFrame"],[3571,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3572,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3573,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3574,"impl-DataFrame"],[3575,"impl-Container-for-DataFrame"],[3592,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3593,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3594,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3621,"impl-DataFrame"],[3622,"impl-Container-for-DataFrame"],[3626,"impl-DataFrame"],[3627,"impl-Container-for-DataFrame"],[3630,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3631,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3632,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3652,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3653,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3692,"impl-Add-for-Column"],[3693,"impl-Add%3CT%3E-for-Column"],[3694,"impl-Add%3CT%3E-for-%26Column"],[3695,"impl-Add-for-%26Column"],[3718,"impl-BitAnd-for-%26Column"],[3719,"impl-Column"],[3720,"impl-BitAnd-for-Column"],[3721,"impl-BitOr-for-%26Column"],[3722,"impl-BitOr-for-Column"],[3723,"impl-BitXor-for-%26Column"],[3724,"impl-BitXor-for-Column"],[3750,"impl-Div%3CT%3E-for-%26Column"],[3751,"impl-Div-for-%26Column"],[3752,"impl-Div%3CT%3E-for-Column"],[3753,"impl-Div-for-Column"],[3777,"impl-From%3CScalarColumn%3E-for-Column"],[3778,"impl-From%3CSeries%3E-for-Column"],[3824,"impl-Mul%3CT%3E-for-Column"],[3825,"impl-Mul-for-%26Column"],[3826,"impl-Mul%3CT%3E-for-%26Column"],[3827,"impl-Mul-for-Column"],[3842,"impl-Rem-for-Column"],[3843,"impl-Rem%3CT%3E-for-%26Column"],[3844,"impl-Rem%3CT%3E-for-Column"],[3845,"impl-Rem-for-%26Column"],[3864,"impl-Sub%3CT%3E-for-%26Column"],[3865,"impl-Sub%3CT%3E-for-Column"],[3866,"impl-Sub-for-%26Column"],[3867,"impl-Sub-for-Column"],[4061,"impl-Debug-for-GroupByMethod"],[4062,"impl-Display-for-GroupByMethod"],[4069,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4070,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4103,"impl-IntoIterator-for-GroupsIdx"],[4104,"impl-IntoIterator-for-%26GroupsIdx"],[4106,"impl-IntoParallelIterator-for-GroupsIdx"],[4107,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4458,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4459,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4460,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4461,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4464,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4465,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4553,"impl-Default-for-Arc%3CCStr%3E"],[4554,"impl-Default-for-Arc%3CT%3E"],[4555,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4556,"impl-Default-for-Arc%3Cstr%3E"],[4616,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4617,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4618,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4644,"impl-Display-for-PolarsError"],[4645,"impl-Debug-for-PolarsError"],[4646,"impl-Display-for-PlSmallStr"],[4647,"impl-Debug-for-PlSmallStr"],[4650,"impl-Pointer-for-Arc%3CT,+A%3E"],[4651,"impl-Debug-for-Arc%3CT,+A%3E"],[4652,"impl-Display-for-Arc%3CT,+A%3E"],[4662,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4663,"impl-From%3CError%3E-for-PolarsError"],[4665,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4666,"impl-From%3CError%3E-for-PolarsError"],[4667,"impl-From%3C%26String%3E-for-PlSmallStr"],[4668,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4670,"impl-From%3CString%3E-for-PlSmallStr"],[4671,"impl-From%3C%26str%3E-for-PlSmallStr"],[4675,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4676,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4677,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4678,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4679,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4680,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4681,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4684,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4685,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4686,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4687,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4688,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4689,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4690,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4691,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4692,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4705,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4706,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4707,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4708,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4709,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4710,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4711,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4712,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[5049,"impl-From%3Cf32%3E-for-Scalar"],[5051,"impl-From%3Ci8%3E-for-Scalar"],[5052,"impl-From%3Ci16%3E-for-Scalar"],[5053,"impl-From%3Ci32%3E-for-Scalar"],[5054,"impl-From%3Ci64%3E-for-Scalar"],[5055,"impl-From%3Cu8%3E-for-Scalar"],[5056,"impl-From%3Cu16%3E-for-Scalar"],[5057,"impl-From%3Cu32%3E-for-Scalar"],[5058,"impl-From%3Cf64%3E-for-Scalar"],[5059,"impl-From%3Cu64%3E-for-Scalar"],[5121,"impl-Add-for-Series"],[5122,"impl-Add-for-%26Series"],[5123,"impl-Add%3CT%3E-for-Series"],[5124,"impl-Add%3CT%3E-for-%26Series"],[5198,"impl-Div-for-%26Series"],[5199,"impl-Div-for-Series"],[5200,"impl-Div%3CT%3E-for-%26Series"],[5201,"impl-Div%3CT%3E-for-Series"],[5213,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5214,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5215,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5216,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5217,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5218,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5236,"impl-Debug-for-Series"],[5237,"impl-Display-for-Series"],[5249,"impl-FromIterator%3C%26i64%3E-for-Series"],[5250,"impl-FromIterator%3C%26bool%3E-for-Series"],[5251,"impl-FromIterator%3C%26f64%3E-for-Series"],[5252,"impl-FromIterator%3Cf64%3E-for-Series"],[5253,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5254,"impl-FromIterator%3C%26f32%3E-for-Series"],[5255,"impl-FromIterator%3Cf32%3E-for-Series"],[5256,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5257,"impl-FromIterator%3CString%3E-for-Series"],[5258,"impl-FromIterator%3Ci64%3E-for-Series"],[5259,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5260,"impl-FromIterator%3C%26i32%3E-for-Series"],[5261,"impl-FromIterator%3Ci32%3E-for-Series"],[5262,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5263,"impl-FromIterator%3C%26u64%3E-for-Series"],[5264,"impl-FromIterator%3Cu64%3E-for-Series"],[5265,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5266,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5267,"impl-FromIterator%3Cu32%3E-for-Series"],[5268,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5269,"impl-FromIterator%3C%26str%3E-for-Series"],[5270,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5271,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5272,"impl-FromIterator%3Cbool%3E-for-Series"],[5273,"impl-FromIterator%3C%26u32%3E-for-Series"],[5274,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5275,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5276,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5277,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5278,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5279,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5280,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5295,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5296,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5297,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5298,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5299,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5300,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5345,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5346,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5347,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5348,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5349,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5350,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5364,"impl-Mul-for-%26Series"],[5365,"impl-Mul%3CT%3E-for-Series"],[5366,"impl-Mul-for-Series"],[5367,"impl-Mul%3CT%3E-for-%26Series"],[5374,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5375,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5376,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5377,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5378,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5379,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5380,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5381,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5382,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5383,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5384,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5385,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5386,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5387,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5388,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5389,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5390,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5391,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5392,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5393,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5394,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5395,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5396,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5397,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5398,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5399,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5400,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5401,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5402,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5403,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5404,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5405,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5406,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5407,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5408,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5409,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5410,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5415,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5416,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5417,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5418,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5419,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5420,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5431,"impl-Rem%3CT%3E-for-Series"],[5432,"impl-Rem%3CT%3E-for-%26Series"],[5433,"impl-Rem-for-%26Series"],[5465,"impl-Sub-for-%26Series"],[5466,"impl-Sub%3CT%3E-for-%26Series"],[5467,"impl-Sub%3CT%3E-for-Series"],[5468,"impl-Sub-for-Series"],[5496,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5497,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5499,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5500,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5663,"impl-SuperTypeFlags"],[5664,"impl-Flags-for-SuperTypeFlags"],[5731,"impl-LowerHex-for-SuperTypeFlags"],[5732,"impl-UpperHex-for-SuperTypeFlags"],[5733,"impl-Debug-for-SuperTypeFlags"],[5734,"impl-Octal-for-SuperTypeFlags"],[5735,"impl-Binary-for-SuperTypeFlags"],[5744,"impl-SuperTypeFlags"],[5745,"impl-Flags-for-SuperTypeFlags"],[5747,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5748,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5751,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5752,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5755,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5756,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAJAP2Q8UEBcQGBAZEBoQGxAgECMQKBApEE8Q","e":"OzAAAAEAAFURPAIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQABABsAAMAcQACAHgADQCHAAMAjAACAJAABACWAAAAmAABAJwABQCkAAMAqgADAK8ABQC2AAEAuwAFAMMAAgDKAAUA0QADANgAAgDdAAIA4QAHAO4ADAAAAQMABgEGAA4BGwAtAQMAMgEAADQBBAA6AQEAQAEBAEMBBABJAQAATgEFAFYBAQBZAQAAWwECAF8BCQBvAQEAdQEAAHkBCACDAQgAjQEAAI8BBQCXAQAAmQEjAL4BKQDsAQIA8gEnACACBQAqAgAALAImAFUCTACpAgwAvQIkAOUCDQD0AgEA9wIZABQDCQAgAwEAJAMBACcDFQA+AwkASQMKAF4DAABhAwAAZgMNAHUDEACKAxIAnwMAAKEDCQCtAwMAswMBALcDDQDPAwEA2AMHAOEDBwD2AwEA+gMAAP0DAwAFBAUADAQEABgECwArBAQAMgQNAEIEBgBMBAgAVgQBAFoEFgByBAgAfAQAAH4EAACABAAAggQBAIcEEACZBAAAmwQAAJ0EAgChBAMApgQBAKkEBwCyBAAAtAQFALwEAQC/BAAAwQQBAMQEAwDJBAMAzgQCANIEAwDYBAAA2wQAAOQEAADpBAAA7AQBAPEEAQD0BAAA9wQBAAIFAQAMBQIAEgUGABsFAgAgBQEAIwUAACUFAQArBQEALgUCADYFAQA8BQAAPwUAAEIFAABEBQAARgUAAEgFAABNBQQAVAUBAFcFBwBgBQEAYwUAAGcFAABpBQMAbgUBAHEFBQB9BRUAlAUBAJgFBACeBQMApQUHALAFEQDEBQkAzwUBANIFAwDiBQkA+AUNAAgGAgAMBgUAFAYAABYGDgAoBgAAKgYAAC8GAQAyBgEANQYDADoGAAA8BgAAPwYAAEIGAABEBgEARwYAAEkGAgBNBg0AXAYAAF4GAQBhBgAAYwYBAGYGAABoBgEAawYAAG0GAQBwBgMAdwYAAHsGAQB/BgAAggYAAIQGAACGBgMAiwYAAI4GCACYBgIAnQYDAKIGAACkBgIAqQYAAKsGAACwBgIAtAYBALcGAAC5BgEAvAYAAL4GAQDBBgAAwwYBAMYGAADIBgEAywYAAM0GAADQBj4AFQcEABwHCQAnBwQALQcDADIHBAA4BwAAOgdjAJ8HdAAVCIYAnQgAAKAISQDxCAAA8wgDAPgIAgD9CAAA/wgAAAMJAAAZCQEAHAkXADgJJQBgCQYAaQkeAIsJAQCQCUIA1QkAAPsJCwAJCgAACwoCAA8KAQASCgAAFwoHACAKAAAjCgIAKAoDAC0KAAAvChsATAoKAFgKDQBnCiEAigoIAJQKGwCxChYAyQoNANwKAADeCgAA4AoAAOQKHwAGCwUADQtWAGULMACXC04A5wsEAO0LAQDwCwIA9AsEAPoLJAAmDAIAKgwJADgMBAA+DBcAWAwBAFsMBABhDA0AcAwFAHcMAAB5DBcAkgwBAJgMAgCdDAEAoQwJAKwMBACyDAEAtwwAALkMAgC9DAoAyQwAAMsMBQDSDAAA1AwBANoMBADgDAQA5gwQAPgMCgAEDQAABg0CAAsNBQASDSUAOQ0FAEANCQBNDQAAUA0LAF4NAwBjDQMAbA0VAIQNEwChDQEApQ0BAKgNAACqDQAArw0DAMENAADIDQAAyw0BANMNDADmDQEA7Q0AAO8NAQD0DQIA+A0AAP4NAQABDgAACQ4CABEOAAAUDgAAGw4AACQOAQAnDgEALA4FADkOBABBDgYASg4KAFYOAABbDgQAaA4AAGoOBgB8DgIAgQ4BAIQOEACXDhoAtA4LAMIOAQDFDgYAzw4JANsOAwDgDggA6g4CAO8ODQD/DgoACw8TACEPAAAkDwIAKA8eAEgPBwBRDw0AYA8CAGQPCgBwDwEAcw8DAHgPAwB9DwkAiA8HAJEPAQCUDxwAsg8mANoPBgDmDwIA7A8CAPEPAAD2DwcABhANABUQAQAcEAMAIRABACUQAgAqEAAALBAgAFAQDABfEAUAZhAHAG8QFgCIEA4AmBANAKcQAACpEAAAqxADALIQBgC8EA4AzRANANwQAADeEAIA4xAIAO0QAgDyEAcA+xANAAoRAwAPERcAKBENADcRAQA6ERYAUxETAGgRAABqEQYAcxEfAJURAwCaESAAvBEHAMURAQDJEQAAzhEkAPYRAwD7EQkABxICAAsSKgA3EgEAOhIDAD8SAgBMEgAAUhIAAF8SAABiEgcAcBIAAHMSAwB7EgAAfRIGAIYSEQCmEgAAqhIDAK8SAwC0EgAAthIBANESAwDYEgQA3xIAAOISBwDsEgAA7hIBAPMSMQAtEwIAMRMNAEATAABCEw0AVBMNAGQTBgBsEwAAbhMdAI0TAACPEwsAnBMAAJ4TAQCnExMAvBMJAMgTFwDhEwAA4xMCAOcTAADpEwAA6xMFAPITBAD4EwUAAhQEAA4UAAAUFAIAHBQFACMUCwAyFAMANxQAADsUAgA/FAMARRQSAFwUAQBfFAIAYxQAAGYUAQB0FAMAexQAAH8UAQCCFCAAphQAAKgUAQCxFAIAtRQAALcUAAC9FAEAwBQDAMgUBADVFAMA2hQAAN4UAADiFAEA5RQBAO0UAAD1FAMA+xQAAP8UAwAEFR8AJhUCACoVAAAsFQEAMBUAADMVAAA4FQIAPRUAAD8VAABDFQIAShUBAE0VAABPFQEAUhUAAFgVAABaFQMAahUBAG0VAQB2FQcAghUEAIgVAQCNFQEAkxUDAJ4VAACjFQMAqBUAAK0VCwC6FQAAvBUAAL4VBADEFRoA4hUCAOcVDgD3FQEA+hUEAAEWAwAHFggAEhYAABYWAQAaFgEAIRYAACQWEwA5FgIAQBYOAFAWBABYFggAYhYHAG0WAAByFgAAdBYBAHcWAgB7FgMAgBYJAJIWBACaFgAAnBYDAKIWAQClFgEAqRYCAK4WAACzFgIAuBYEAL4WCQDJFgQAzxYEAA=="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[675,"polars_io::csv::read::buffer"],[749,"polars_io::csv::read::buffer::Buffer"],[752,"polars_io::csv::read::schema_inference"],[779,"polars_io::csv::write"],[924,"polars_io::file_cache"],[945,"polars_io::ipc"],[1184,"polars_io::json"],[1282,"polars_io::mmap"],[1304,"polars_io::ndjson"],[1306,"polars_io::ndjson::core"],[1410,"polars_io::parquet"],[1413,"polars_io::parquet::metadata"],[1466,"polars_io::parquet::read"],[1610,"polars_io::parquet::read::_internal"],[1632,"polars_io::parquet::write"],[1856,"polars_io::partition"],[1857,"polars_io::path_utils"],[1864,"polars_io::pl_async"],[1886,"polars_io::predicates"],[1954,"polars_io::prelude"],[1965,"polars_io::utils"],[1976,"polars_io::utils::byte_source"],[2057,"polars_io::utils::compression"],[2075,"polars_io::utils::slice"],[2094,"dyn_clone::sealed"],[2095,"polars_io::options"],[2096,"core::result"],[2097,"serde::de"],[2098,"polars_io::shared"],[2099,"polars_core::frame"],[2100,"polars_error"],[2101,"core::fmt"],[2102,"core::hash"],[2103,"std::io"],[2104,"polars_arrow::record_batch"],[2105,"core::option"],[2106,"serde::ser"],[2107,"core::any"],[2108,"polars_io::avro::read"],[2109,"polars_arrow::datatypes::schema"],[2110,"polars_io::avro::write"],[2111,"polars_core::schema"],[2112,"alloc::string"],[2113,"alloc::vec"],[2114,"polars_io::cloud::glob"],[2115,"object_store"],[2116,"alloc::sync"],[2117,"polars_io::cloud::polars_object_store"],[2118,"object_store::path"],[2119,"tokio::io::async_write"],[2120,"core::marker"],[2121,"polars_io::cloud::adaptors"],[2122,"std::io::error"],[2123,"crossterm::command"],[2124,"url"],[2125,"bytes::bytes"],[2126,"core::ops::range"],[2127,"core::ops::function"],[2128,"parquet_format_safe::thrift::varint::decode"],[2129,"object_store::aws::builder"],[2130,"object_store::azure::builder"],[2131,"object_store::gcp::builder"],[2132,"core::convert"],[2133,"core::iter::traits::collect"],[2134,"polars_io::csv::read::reader"],[2135,"alloc::boxed"],[2136,"polars_io::csv::read::read_impl::batched"],[2137,"polars_io::csv::read::options"],[2138,"std::path"],[2139,"polars_utils::pl_str"],[2140,"std::fs"],[2141,"polars_core::datatypes::dtype"],[2142,"polars_core::series"],[2143,"polars_utils::aliases"],[2144,"polars_io::csv::write::writer"],[2145,"polars_io::csv::write::options"],[2146,"core::num::nonzero"],[2147,"polars_io::file_cache::entry"],[2148,"polars_io::ipc::ipc_stream"],[2149,"polars_io::ipc::write"],[2150,"futures_io::if_std"],[2151,"polars_io::ipc::ipc_file"],[2152,"polars_io::ipc::ipc_reader_async"],[2153,"polars_arrow::io::ipc::read::file"],[2154,"polars_utils::mmap::private"],[2155,"polars_arrow::array::struct_"],[2156,"polars_arrow::array"],[2157,"polars_arrow::datatypes"],[2158,"polars_arrow::datatypes::field"],[2159,"polars_arrow::array::struct_::mutable"],[2160,"polars_arrow::array::growable::structure"],[2161,"polars_arrow::bitmap::immutable"],[2162,"polars_arrow::scalar"],[2163,"polars_arrow::array::struct_::iterator"],[2164,"polars_arrow::bitmap::utils::iterator"],[2165,"polars_arrow::bitmap::utils::zip_validity"],[2166,"polars_parquet::parquet::metadata::file_metadata"],[2167,"polars_parquet::parquet::metadata::column_order"],[2168,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2169,"core::iter::traits::exact_size"],[2170,"polars_parquet::arrow::read::statistics"],[2171,"parquet_format_safe::parquet_format"],[2172,"polars_parquet::parquet::metadata::schema_descriptor"],[2173,"polars_parquet::parquet::error"],[2174,"polars_io::parquet::read::reader"],[2175,"polars_io::parquet::read::read_impl"],[2176,"polars_io::parquet::read::options"],[2177,"polars_parquet::parquet::metadata::row_metadata"],[2178,"polars_parquet::arrow::read::deserialize::utils::filter"],[2179,"polars_io::parquet::write::writer"],[2180,"polars_io::parquet::write::batched_writer"],[2181,"polars_io::parquet::write::options"],[2182,"polars_parquet::arrow::write"],[2183,"polars_parquet::parquet::write"],[2184,"core::iter::traits::iterator"],[2185,"polars_parquet::arrow::write::file"],[2186,"std::sync::mutex"],[2187,"core::future::future"],[2188,"tokio::runtime::task::join"],[2189,"polars_core::datatypes::field"],[2190,"avro_schema::file"],[2191,"polars_io::cloud::object_store_setup"],[2192,"polars_io::csv::read::parser"],[2193,"polars_io::file_cache::cache"],[2194,"polars_io::file_cache::utils"],[2195,"polars_io::parquet::read::utils"],[2196,"polars_io::parquet::read::predicates"],[2197,"polars_io::parquet::read::mmap"],[2198,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Jj`0`00`0000000000000`00AGdAGfAGh32103210321032103321032103`210332103210321032103AGj00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd213402134343434402134021343402134343334442103402134121340213402134003`0202132102133422213402134021340213421302134212212121212121AC`00`00`000`0000`0`0000`ACl`0`00````0`00`ACj1ACnAD`ADbADdACfACh16754320167543267543267543267543266673016754320167543267543230167543230675432666777555444333222016754320167543230675432016754320167543233633136675432166754326016754320167543254201675432016754321111060``````````AEd0000000`00AEh1111`11`````AEnAF``Hf21212121211212121212022121222221212102121121AEl233332323232322```AfAl10111`````````````AFh``0`AFf0`0AFjAFl321032222310321032103221033332AFn21402140214214321433321432143214342143AG``00000000000`0000AGb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{{{b{hc}}}K`Hh}{cc{}}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{cOb{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OnOb}1{A@`Ob}{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{Ob{Bl{A@b}}}Ob}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{AAhAAb}{cc{}}0{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}`{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}{{{b{h{ABb{c}}}}ABl}fHh}1{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000064`{{}c{}}0000{{{ABb{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{ABf}}}}{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{A@b}}}ABn}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AC`}{{}c{}}{{{Bl{{b{Hf}}}}{b{ACb}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AC`}}ABn{b{Of}}}Ad}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{ACd}}}{{Aj{{Hj{Od}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{ACf{c}}{b{D`}}}{{Aj{{ACh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACj}{{}ACl}{{}ADb}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}{c{{A`{ADb}}}Ab}{c{{A`{ADd}}}Ab}`{nf}00000009{{{b{{ACh{c}}}}{b{Ah}}}{{`{{ADh{}{{H`{{Aj{{ADf{A@l}}}}}}}}}}}Bf}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADd}}{b{ADd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACh{c}}}}}{{Aj{Kn}}}Bf}{{{ACf{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}B`}{{{b{ADb}}{b{hAn}}}{{A`{fCn}}}}{{{b{ADd}}{b{hAn}}}B`}{cc{}}0000000{{}ADb}{{{b{{ACh{c}}}}}{{b{{ADl{{ADj{c}}}}}}}Bf}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{{b{ADb}}{b{hc}}}fBb}{{{b{ADd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{ADb}}}Ad}0```{c{{ACf{c}}}{BfBf}}``{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{b{ADb}}c}A`Bn}{{{b{ADd}}c}A`Bn}{{{ACf{c}}Ad}{{ACf{c}}}Bf}`{bc{}}00000{{{b{ACj}}c}{{ACf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACn}}}}{ADn{{Aj{AD`}}}}{AE`{{Aj{ADd}}}}{bC`}0000000{{}c{}}0000000{{{ACf{c}}ACl}{{ACf{c}}}Bf}{{{ACf{c}}{Bl{n}}}{{ACf{c}}}Bf}0{{{ACf{c}}ADb}{{ACf{c}}}Bf}{{{b{h{ACh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACj}}Ahc}{{Aj{f}}}Bf}{{{b{{ACh{c}}}}{Dd{{ADf{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjAEb}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AEd}}c}{}AEf}{{{b{AEd}}c}{}{AEfLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEd}}}}{{}n}{{}c{}}{{{b{AEh}}}Kn}{{{b{AEd}}c}AEj{AEfLj}}{{{b{AEd}}e}{{AEj{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADne}{}AEf{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEl}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{b{{Fh{AEn}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{nf}0{{{b{AEn}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEn}}}{{b{J`}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{cc{}}0{JlAEn}{AFbAEn}{{{b{AEn}}}{{Bl{{b{Jl}}}}}}00{{{b{AF`}}{b{Df}}}{{Aj{{b{AEn}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AFb{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEn}{{Hl{Dd{AEn}}{Bl{n}}}AF`}{{{b{AEn}}}{{Bl{n}}}}{{{b{AF`}}}{{Bl{n}}}}{{{b{AF`}}}{{b{Hl}}}}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AEl}}{b{AF`}}}{{Aj{Ad}}}}{{{b{hAF`}}{b{{Fh{n}}}}}f}=={{{b{AEn}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAF`}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAFd}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}{bf}{{}AFh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFf}}{b{hAn}}}B`}{cc{}}0{NnAFh}{AFjAFh}2{AFlAFh}3{{{b{AFn}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFl}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFn}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFn}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AG`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AGb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AGb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"COn","p":[[1,"reference"],[5,"Private",2094],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2095],[5,"HiveOptions",0,2095],[1,"usize"],[6,"Result",2096],[10,"Deserializer",2097],[1,"bool"],[10,"SerReader",1954,2098],[5,"DataFrame",2099],[8,"PolarsResult",2100],[10,"SerWriter",1954,2098],[5,"Formatter",2101],[8,"Result",2101],[10,"Hasher",2102],[10,"Read",2103],[10,"Write",2103],[10,"ArrowReader",0,2098],[8,"RecordBatch",2104],[6,"Option",2105],[10,"Serializer",2106],[5,"TypeId",2107],[10,"WriteDataFrameToFile",0,2098],[5,"AvroReader",86,2108],[8,"ArrowSchema",2109],[10,"Seek",2103],[6,"AvroCompression",86],[5,"AvroWriter",86,2110],[5,"Error",2101],[8,"Schema",2111],[5,"String",2112],[5,"Vec",2113],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2114],[10,"ObjectStore",2115],[5,"Arc",2116],[1,"tuple"],[5,"PolarsObjectStore",153,2117],[5,"Path",2118],[10,"AsyncWrite",2119],[10,"Unpin",2120],[5,"CloudWriter",153,2121],[5,"Error",2122],[10,"Command",2123],[8,"Result",2122],[5,"Url",2124],[5,"Bytes",2125],[5,"Range",2126],[1,"slice"],[5,"ObjectMeta",2115],[17,"Output"],[10,"FnOnce",2127],[1,"u8"],[10,"VarInt",2128],[6,"AmazonS3ConfigKey",227,2129],[6,"AzureConfigKey",227,2130],[6,"GoogleConfigKey",227,2131],[6,"CloudType",227],[10,"AsRef",2132],[10,"Into",2132],[17,"Item"],[10,"IntoIterator",2133],[5,"CsvReader",416,2134],[10,"PhysicalIoExpr",1886],[10,"MmapBytesReader",1282],[5,"Box",2135],[8,"SchemaRef",2111],[5,"OwnedBatchedCsvReader",416,2136],[5,"BatchedCsvReader",416,2136],[5,"CsvReadOptions",416,2137],[5,"CsvParseOptions",416,2137],[6,"CsvEncoding",416,2137],[6,"CommentPrefix",416,2137],[6,"NullValues",416,2137],[5,"Path",2138],[10,"Fn",2127],[5,"PlSmallStr",2139],[5,"PathBuf",2138],[5,"File",2140],[5,"SchemaInferenceResult",752],[6,"DataType",2141],[6,"Buffer",675],[5,"Series",2142],[8,"PlHashSet",2143],[6,"ReaderBytes",1282],[5,"CsvWriter",779,2144],[5,"BatchedWriter",779,2144],[5,"CsvWriterOptions",779,2145],[5,"SerializeOptions",779,2145],[6,"QuoteStyle",779,2145],[8,"NonZeroUsize",2146],[1,"u64"],[5,"FileCacheEntry",924,2147],[5,"IpcStreamReader",945,2148],[5,"IpcWriter",945,2149],[5,"BatchedWriter",945,2149],[10,"AsyncWrite",2150],[10,"Send",2120],[5,"IpcScanOptions",945,2151],[5,"IpcReadOptions",945,2152],[5,"IpcWriterOptions",945,2149],[6,"IpcCompression",945,2149],[5,"IpcReaderAsync",945,2152],[5,"FileMetadata",2153],[1,"i64"],[5,"IpcStreamWriterOption",945,2148],[5,"IpcReader",945,2151],[5,"IpcStreamWriter",945,2148],[8,"ArrowSchemaRef",2109],[5,"CompatLevel",2141],[5,"JsonWriterOptions",1184],[5,"JsonWriter",1184],[5,"JsonReader",1184],[5,"BatchedWriter",1184],[6,"JsonFormat",1184],[5,"MemSlice",2154],[10,"BufRead",2103],[5,"StructArray",1306,2155],[10,"Array",2156],[6,"ArrowDataType",2157],[10,"Any",2107],[5,"JsonLineReader",1306],[5,"Field",2158],[5,"MutableStructArray",2159],[5,"GrowableStruct",2160],[5,"Bitmap",2161],[10,"Scalar",2162],[5,"StructValueIter",2163],[5,"BitmapIter",2164],[6,"ZipValidity",2165],[6,"PolarsError",2100],[5,"FileMetadata",1413,2166],[6,"ColumnOrder",2167],[5,"ParquetStatistics",1413],[5,"ColumnChunkMetadata",2168],[10,"ExactSizeIterator",2169],[5,"MutableStatistics",2170],[5,"KeyValue",2171],[5,"SchemaDescriptor",2172],[5,"FileMetaData",2171],[6,"ParquetError",2173],[5,"ParquetReader",1466,2174],[5,"BatchedParquetReader",1466,2175],[5,"ParquetAsyncReader",1466,2174],[5,"ParquetOptions",1466,2176],[6,"ParallelStrategy",1466,2176],[8,"FileMetadataRef",1413],[1,"f64"],[6,"PrefilterMaskSetting",1610,2175],[5,"RowGroupMetadata",2177],[6,"Filter",2178],[5,"ParquetWriter",1632,2179],[5,"BatchedWriter",1632,2180],[5,"ParquetWriteOptions",1632,2181],[6,"ParquetCompression",1632,2181],[5,"GzipLevel",1632,2181],[5,"BrotliLevel",1632,2181],[5,"StatisticsOptions",1632,2182],[5,"ZstdLevel",1632,2181],[8,"RowGroupIterColumns",1632,2183],[10,"Iterator",2184],[5,"FileWriter",2185],[5,"Mutex",2186],[1,"u32"],[1,"i32"],[10,"Sync",2120],[5,"RuntimeManager",1864],[10,"Future",2187],[10,"GetSize",1864],[5,"JoinHandle",2188],[10,"StatsEvaluator",1886],[5,"ColumnStats",1886],[5,"BatchStats",1886],[5,"Field",2189],[10,"Sized",2120],[6,"DynByteSourceBuilder",1976],[6,"DynByteSource",1976],[5,"MemSliceByteSource",1976],[5,"ObjectStoreByteSource",1976],[10,"ByteSource",1976],[6,"SupportedCompression",2057],[6,"SplitSlicePosition",2075],[5,"Utf8Field",675],[5,"CategoricalField",675],[5,"DatetimeField",675],[15,"Datetime",749]],"r":[[0,2098],[1,2095],[2,2095],[3,2098],[4,2098],[5,2098],[87,2108],[88,2110],[89,2190],[153,2114],[154,2121],[155,2117],[156,2117],[165,2191],[194,2114],[206,2191],[230,2129],[235,2130],[259,2131],[418,2136],[419,2137],[420,2137],[421,2137],[422,2137],[423,2134],[427,2137],[428,2136],[474,2192],[475,2192],[556,752],[780,2144],[781,2144],[782,2145],[786,2145],[787,2145],[924,2193],[925,2194],[926,2147],[933,2193],[935,2194],[945,2149],[946,2149],[947,2152],[948,2151],[949,2152],[950,2151],[951,2148],[952,2148],[953,2148],[954,2149],[955,2149],[1307,2155],[1413,2166],[1431,2170],[1467,2175],[1470,2176],[1471,2174],[1472,2176],[1473,2174],[1551,2195],[1613,2175],[1616,2175],[1620,2195],[1625,2196],[1627,2197],[1632,2180],[1634,2181],[1636,2181],[1639,2181],[1640,2181],[1641,2179],[1642,2183],[1644,2182],[1647,2181],[1954,2098],[1955,2098],[1956,0],[1964,1856],[1965,2198],[1966,2198],[1967,2198],[1968,2198],[1972,2198],[1973,2198],[1974,2198]],"b":[[1311,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1312,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1313,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1314,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1334,"impl-PartialEq-for-StructArray"],[1335,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1340,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1342,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1362,"impl-StructArray"],[1363,"impl-Array-for-StructArray"],[1366,"impl-StructArray"],[1367,"impl-Array-for-StructArray"],[1379,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1380,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1381,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1382,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1390,"impl-Array-for-StructArray"],[1391,"impl-StructArray"],[1407,"impl-StructArray"],[1408,"impl-Array-for-StructArray"],[2013,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2014,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2016,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8GugAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIqAHUCCAB/AgcAlwIAAKQCEgC4AhcA1AIEAN0CIAD/AgEAAwMAAAUDBgANAwAAFQMXAC8DIQBSAwAAVAMCAFwDAgBgAwAAYgMFAG4DAgB1AwMAegMWAJ0DBwCmAwIAqgMBAK4DBAC0AwAAtwMAALoDAAC8AwAAvwMDAMQDIwDpAzYAIQQDADAEDgBMBAYAVQQ1AI0EAQCTBAEAlwQAAJoEAACdBAEAoAQBAKcEJADNBAAA0wQAANUEBADhBBkA/QQBAAMFAQAGBQgAEAUAABIFCQAdBQEAIAUJACsFDQA6BQEAPQUAAD8FAABBBQAAQwUCAEkFAABLBQAAVAUCAFgFAABbBQEAXgUNAG0FAgBzBQEAdwUIAIEFAQCHBQAAiQUHAJQFAwCaBQUAogUBALAFAgC0BQMAuQUBALwFAAC/BQAAwQUAAMUFMwD+BQkADQYAAA8GAgATBgAAFQYBABgGAQAbBgMAIAYTADYGBQA9BgAAPwYFAEYGAABIBgEASwYJAFcGAQBaBggAZAYAAGYGAQBpBgAAawYBAG4GAQBxBigAnAY7ANoGBQDoBg8AAAcBAAMHAQAGBwAACAcFABAHKQA/BwEAQgcAAEkHAgBNBwQAUwcBAFYHAABYBwYAYQcEAGcHCQByBwcAfAcCAIcHAQCRBwMAmAcNAKcHAACpBwAArQcNALwHAQC/BwAAwQcaAN4HAQDhBwAA5AcOAPcHEwAMCAMAEQgCABUIAAAYCA0AJwgAACoIBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1724,"polars_lazy::dsl::AggExpr"],[1731,"polars_lazy::dsl::BooleanFunction"],[1734,"polars_lazy::dsl::Expr"],[1769,"polars_lazy::dsl::FunctionExpr"],[1814,"polars_lazy::dsl::StringFunction"],[1834,"polars_lazy::dsl::TemporalFunction"],[1836,"polars_lazy::dsl::binary"],[1857,"polars_lazy::dsl::cat"],[1858,"polars_lazy::dsl::dt"],[1914,"polars_lazy::dsl::function_expr"],[2144,"polars_lazy::dsl::function_expr::BooleanFunction"],[2147,"polars_lazy::dsl::function_expr::FunctionExpr"],[2192,"polars_lazy::dsl::function_expr::StringFunction"],[2212,"polars_lazy::dsl::function_expr::TemporalFunction"],[2214,"polars_lazy::dsl::function_expr::cat"],[2216,"polars_lazy::dsl::function_expr::pow"],[2220,"polars_lazy::dsl::function_expr::rolling"],[2254,"polars_lazy::dsl::function_expr::rolling_by"],[2287,"polars_lazy::dsl::function_expr::trigonometry"],[2331,"polars_lazy::dsl::functions"],[2406,"polars_lazy::dsl::python_udf"],[2467,"polars_lazy::dsl::string"],[2528,"polars_lazy::dsl::udf"],[2534,"polars_lazy::frame"],[3022,"polars_lazy::frame::pivot"],[3024,"polars_lazy::prelude"],[3648,"polars_lazy::prelude::DslPlan"],[3700,"polars_lazy::prelude::LiteralValue"],[3703,"dyn_clone::sealed"],[3704,"polars_plan::dsl::meta"],[3705,"polars_plan::dsl::expr"],[3706,"polars_plan::dsl::struct_"],[3707,"polars_utils::pl_str"],[3708,"alloc::sync"],[3709,"polars_error"],[3710,"core::result"],[3711,"polars_plan::dsl::selector"],[3712,"core::convert"],[3713,"polars_plan::dsl::array"],[3714,"polars_plan::dsl::list"],[3715,"polars_plan::dsl::expr_dyn_fn"],[3716,"polars_core::frame::column"],[3717,"core::option"],[3718,"core::ops::function"],[3719,"core::marker"],[3720,"polars_plan::plans::visitor"],[3721,"polars_plan::dsl::function_expr"],[3722,"polars_core::datatypes::dtype"],[3723,"polars_core::chunked_array::ops::sort::options"],[3724,"polars_plan::dsl::function_expr::schema"],[3725,"polars_core::datatypes::field"],[3726,"core::any"],[3727,"alloc::vec"],[3728,"polars_plan::dsl::binary"],[3729,"core::clone"],[3730,"polars_plan::dsl::udf"],[3731,"polars_core::chunked_array::cast"],[3732,"polars_plan::dsl::cat"],[3733,"polars_plan::dsl::arity"],[3734,"polars_plan::dsl::function_expr::bitwise"],[3735,"polars_plan::dsl::function_expr::boolean"],[3736,"polars_plan::dsl::function_expr::cat"],[3737,"polars_plan::dsl::function_expr::datetime"],[3738,"polars_plan::dsl::function_expr::pow"],[3739,"polars_plan::dsl::function_expr::strings"],[3740,"polars_plan::dsl::function_expr::struct_"],[3741,"polars_plan::dsl::functions::temporal"],[3742,"polars_plan::dsl::options"],[3743,"core::iter::traits::collect"],[3744,"polars_lazy::dsl::eval"],[3745,"polars_core::utils"],[3746,"polars_time::windows::duration"],[3747,"polars_time::windows::group_by"],[3748,"polars_core::datatypes::time_unit"],[3749,"serde::de"],[3750,"polars_core::series"],[3751,"polars_plan::plans"],[3752,"polars_core::series::ops"],[3753,"polars_plan::dsl::dt"],[3754,"core::cmp"],[3755,"polars_lazy::dsl::list"],[3756,"polars_arrow::legacy::kernels::ewm"],[3757,"polars_core::chunked_array::ops"],[3758,"core::fmt"],[3759,"polars_plan::plans::apply"],[3760,"polars_ops::frame::join::iejoin"],[3761,"polars_plan::dsl::function_expr::binary"],[3762,"polars_plan::dsl::function_expr::range"],[3763,"polars_plan::dsl::function_expr::array"],[3764,"polars_plan::dsl::function_expr::business"],[3765,"polars_plan::dsl::function_expr::list"],[3766,"alloc::string"],[3767,"polars_plan::plans::options"],[3768,"polars_schema::schema"],[3769,"core::hash"],[3770,"polars_ops::series::ops::interpolation::interpolate"],[3771,"polars_ops::series::ops::is_between"],[3772,"polars_plan::dsl::name"],[3773,"polars_plan::plans::lit"],[3774,"polars_core::utils::supertype"],[3775,"polars_plan::dsl::python_udf"],[3776,"polars_utils::idx_vec"],[3777,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3778,"polars_ops::series::ops::rank"],[3779,"polars_time::group_by::dynamic"],[3780,"polars_core::chunked_array::ops::rolling_window"],[3781,"polars_core::datatypes"],[3782,"polars_core::chunked_array"],[3783,"polars_time::chunkedarray::rolling_window"],[3784,"polars_core::chunked_array::ops::search_sorted"],[3785,"serde::ser"],[3786,"polars_core::series::series_trait"],[3787,"polars_plan::dsl::string"],[3788,"polars_ops::chunked_array::list::to_struct"],[3789,"compact_str"],[3790,"polars_ops::series::ops::business"],[3791,"polars_arrow::legacy::kernels::time"],[3792,"polars_plan::dsl::function_expr::rolling"],[3793,"polars_plan::dsl::function_expr::rolling_by"],[3794,"polars_plan::dsl::function_expr::trigonometry"],[3795,"polars_core::frame"],[3796,"rayon::iter"],[3797,"pyo3::types::any"],[3798,"pyo3::instance"],[3799,"polars_utils::arena"],[3800,"polars_plan::plans::ir"],[3801,"polars_plan::plans::aexpr"],[3802,"polars_plan::frame::opt_state"],[3803,"polars_plan::plans::anonymous_scan"],[3804,"polars_lazy::scan::anonymous_scan"],[3805,"polars_core::schema"],[3806,"polars_utils::index"],[3807,"polars_lazy::frame::exitable"],[3808,"polars_utils::aliases"],[3809,"polars_lazy::scan::csv"],[3810,"polars_lazy::scan::ipc"],[3811,"polars_lazy::scan::ndjson"],[3812,"polars_lazy::scan::parquet"],[3813,"polars_lazy::scan::file_list_reader"],[3814,"polars_io::cloud::options"],[3815,"polars_ops::frame::join::args"],[3816,"bitflags::iter"],[3817,"std::path"],[3818,"polars_plan::plans::ir::scan_sources"],[3819,"polars_io::options"],[3820,"polars_io::csv::write::options"],[3821,"polars_io::ipc::write"],[3822,"polars_io::json"],[3823,"polars_io::parquet::write::options"],[3824,"core::num::nonzero"],[3825,"polars_io::csv::read::options"],[3826,"chrono_tz::timezones"],[3827,"polars_core::frame::group_by::proxy"],[3828,"polars_core::datatypes::any_value"],[3829,"std::io"],[3830,"polars_io::parquet::write::writer"],[3831,"chrono::naive::datetime"],[3832,"polars_plan::dsl::functions::selectors"],[3833,"polars_plan::dsl::functions::horizontal"],[3834,"polars_plan::dsl::functions::arity"],[3835,"polars_plan::dsl"],[3836,"polars_plan::dsl::functions::range"],[3837,"polars_plan::dsl::functions::index"],[3838,"polars_plan::dsl::functions::coerce"],[3839,"polars_plan::dsl::functions::syntactic_sugar"],[3840,"polars_plan::dsl::functions::business"],[3841,"polars_plan::dsl::functions::concat"],[3842,"polars_plan::dsl::functions::correlation"],[3843,"polars_plan::dsl::functions::repeat"],[3844,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AK`G`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>99>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?jAh33`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF```````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j000800000l001111`An22Bf33DhFbEnLf77G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf411044444444`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j1DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKbAKdAKf2102AKhAKjAKlAKnAL`ALb0ALdALf4ALhALjALlALn3AM`528AMb1AMd11098432323570;5AMfAMhAMjAMlAMnAN`ANbANdANfANhANjANl087;87;7;ANnAO`8AObAOdAOf0?1AOhAOjAOlAOn4AMfB@`B@bB@dB@fB@hB@j:=;B@lB@nBA`BAbBAdBAf54BAh321BAjBAlBAn03721BB`0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd066666622222666236666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKhAKjAKlAMfAMhAMjAMlAMnAN`ANbANdANfANhANjANl087;87;7;ANnAO`8AObAOdAOf0?1AOhAOjAOlAOn4AMfB@`B@bB@dB@fB@hB@j:=;B@lB@nBA`BAbBAdBAf54BAh321BAjBAlBAn03721BB`0`GjGn0`0ABd000`00000000000000000000000000000ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd``````````````````````````0Hf`````10`````````100`1010```````10````10101`````ACdOhACj21021222210210221022222210220102102102210210210102102`AAf00000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIfAIh0Kb3`011120``1`00111300030311111`0````3``AHl0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIjACb<888ADl0007;:9AJd9AFh>9AJb98AIf87AIh76KbAFfA@bJd8AFn8AHlAH`9AHbAHd:A@`AHf;AIjACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJd:198AJb87AIf76AIh65KbAFfA@bJd7AFn9AHlAH`9AHbAHd:A@`AHf;AIjACb<3<<;:98AFh8765?43>21=1=<;:AJd:198AJb87AIf76AIh65KbAFfA@bJdAFn9AHlAH`AHbAHd:A@`AHf;AIjACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIf65AIh545?>=AJd==4<;AJb;:398276Kb73AInAFfA@bJdAFn;AHlAH`AHbAHd=A@`AHf>AIjACb86;6;:;:9?8AFh87?65AIf54AIh43Kb?>=AJd=4<;AJb;:498376225??53=?>AFfObJd36?>=;6<00040AHl111AFnADl5A@b8=444608`=AInAHf33:8264>5AH`AHbAHdAIfA@`5AIhAIjACbKb8=2=AFf:>>140<Jd?AFhAHl<;:98=76542105;=22223?2AJdAFn32>AJb>=<;AHf;;:987A@b74365AH`3AHbAHdAIfA@`6AIhAIjACbKbJdAFhAHlAFf=3AJdAFn43>AJb>=<;AHf;:9824A@b84376AH`3AHbAHdAIfA@`6AIhAIjACbKbJd0=>=8;BBb0BBdBBfBBhBBjBBlBBnBC`BCb55BCdBCfBCh14;3BCj:BCl49BCnBD`0>BDbBBb240;4BDd;13:624733?=BBf0BBh>BDf00","f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}0000000000000000{{{b{{Bf{c}}}}}b{}}11111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}{{{b{j}}{b{j}}}B`}:{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}};;{{jL`}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Ebj}{Lhj}{Ljj}{Clj}{Dlj}{B`j}{{{b{E`}}}j}{Llj}{Ijj}{J`j}{Lnj}{M`j}{Elj}==={MbEf}>{Md{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{cc{}}{Gl{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}999999999{MdCj}{GhCj}{H`Cj}{GjCj}====={I`Hn}>>>>{jAh}{{{b{E`}}}Ah}{MnAh}{nAh}{cc{}}0{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{{b{j}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{h{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLj}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh{Bl{{Ab{Bn}}}}In}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}0{{{ACh{ACf}}}ACd}1{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{bAAn}00999`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Lj}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}{{{b{CdAEd}}}f}11{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}22222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}0{KbABn}{ADfABn}22222222{Lj{{Bl{ADh}}}}{LjADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAn}000000000<{{ABn{Bl{{Dn{Mn}}}}AHj}ABn}{{ABn{Bl{e}}AHj}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHj}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHl}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AHn}}}AEl}{{AEhB`}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}7{{AEh{Bl{AE`}}}AEh}{{AEhAI`}AEh}{{AEhIj}AEh}:::{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}>=={{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AEl{Bl{In}}}AEl}{{AElc}AEl{{Aj{{Bl{In}}}}}}>{{AEh{Bl{AIb}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEh{Bl{AGj}}}AEh}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEl{Bl{AGj}}}AEl}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AId}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHl}}}AHl}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIf}}}AIf}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIh}}}AIh}{{{b{AIj}}}AIj}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIl}`{{b{b{c}}}AIl{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHl}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIj}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHl}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIf}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIf}}{b{AIf}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}000{AFhAFn}11111111111111`{{{b{AIh}}}Cn}{{{b{AIn}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJ`}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHl}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIf}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}{{{b{Jd}}}B`}2{{{b{AIh}}}B`}{{{b{AHl}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJbj}{AIhj}````{AIhAIh}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHl}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJd}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIl}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AIn}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJ`}}Ad}}}}`{{{b{ADl}}AJd}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHl}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIf}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIh}}}{{Bl{AJf}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJh{c}}}AJj}{{{b{AHf}}c}{{AJl{c}}}AJj}{{{b{Jd}}Cl{Bl{{b{AId}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJn}}}}}{{Bn{AJn}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AId}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000{AJf{{Af{AIhAd}}}}111{{}{{Af{c}}}{}}00000000000000000{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJj}{{{b{AHf}}ABjc}{{Af{fAd}}}AJj}```````````````````````````````````````````````````````","D":"GLf","p":[[1,"reference"],[5,"Private",3703],[1,"unit"],[5,"MetaNameSpace",5,3704],[6,"Expr",5,3705],[5,"StructNameSpace",5,3706],[5,"PlSmallStr",3707],[1,"slice"],[5,"Arc",3708],[6,"PolarsError",3709],[6,"Result",3710],[6,"Selector",5,3711],[10,"Into",3712],[5,"ArrayNameSpace",5,3713],[5,"ListNameSpace",5,3714],[1,"bool"],[10,"AsRef",3712],[10,"FunctionOutputField",5,3715],[5,"SpecialEq",5,3715],[6,"Column",3716],[17,"Output"],[6,"Option",3717],[10,"Fn",3718],[10,"Send",3719],[10,"Sync",3719],[0,"mut"],[6,"VisitRecursion",3720],[10,"FnMut",3718],[6,"FunctionExpr",5,3721],[1,"i64"],[6,"DataType",3722],[5,"SortOptions",3723],[5,"SortMultipleOptions",3723],[5,"FieldsMapper",5,3724],[5,"Field",3725],[10,"ColumnsUdf",5,3715],[10,"Any",3726],[6,"AggExpr",5,3705],[5,"Vec",3727],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1836,3728],[6,"Operator",5,3705],[10,"Clone",3729],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3715],[5,"UserDefinedFunction",5,3730],[10,"ColumnBinaryUdf",5,3715],[6,"CastOptions",3731],[5,"CategoricalNameSpace",5,3732],[5,"When",5,3733],[5,"Then",5,3733],[5,"ChainedWhen",5,3733],[5,"ChainedThen",5,3733],[6,"LazySerde",5,3705],[6,"Excluded",5,3705],[6,"BitwiseFunction",5,3734],[6,"BitwiseAggFunction",5,3734],[6,"BooleanFunction",5,3735],[6,"CategoricalFunction",5,3736],[6,"TemporalFunction",5,3737],[6,"PowFunction",5,3738],[6,"StringFunction",5,3739],[6,"StructFunction",5,3740],[5,"DatetimeArgs",5,3741],[5,"DurationArgs",5,3741],[5,"RollingCovOptions",5,3742],[5,"StrptimeOptions",5,3742],[5,"JoinOptions",5,3742],[6,"WindowType",5,3742],[6,"WindowMapping",5,3742],[6,"NestedType",5,3742],[5,"UnpivotArgsDSL",5,3742],[17,"Item"],[10,"IntoIterator",3743],[1,"u8"],[10,"ExprEvalExtension",5,3744],[1,"usize"],[1,"f64"],[10,"IntoVec",3745],[5,"Duration",3024,3746],[6,"ClosedWindow",3747],[6,"TimeUnit",3748],[10,"BinaryUdfOutputField",5,3715],[10,"Deserializer",3749],[10,"Deserialize",3749],[5,"Series",3750],[6,"DslPlan",3024,3751],[6,"NullBehavior",3752],[5,"DateLikeNameSpace",1858,3753],[10,"PartialEq",3754],[10,"Sized",3719],[10,"ListNameSpaceExtension",5,3755],[5,"EWMOptions",3756],[6,"FillNullStrategy",3757],[5,"Formatter",3758],[5,"Error",3758],[10,"UdfSchema",5,3759],[1,"u16"],[1,"u32"],[1,"f32"],[1,"i8"],[1,"i16"],[6,"InequalityOperator",3760],[6,"BinaryFunction",3761],[6,"RangeFunction",3762],[6,"ArrayFunction",3763],[6,"BusinessFunction",3764],[6,"ListFunction",3765],[5,"String",3766],[5,"FunctionOptions",3767],[5,"Schema",3768],[6,"Context",3751],[10,"Hasher",3769],[6,"InterpolationMethod",3770],[10,"IntoListNameSpace",5,3755],[10,"Display",3758],[6,"ClosedInterval",3771],[5,"ExprNameNameSpace",5,3772],[10,"Literal",3024,3773],[10,"FnOnce",3718],[5,"SuperTypeOptions",3774],[5,"PythonUdfExpression",2406,3775],[5,"UnitVec",3776],[1,"tuple"],[6,"QuantileInterpolOptions",3777],[5,"RankOptions",3024,3778],[5,"RollingGroupOptions",3024,3779],[5,"RollingOptionsFixedWindow",3780],[5,"Float64Type",3781],[5,"ChunkedArray",3782],[10,"Copy",3719],[5,"RollingOptionsDynamicWindow",3783],[6,"SearchSortedSide",3784],[10,"Serializer",3785],[10,"Serialize",3785],[6,"IsSorted",3786],[5,"StringNameSpace",2467,3787],[6,"ListToStructWidthStrategy",3788],[5,"CompactString",3789],[6,"ToCompactStringError",3789],[5,"TypeId",3726],[6,"Roll",3790],[6,"NonExistent",3791],[6,"RollingFunction",2220,3792],[6,"RollingFunctionBy",2254,3793],[6,"TrigonometricFunction",2287,3794],[5,"DataFrame",3795],[8,"PolarsResult",3709],[5,"LazyFrame",2534],[10,"IntoParallelIterator",3796],[5,"UnionArgs",3024,3767],[5,"PythonFunction",2406,3775],[5,"PyAny",3797],[5,"Py",3798],[5,"PythonGetOutput",2406,3775],[1,"char"],[5,"Node",3799],[6,"IR",3800],[5,"Arena",3799],[6,"AExpr",3801],[5,"LazyGroupBy",2534],[5,"OptFlags",2534,3802],[5,"JoinBuilder",2534],[10,"AnonymousScan",3024,3803],[5,"ScanArgsAnonymous",2534,3804],[8,"SchemaRef",3805],[8,"IdxSize",3806],[5,"InProcessQuery",2534,3807],[8,"PlHashMap",3808],[5,"LazyCsvReader",2534,3809],[5,"ScanArgsIpc",2534,3810],[5,"LazyJsonLineReader",2534,3811],[5,"ScanArgsParquet",2534,3812],[10,"LazyFileListReader",2534,3813],[5,"CloudOptions",3814],[6,"JoinCoalesce",3815],[5,"DynamicGroupOptions",3024,3779],[6,"JoinType",3024,3815],[5,"Iter",3816],[5,"IterNames",3816],[5,"JoinArgs",3024,3815],[10,"IntoLazy",2534],[8,"AllowedOptimizations",2534,3802],[5,"Path",3817],[5,"PathBuf",3817],[6,"ScanSources",3818],[5,"RowIndex",3819],[8,"Schema",3805],[8,"PyObject",3798],[5,"CsvWriterOptions",3024,3820],[5,"IpcWriterOptions",3024,3821],[5,"JsonWriterOptions",3024,3822],[5,"ParquetWriteOptions",3024,3823],[5,"IRPlan",3800],[6,"UniqueKeepStrategy",3795],[6,"JoinValidation",3024,3815],[8,"NonZeroUsize",3824],[6,"CsvEncoding",3825],[6,"NullValues",3825],[6,"Tz",3826],[6,"RankMethod",3024,3778],[6,"LiteralValue",3024,3773],[5,"AnonymousScanOptions",3024,3767],[6,"Ordering",3754],[10,"PolarsTemporalGroupby",3024,3779],[6,"GroupsProxy",3827],[5,"Null",3024,3773],[5,"AnonymousScanArgs",3024,3803],[6,"AnyValue",3828],[5,"IpcWriter",3821],[10,"Write",3829],[5,"ParquetWriter",3830],[5,"NaiveDateTime",3831],[8,"OpaqueColumnUdf",5],[15,"Quantile",1724],[15,"Min",1724],[15,"Max",1724],[15,"IsBetween",2144],[15,"Any",2144],[15,"All",2144],[15,"SortBy",1734],[15,"Filter",1734],[15,"Cast",1734],[15,"Sort",1734],[15,"Gather",1734],[15,"RenameAlias",1734],[15,"Ternary",1734],[15,"Function",1734],[15,"Window",1734],[15,"AnonymousFunction",1734],[15,"Slice",1734],[15,"BinaryExpr",1734],[15,"QCut",2147],[15,"Entropy",2147],[15,"Log",2147],[15,"Hist",2147],[15,"Cut",2147],[15,"Correlation",2147],[15,"Round",2147],[15,"TopK",2147],[15,"TopKBy",2147],[15,"RoundSF",2147],[15,"EwmMeanBy",2147],[15,"Clip",2147],[15,"BackwardFill",2147],[15,"ForwardFill",2147],[15,"Random",2147],[15,"GatherEvery",2147],[15,"ValueCounts",2147],[15,"Rank",2147],[15,"EwmMean",2147],[15,"EwmStd",2147],[15,"EwmVar",2147],[15,"ReplaceStrict",2147],[15,"CumCount",2147],[15,"CumSum",2147],[15,"CumProd",2147],[15,"CumMin",2147],[15,"CumMax",2147],[15,"ConcatHorizontal",2192],[15,"ConcatVertical",2192],[15,"ExtractGroups",2192],[15,"JsonDecode",2192],[15,"PadStart",2192],[15,"PadEnd",2192],[15,"SplitExact",2192],[15,"Contains",2192],[15,"Find",2192],[15,"Replace",2192],[15,"DatetimeFunction",2212],[15,"GroupBy",3648],[15,"Union",3648],[15,"Sort",3648],[15,"Scan",3648],[15,"ExtContext",3648],[15,"DataFrameScan",3648],[15,"IR",3648],[15,"Select",3648],[15,"HStack",3648],[15,"MapFunction",3648],[15,"Cache",3648],[15,"Filter",3648],[15,"Distinct",3648],[15,"Slice",3648],[15,"Sink",3648],[15,"Join",3648],[15,"HConcat",3648],[15,"PythonScan",3648],[15,"Range",3700]],"r":[[8,3705],[23,3713],[32,3715],[35,3734],[36,3734],[38,3735],[45,3736],[46,3732],[50,3733],[51,3733],[55,3715],[57,3715],[78,3741],[90,3741],[100,3705],[105,3705],[106,3744],[107,3772],[115,3724],[116,3772],[126,3721],[127,3715],[133,3715],[148,3755],[164,3742],[171,3705],[178,3714],[179,3755],[194,3704],[213,3742],[220,3705],[221,3705],[233,3738],[245,3715],[257,3742],[266,3711],[278,3715],[286,3739],[293,3742],[295,3740],[296,3706],[304,3737],[306,3733],[328,3759],[331,3742],[334,3730],[339,3733],[342,3742],[343,3742],[391,3832],[395,3833],[402,3833],[405,3834],[409,3835],[411,3836],[426,3837],[428,3837],[434,3838],[435,3839],[437,3835],[439,3733],[527,3840],[534,3839],[537,3835],[634,3833],[635,3832],[636,3832],[637,3841],[638,3841],[639,3841],[648,3842],[650,3833],[654,3833],[659,3836],[660,3741],[661,3836],[662,3836],[824,3835],[826,3832],[827,3832],[828,3741],[932,3835],[978,3833],[981,3841],[1057,3835],[1104,3832],[1143,3836],[1144,3836],[1201,3839],[1203,3839],[1213,3835],[1216,3835],[1220,3773],[1230,3834],[1241,3835],[1244,3835],[1252,3839],[1256,3833],[1257,3839],[1260,3833],[1261,3839],[1269,3839],[1273,3833],[1300,3839],[1302,3835],[1315,3842],[1322,3835],[1325,3839],[1329,3833],[1333,3843],[1346,3842],[1347,3842],[1427,3842],[1435,3835],[1441,3839],[1445,3833],[1452,3733],[1455,3836],[1638,3835],[1693,3733],[1836,3728],[1857,3732],[1858,3753],[1932,3734],[1933,3734],[1935,3735],[1939,3736],[1988,3721],[2053,3738],[2093,3739],[2101,3740],[2106,3737],[2139,3721],[2140,3721],[2141,3721],[2142,3721],[2143,3721],[2214,3736],[2218,3738],[2224,3792],[2258,3793],[2302,3794],[2331,3741],[2332,3741],[2333,3832],[2334,3833],[2336,3833],[2337,3834],[2338,3836],[2339,3837],[2340,3837],[2341,3838],[2342,3839],[2343,3839],[2344,3833],[2345,3832],[2347,3832],[2349,3841],[2352,3841],[2353,3841],[2354,3842],[2355,3833],[2356,3833],[2357,3836],[2358,3836],[2359,3741],[2360,3836],[2361,3836],[2364,3832],[2365,3832],[2366,3741],[2367,3833],[2368,3841],[2371,3832],[2372,3836],[2373,3836],[2374,3839],[2375,3839],[2376,3834],[2377,3839],[2378,3839],[2379,3839],[2383,3839],[2388,3839],[2389,3842],[2390,3839],[2391,3833],[2392,3843],[2393,3842],[2394,3842],[2397,3842],[2398,3839],[2399,3836],[2400,3836],[2406,3775],[2407,3775],[2408,3775],[2409,3775],[2410,3775],[2467,3787],[2528,3730],[2534,3802],[2542,3807],[2545,3809],[2546,3813],[2549,3811],[2551,3802],[2558,3804],[2559,3810],[2560,3812],[3024,3803],[3025,3803],[3026,3767],[3034,3820],[3041,3751],[3042,3746],[3044,3779],[3062,3821],[3064,3815],[3065,3815],[3066,3815],[3067,3822],[3069,3773],[3070,3773],[3076,3773],[3077,3773],[3083,3823],[3084,3779],[3087,3778],[3088,3778],[3090,3779],[3106,3767],[3505,3844]],"b":[[667,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[668,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[758,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[759,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[831,"impl-PartialEq-for-Expr"],[832,"impl-Expr"],[836,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[837,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[943,"impl-Display-for-Expr"],[944,"impl-Debug-for-Expr"],[947,"impl-Display-for-Operator"],[948,"impl-Debug-for-Operator"],[950,"impl-Display-for-BitwiseFunction"],[951,"impl-Debug-for-BitwiseFunction"],[953,"impl-Display-for-BooleanFunction"],[954,"impl-Debug-for-BooleanFunction"],[955,"impl-Display-for-CategoricalFunction"],[956,"impl-Debug-for-CategoricalFunction"],[957,"impl-Display-for-TemporalFunction"],[958,"impl-Debug-for-TemporalFunction"],[959,"impl-Debug-for-PowFunction"],[960,"impl-Display-for-PowFunction"],[961,"impl-Display-for-StringFunction"],[962,"impl-Debug-for-StringFunction"],[963,"impl-Debug-for-StructFunction"],[964,"impl-Display-for-StructFunction"],[965,"impl-Debug-for-FunctionExpr"],[966,"impl-Display-for-FunctionExpr"],[995,"impl-From%3Cu64%3E-for-Expr"],[996,"impl-From%3Cu16%3E-for-Expr"],[997,"impl-From%3Cu32%3E-for-Expr"],[998,"impl-From%3Ci64%3E-for-Expr"],[999,"impl-From%3CAggExpr%3E-for-Expr"],[1000,"impl-From%3Cbool%3E-for-Expr"],[1001,"impl-From%3C%26str%3E-for-Expr"],[1002,"impl-From%3Cf32%3E-for-Expr"],[1003,"impl-From%3Cu8%3E-for-Expr"],[1004,"impl-From%3Cf64%3E-for-Expr"],[1005,"impl-From%3Ci8%3E-for-Expr"],[1006,"impl-From%3Ci16%3E-for-Expr"],[1007,"impl-From%3Ci32%3E-for-Expr"],[1013,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1014,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1015,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1019,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1035,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1036,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1037,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1049,"impl-From%3CExpr%3E-for-Selector"],[1050,"impl-From%3C%26str%3E-for-Selector"],[1051,"impl-From%3CString%3E-for-Selector"],[1052,"impl-From%3CPlSmallStr%3E-for-Selector"],[1076,"impl-Hash-for-Expr"],[1077,"impl-Expr"],[1385,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1386,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1387,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1388,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[2240,"impl-Debug-for-RollingFunction"],[2241,"impl-Display-for-RollingFunction"],[2273,"impl-Display-for-RollingFunctionBy"],[2274,"impl-Debug-for-RollingFunctionBy"],[2317,"impl-Display-for-TrigonometricFunction"],[2318,"impl-Debug-for-TrigonometricFunction"],[2584,"impl-OptFlags"],[2585,"impl-Flags-for-OptFlags"],[2722,"impl-Binary-for-OptFlags"],[2723,"impl-Debug-for-OptFlags"],[2724,"impl-Octal-for-OptFlags"],[2725,"impl-LowerHex-for-OptFlags"],[2726,"impl-UpperHex-for-OptFlags"],[2730,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2731,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2741,"impl-Flags-for-OptFlags"],[2742,"impl-OptFlags"],[2982,"impl-LazyFileListReader-for-LazyCsvReader"],[2983,"impl-LazyCsvReader"],[2984,"impl-LazyJsonLineReader"],[2985,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3001,"impl-LazyCsvReader"],[3002,"impl-LazyFileListReader-for-LazyCsvReader"],[3003,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3004,"impl-LazyJsonLineReader"],[3367,"impl-Debug-for-Duration"],[3368,"impl-Display-for-Duration"],[3371,"impl-Debug-for-JoinType"],[3372,"impl-Display-for-JoinType"],[3373,"impl-Debug-for-JoinValidation"],[3374,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJQKCgEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAHAGUAAwBrAAAAbQAZAIgAGwClAAMAqgAIALQADgDEABUA2wAGAOMAKAANAQkAGAEQACoBBwA0ARoAUAEDAFUBAABXASsAhAEBAIoBAACNAQEAkQEAAJcBAACZAQAApAEAAKcBAACuAQEAsQEBALYBAAC5AQAAwwFKABACAAASAgAAFAIBABoCAAAhAlkAfgIAAJgCDQCnAmUADwMAABEDJAA3AwAAOQMAAD8DAQBCAxUAWQM4AJoDAACdAwEAowMAAKkDAACsAyYA1AMAAOQDDAD0AwAA9gMCAPoDCAAMBAMAFQQAABoEAwAgBAAAIgQAACcEAQAsBAQANAQBADcEEgBNBAEAUAQAAFIEJAChBAIApQQBAKkEAAC7BAAAwwQAANAEAADTBAUA3AQAAN8EAADkBAAA8AQAAPMEAgD7BAIA/wQDAAgFAQAMBQIAEQUAABMFAQAZBQAAIAUAACIFAQApBQAAKwUAADMFAQA5BQAAOwUAAD0FAABCBQIAXAUFAGMFHACJBQAAkAUAAJcFAACcBQAAngUBAKEFAACnBQEArQUAAK8FAACxBQIAuAUeANgFCgDnBUkAMwYAADUGMgBzBgAAdQYAAHcGJgChBgEApgYAALMGAAC3BgEAvAYTANIGAADUBgAA1gYBANkGAQDcBgYA5AZIAC4HAwAzBwIAOAcCAD4HAwBGBwEATwcCAFUHAABXBwAAZAcAAHMHAwB7B0cBxAgBAMcIHADlCAEA6AgnABEJAQAUCQcAIAkAAC4JAAA7CQEAQgkBAE0JAgBRCQMAWgkDAGIJBwBrCRsAiQkAAIsJAwCSCREApQkDAKwJAgCyCQAAtwkCALwJAQDcCQMA7wkDAPYJAQD/CQIAAwoJABAKAAASCgAAGgoAAB0KFAAzCgEAOAoaAFcKAQBbCgAAYAoAAGQKGACCCgMAhwoGAJ4KAACgCgEAowoEAKsKAQC2CgAAvQoCAMUKAQDICgwA4woAAOsKAADtCgEA8goBAPUKAAD3CgAA+woAAAALAwAFCwUADgsBABQLAwAgCwMAJQsBACoLAwAvCwAAMgsAADsLAABACwEASgsBAE0LCABXCx4AeAsAAHoLAAB9CwEAgAsJAIsLAACNCwEAlwsBAKALAQCnCwAAqgsBALsLAQDICwEAzwsHANoLAADdCwEA4AsAAOILAwDoCwAA6wsAAO8LAwD3CwAA+QsGAAMMAgAHDAAACgwKABYMAgAbDAAAHQwAACMMEwA6DFoAmQyLACYNEwA+DQAATQ0AAE8NEQBiDQAAZQ0RAIkNAgCNDQIAkQ0AAJQNAwCbDQUAog0BAKYNAACpDQIArQ0BALENAACzDQEAuA0VAM8NdQBGDgQATA4rAA=="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHNNHHHHHHHHHNHHNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[235,"polars_ops::prelude"],[237,"polars_ops::series"],[294,"polars_ops::chunked_array::binary"],[295,"polars_core::datatypes"],[296,"polars_ops::chunked_array::binary::namespace"],[297,"polars_ops::chunked_array::scatter"],[298,"polars_utils::index"],[299,"polars_core::series"],[300,"polars_error"],[301,"core::marker"],[302,"core::option"],[303,"core::iter::traits::collect"],[304,"polars_ops::chunked_array::list::namespace"],[305,"polars_core::datatypes::aliases"],[306,"polars_core::frame::column"],[307,"polars_core::chunked_array::ops::sort::options"],[308,"polars_core::frame"],[309,"dyn_clone::sealed"],[310,"polars_utils::pl_str"],[311,"polars_ops::frame::join::hash_join"],[312,"polars_ops::frame::join::args"],[313,"polars_ops::frame::join::cross_join"],[314,"core::fmt"],[315,"core::convert"],[316,"core::hash"],[317,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[318,"polars_arrow::array::primitive"],[319,"alloc::string"],[320,"core::result"],[321,"compact_str"],[322,"core::any"],[323,"polars_ops::series::ops::arg_min_max"],[324,"polars_ops::series::ops"],[325,"polars_core::chunked_array::ops::search_sorted"],[326,"polars_ops::series::ops::various"],[327,"polars_ops::frame::join::general"],[328,"polars_ops::series::ops::clip"],[329,"polars_ops::series::ops::horizontal"],[330,"polars_ops::series::ops::index"],[331,"polars_ops::series::ops::bitwise"],[332,"polars_ops::series::ops::negate"],[333,"polars_ops::series::ops::not"],[334,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`000447651476566514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222````2222Gh033333333`00`````````3``33300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}0{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0>>{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00??{{CbDb}{{Af{Ad}}}}1{dc{}}{{{d{Ad}}}{{Af{Ad}}}}0{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,294],[1,"reference"],[8,"BinaryChunked",295],[10,"BinaryNameSpaceImpl",4,296],[1,"u8"],[1,"slice"],[8,"BooleanChunked",295],[10,"ChunkedSet",4,297],[8,"IdxSize",298],[5,"Series",299],[8,"PolarsResult",300],[10,"Copy",301],[17,"Item"],[6,"Option",302],[10,"IntoIterator",303],[8,"UInt32Chunked",295],[10,"AsList",25],[8,"ListChunked",295],[10,"ListNameSpaceImpl",25,304],[1,"str"],[1,"bool"],[8,"StringChunked",295],[8,"IdxCa",305],[6,"Column",306],[1,"i64"],[1,"usize"],[5,"SortOptions",307],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",308],[5,"Private",309],[1,"unit"],[5,"PlSmallStr",310],[10,"JoinDispatch",80,311],[5,"JoinArgs",80,312],[0,"mut"],[6,"JoinCoalesce",80,312],[6,"JoinType",80,312],[6,"JoinValidation",80,312],[10,"CrossJoin",80,313],[1,"tuple"],[8,"ChunkJoinOptIds",80,312],[5,"Formatter",314],[8,"Result",314],[10,"DataFrameJoinOps",80],[10,"Into",315],[10,"Hasher",316],[10,"SeriesJoin",80,317],[8,"InnerJoinIds",80,312],[5,"PrimitiveArray",318],[8,"LeftJoinIds",80,312],[5,"String",319],[6,"Result",320],[5,"CompactString",321],[6,"ToCompactStringError",321],[5,"TypeId",322],[10,"ArgAgg",237,323],[10,"SeriesSealed",237,324],[6,"SearchSortedSide",237,325],[10,"SeriesMethods",237,326],[5,"Error",314]],"r":[[4,294],[5,296],[6,297],[26,304],[80,312],[81,312],[84,313],[88,312],[89,312],[90,312],[91,311],[93,312],[94,312],[97,312],[103,317],[108,327],[111,327],[114,327],[144,311],[235,80],[236,76],[238,323],[241,325],[242,326],[243,324],[250,328],[251,328],[252,328],[256,329],[257,330],[258,331],[259,331],[274,330],[277,331],[278,331],[279,329],[280,329],[281,329],[282,332],[283,333],[284,334],[285,329],[287,331],[288,331]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPgAEQAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAIAzAAAAM4AIADwAAUA+AACAP4AEAAQAQEAFgEOAA=="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[56,"polars_time::chunkedarray::string::infer"],[82,"polars_time::prelude"],[283,"polars_time::series"],[304,"polars_utils::pl_str"],[305,"chrono::naive::datetime"],[306,"polars_time::windows::duration"],[307,"polars_time::windows::group_by"],[308,"polars_core::datatypes::time_unit"],[309,"polars_arrow::legacy::time_zone"],[310,"core::option"],[311,"polars_core::chunked_array::logical::datetime"],[312,"polars_error"],[313,"polars_time::round"],[314,"polars_core::datatypes"],[315,"chrono::naive::time"],[316,"polars_core::chunked_array::logical::time"],[317,"polars_time::truncate"],[318,"polars_time::upsample"],[319,"polars_core::frame"],[320,"polars_core::utils"],[321,"dyn_clone::sealed"],[322,"polars_time::chunkedarray::string::patterns"],[323,"core::fmt"],[324,"core::hash"],[325,"core::result"],[326,"core::any"],[327,"core::clone"],[328,"polars_time::windows::bounds"],[329,"polars_time::windows::window"],[330,"core::cmp"],[331,"polars_core::datatypes::dtype"],[332,"polars_core::frame::group_by::proxy"],[333,"alloc::vec"],[334,"alloc::string"],[335,"core::ops::function"],[336,"compact_str"],[337,"polars_core::series"],[338,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn11111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",304],[5,"NaiveDateTime",305],[5,"Duration",82,306],[6,"ClosedWindow",82,307],[6,"TimeUnit",308],[6,"Tz",309],[1,"reference"],[6,"Option",310],[8,"DatetimeChunked",311],[8,"PolarsResult",312],[1,"bool"],[10,"PolarsRound",0,313],[8,"StringChunked",314],[5,"NaiveTime",315],[8,"TimeChunked",316],[10,"PolarsTruncate",0,317],[10,"PolarsUpsample",0,318],[1,"str"],[5,"DataFrame",319],[10,"IntoVec",320],[5,"Private",321],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,322],[1,"usize"],[5,"Formatter",323],[8,"Result",323],[10,"Hasher",324],[6,"Result",325],[5,"TypeId",326],[5,"DatetimeInfer",56],[10,"Clone",327],[10,"PolarsNumericType",314],[10,"StrpTimeParser",56],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",56],[1,"i64"],[5,"Bounds",82,328],[6,"Label",82,307],[6,"StartBy",82,307],[5,"Window",82,329],[6,"Ordering",330],[6,"DataType",331],[5,"BoundsIter",82,329],[8,"GroupsSlice",332],[8,"TimeZone",331],[5,"Vec",333],[1,"tuple"],[5,"String",334],[17,"Output"],[10,"Fn",335],[5,"CompactString",336],[6,"ToCompactStringError",336],[1,"u32"],[10,"AsSeries",283],[5,"Series",337],[10,"TemporalMethods",283],[8,"Int32Chunked",314],[8,"Int8Chunked",314],[8,"BooleanChunked",314],[8,"Int16Chunked",314]],"r":[[1,307],[2,306],[5,313],[6,317],[7,318],[9,329],[11,338],[12,338],[18,338],[22,24],[30,322],[83,328],[84,329],[85,307],[88,306],[90,307],[98,307],[100,283],[104,329],[173,306],[174,306],[204,307],[205,307]],"b":[[188,"impl-Debug-for-Duration"],[189,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAFwAAAAkADQAFABQAAAAXABcAMAACADQAEQBHAAEASgATAF8ACQBqAFcAyQAAAMsAAQDPAAoA4QABAOUAAgDpAAAA7AACAPAAAQD1AAgA/wAAAAEBAAADARsAIwEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[224,"polars_utils::contention_pool"],[239,"polars_utils::cpuid"],[241,"polars_utils::fixedringbuffer"],[264,"polars_utils::float"],[270,"polars_utils::floor_divmod"],[272,"polars_utils::functions"],[276,"polars_utils::hashing"],[308,"polars_utils::idx_vec"],[352,"polars_utils::index"],[415,"polars_utils::io"],[418,"polars_utils::itertools"],[428,"polars_utils::itertools::enumerate_idx"],[454,"polars_utils::mem"],[459,"polars_utils::min_max"],[466,"polars_utils::mmap"],[565,"polars_utils::nulls"],[570,"polars_utils::ord"],[572,"polars_utils::partitioned"],[591,"polars_utils::pl_str"],[649,"polars_utils::priority"],[672,"polars_utils::slice"],[686,"polars_utils::sort"],[688,"polars_utils::sync"],[715,"polars_utils::sys"],[729,"polars_utils::total_ord"],[779,"polars_utils::unwrap"],[781,"polars_utils::vec"],[795,"num_traits"],[796,"core::cmp"],[797,"core::marker"],[798,"core::fmt"],[799,"core::clone"],[800,"core::result"],[801,"serde::de"],[802,"core::option"],[803,"core::hash"],[804,"core::default"],[805,"core::ops::function"],[806,"serde::ser"],[807,"core::any"],[808,"core::borrow"],[809,"alloc::sync"],[810,"alloc::vec"],[811,"core::convert"],[812,"core::ops::range"],[813,"core::iter::traits::collect"],[814,"core::slice::iter"],[815,"polars_error"],[816,"std::path"],[817,"std::io::error"],[818,"std::fs"],[819,"core::iter::traits::iterator"],[820,"core::ops::arith"],[821,"num_traits::cast"],[822,"num_traits::identities"],[823,"core::iter::traits::exact_size"],[824,"core::iter::traits::double_ended"],[825,"memmap2"],[826,"memmap2::advice"],[827,"polars_utils::mmap::private"],[828,"bytes::bytes"],[829,"std::io"],[830,"hashbrown::map"],[831,"hashbrown::raw_entry"],[832,"std::ffi::os_str"],[833,"compact_str"],[834,"alloc::string"],[835,"alloc::boxed"],[836,"alloc::borrow"],[837,"core::mem::maybe_uninit"],[838,"core::slice::index"],[839,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000101111110010111110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000```````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf11111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`101010101010111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`0000000000000000000000000000000000000000000000000000000`O`000000000000000000000`````ObOf0Oj`Ol0On0```A@d0000000000000000000000000``A@f00000000000AAf````0`A@l0``00000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}0{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{Ah{Aj{c}}}}}{{Cd{An}}}{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{Ab{{Al{c}}}{}}{{{Al{Dh}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{El{c}}}{}}{cc{}}{Enc{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}7{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}000`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}987{{{Al{Ah{Fd{c}}}}}B`{}}{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}0{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{Ah{Gj{c}}}}}B`{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}8{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}0{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{cc{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{{{Fn{c}}}{{Gj{c}}}{}}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}0{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{HfHj}{cc{}}0{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:{{{Al{Kl}}}{{Al{c}}}{}}111{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{AhKj}}}B`}{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}0{KlKn}11{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{N`}}}}0{Al{{Al{c}}}{}}1{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{N`}}Eh}}{{Al{Al{c}}}Bl{}}0{{{Al{Ml}}{Al{AhBn}}}C`}0{NbMl}{{{Al{Nd}}}Ml}{NdMl}{cc{}}{{{Al{N`}}}Ml}{cMl{{H`{}{{Gn{Ml}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{Nf}}}}}}{cMl{{H`{}{{Gn{Nd}}}}}}{cMl{{H`{}{{Gn{{Nh{N`}}}}}}}}{cMl{{H`{}{{Gn{{Al{Nf}}}}}}}}{cMl{{H`{}{{Gn{{Al{N`}}}}}}}}{cMl{{H`{}{{Gn{{Nj{N`}}}}}}}}88:{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNd}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNd}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NbNl}}}}{AlDd}{{{Al{AhMl}}Nf}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{N`}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}0{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}0{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{cc{}}{{}{{A@d{c}}}{}}0{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}44{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}?<;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}0{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{EbEd}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",795],[10,"PartialOrd",796],[10,"Copy",797],[10,"Debug",798],[10,"Send",797],[10,"Sync",797],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",799],[6,"Ordering",796],[6,"Result",800],[10,"Deserializer",801],[10,"Deserialize",801],[1,"bool"],[5,"Formatter",798],[8,"Result",798],[1,"array"],[6,"Option",802],[10,"Hasher",803],[10,"Default",804],[17,"Output"],[10,"FnOnce",805],[10,"Serializer",806],[10,"Serialize",806],[10,"FnMut",805],[5,"TypeId",807],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",796],[5,"FastFixedCache",161],[10,"Hash",803],[10,"Eq",796],[5,"FastCachedFunc",161],[10,"Sized",797],[10,"Borrow",808],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",224],[5,"FixedRingBuffer",241],[1,"tuple"],[10,"IsFloat",264],[10,"FloorDivMod",270],[5,"Arc",809],[5,"Vec",810],[10,"AsRef",811],[5,"Range",812],[5,"BytesHash",276],[10,"DirtyHash",276],[1,"u8"],[5,"UnitVec",308],[10,"PartialEq",796],[17,"Item"],[10,"IntoIterator",813],[5,"Iter",814],[5,"IterMut",814],[8,"IdxSize",352],[8,"PolarsResult",815],[5,"NullableIdxSize",352],[5,"ChunkId",352],[10,"Indexable",352],[10,"IsNull",565],[10,"Bounded",352],[10,"NullCount",352],[10,"ToIdx",352],[5,"Path",816],[5,"Error",817],[6,"PolarsError",815],[5,"File",818],[10,"Itertools",418],[5,"EnumerateIdx",428],[10,"Iterator",819],[10,"Add",820],[10,"FromPrimitive",821],[10,"AddAssign",820],[10,"One",822],[10,"ExactSizeIterator",823],[10,"Zero",822],[10,"DoubleEndedIterator",824],[10,"MinMax",459],[5,"Mmap",466,825],[6,"Advice",826],[5,"MMapSemaphore",466],[5,"MemSlice",466,827],[5,"MemReader",466],[5,"Error",798],[5,"Bytes",828],[8,"Result",817],[10,"Read",829],[5,"MmapMut",825],[10,"MmapAsRawDesc",825],[5,"MmapOptions",825],[5,"RemapOptions",825],[6,"SeekFrom",829],[17,"Inner"],[5,"PartitionedHashMap",572],[5,"HashMap",830],[5,"RawEntryBuilder",831],[5,"RawEntryBuilderMut",831],[5,"PlSmallStr",591],[5,"OsStr",832],[1,"str"],[5,"CompactString",833],[5,"String",834],[1,"char"],[5,"Box",835],[6,"Cow",836],[6,"ToCompactStringError",833],[5,"Arguments",798],[5,"Priority",649],[10,"Slice2Uninit",672],[20,"MaybeUninit",837],[10,"GetSaferUnchecked",672],[10,"SliceIndex",838],[10,"SortedSlice",672],[10,"Extrema",672],[10,"SliceAble",672],[10,"TotalOrd",729],[5,"ThreadPool",839],[5,"SyncPtr",688],[5,"MemInfo",715],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",729],[10,"TotalEq",729],[10,"TotalHash",729],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",729],[10,"UnwrapUncheckedRelease",779],[17,"ItemIn"],[10,"ConvertVec",781],[10,"ResizeFaster",781],[10,"IntoRawParts",781],[10,"PushUnchecked",781],[10,"CapacityByFactor",781],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,352],[1,352],[469,827],[470,825]],"b":[[333,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[334,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[594,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[595,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[616,"impl-Display-for-PlSmallStr"],[617,"impl-Debug-for-PlSmallStr"],[618,"impl-From%3CCompactString%3E-for-PlSmallStr"],[619,"impl-From%3C%26String%3E-for-PlSmallStr"],[620,"impl-From%3CString%3E-for-PlSmallStr"],[622,"impl-From%3C%26str%3E-for-PlSmallStr"],[623,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[624,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[627,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[628,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[629,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[630,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJ4CTwAAAAgACgBaAGcAAABpAAEAbAACAHEAFgCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAgDQAAAA0wAAANgADgDoAAEA6wAGAPQABgD9AAAA/wADAAUBAwAKAQoAFgEOACYBAgAqAQsANwEVAE4BAwBTAQYAWwEmAIQBAACGAQQAjQEVAKQBAACmAQQArgEJALkBAAC7AQIAvwEHAMwBCADaASYAAwIAAAgCAgAPAgMAGgIDAB8CAgAjAgAAJQIBACgCDAA2AgQAPQIFAEQCAgBIAgkAUwIaAG8CDQB+AgsAiwINAJoCAACcAgoAqQIEAK8CAACyAgYAugIEAMACAwDFAgAAxwIFAM4CBADVAgAA1wIDAN8CAwDlAgsA8gIDAPcCFQAOAwQAFAMCABgDAAAaAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[397381,197900,51164,83557,9480,3376,8539,26430]}